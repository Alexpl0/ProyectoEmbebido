

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Aug 14 17:36:25 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,space=0,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    18                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    19                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    23                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    24                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    25                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    26                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    27                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    29                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=3
    30                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    31                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    32                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    33                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=2
    34                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    35                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    36                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    37                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    38                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=2
    46                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    47                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    48                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2,group=2
    53                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,space=0,delta=2
    57                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    60                           	psect	text6_split_1,local,class=CODE,space=0,merge=1,delta=2
    61                           	dabs	1,0x7E,2
    62     0000                     
    63                           ; Generated 12/10/2023 GMT
    64                           ; 
    65                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F877A Definitions
    95                           ; 
    96                           ; SFR Addresses
    97     0004                     fsr             equ	4
    98     0004                     fsr0            equ	4
    99     0000                     indf            equ	0
   100     0000                     indf0           equ	0
   101     0002                     pc              equ	2
   102     0002                     pcl             equ	2
   103     000A                     pclath          equ	10
   104     0003                     status          equ	3
   105     0000                     INDF            equ	0	;# 
   106     0001                     TMR0            equ	1	;# 
   107     0002                     PCL             equ	2	;# 
   108     0003                     STATUS          equ	3	;# 
   109     0004                     FSR             equ	4	;# 
   110     0005                     PORTA           equ	5	;# 
   111     0006                     PORTB           equ	6	;# 
   112     0007                     PORTC           equ	7	;# 
   113     0008                     PORTD           equ	8	;# 
   114     0009                     PORTE           equ	9	;# 
   115     000A                     PCLATH          equ	10	;# 
   116     000B                     INTCON          equ	11	;# 
   117     000C                     PIR1            equ	12	;# 
   118     000D                     PIR2            equ	13	;# 
   119     000E                     TMR1            equ	14	;# 
   120     000E                     TMR1L           equ	14	;# 
   121     000F                     TMR1H           equ	15	;# 
   122     0010                     T1CON           equ	16	;# 
   123     0011                     TMR2            equ	17	;# 
   124     0012                     T2CON           equ	18	;# 
   125     0013                     SSPBUF          equ	19	;# 
   126     0014                     SSPCON          equ	20	;# 
   127     0015                     CCPR1           equ	21	;# 
   128     0015                     CCPR1L          equ	21	;# 
   129     0016                     CCPR1H          equ	22	;# 
   130     0017                     CCP1CON         equ	23	;# 
   131     0018                     RCSTA           equ	24	;# 
   132     0019                     TXREG           equ	25	;# 
   133     001A                     RCREG           equ	26	;# 
   134     001B                     CCPR2           equ	27	;# 
   135     001B                     CCPR2L          equ	27	;# 
   136     001C                     CCPR2H          equ	28	;# 
   137     001D                     CCP2CON         equ	29	;# 
   138     001E                     ADRESH          equ	30	;# 
   139     001F                     ADCON0          equ	31	;# 
   140     0081                     OPTION_REG      equ	129	;# 
   141     0085                     TRISA           equ	133	;# 
   142     0086                     TRISB           equ	134	;# 
   143     0087                     TRISC           equ	135	;# 
   144     0088                     TRISD           equ	136	;# 
   145     0089                     TRISE           equ	137	;# 
   146     008C                     PIE1            equ	140	;# 
   147     008D                     PIE2            equ	141	;# 
   148     008E                     PCON            equ	142	;# 
   149     0091                     SSPCON2         equ	145	;# 
   150     0092                     PR2             equ	146	;# 
   151     0093                     SSPADD          equ	147	;# 
   152     0094                     SSPSTAT         equ	148	;# 
   153     0098                     TXSTA           equ	152	;# 
   154     0099                     SPBRG           equ	153	;# 
   155     009C                     CMCON           equ	156	;# 
   156     009D                     CVRCON          equ	157	;# 
   157     009E                     ADRESL          equ	158	;# 
   158     009F                     ADCON1          equ	159	;# 
   159     010C                     EEDATA          equ	268	;# 
   160     010D                     EEADR           equ	269	;# 
   161     010E                     EEDATH          equ	270	;# 
   162     010F                     EEADRH          equ	271	;# 
   163     018C                     EECON1          equ	396	;# 
   164     018D                     EECON2          equ	397	;# 
   165     0000                     INDF            equ	0	;# 
   166     0001                     TMR0            equ	1	;# 
   167     0002                     PCL             equ	2	;# 
   168     0003                     STATUS          equ	3	;# 
   169     0004                     FSR             equ	4	;# 
   170     0005                     PORTA           equ	5	;# 
   171     0006                     PORTB           equ	6	;# 
   172     0007                     PORTC           equ	7	;# 
   173     0008                     PORTD           equ	8	;# 
   174     0009                     PORTE           equ	9	;# 
   175     000A                     PCLATH          equ	10	;# 
   176     000B                     INTCON          equ	11	;# 
   177     000C                     PIR1            equ	12	;# 
   178     000D                     PIR2            equ	13	;# 
   179     000E                     TMR1            equ	14	;# 
   180     000E                     TMR1L           equ	14	;# 
   181     000F                     TMR1H           equ	15	;# 
   182     0010                     T1CON           equ	16	;# 
   183     0011                     TMR2            equ	17	;# 
   184     0012                     T2CON           equ	18	;# 
   185     0013                     SSPBUF          equ	19	;# 
   186     0014                     SSPCON          equ	20	;# 
   187     0015                     CCPR1           equ	21	;# 
   188     0015                     CCPR1L          equ	21	;# 
   189     0016                     CCPR1H          equ	22	;# 
   190     0017                     CCP1CON         equ	23	;# 
   191     0018                     RCSTA           equ	24	;# 
   192     0019                     TXREG           equ	25	;# 
   193     001A                     RCREG           equ	26	;# 
   194     001B                     CCPR2           equ	27	;# 
   195     001B                     CCPR2L          equ	27	;# 
   196     001C                     CCPR2H          equ	28	;# 
   197     001D                     CCP2CON         equ	29	;# 
   198     001E                     ADRESH          equ	30	;# 
   199     001F                     ADCON0          equ	31	;# 
   200     0081                     OPTION_REG      equ	129	;# 
   201     0085                     TRISA           equ	133	;# 
   202     0086                     TRISB           equ	134	;# 
   203     0087                     TRISC           equ	135	;# 
   204     0088                     TRISD           equ	136	;# 
   205     0089                     TRISE           equ	137	;# 
   206     008C                     PIE1            equ	140	;# 
   207     008D                     PIE2            equ	141	;# 
   208     008E                     PCON            equ	142	;# 
   209     0091                     SSPCON2         equ	145	;# 
   210     0092                     PR2             equ	146	;# 
   211     0093                     SSPADD          equ	147	;# 
   212     0094                     SSPSTAT         equ	148	;# 
   213     0098                     TXSTA           equ	152	;# 
   214     0099                     SPBRG           equ	153	;# 
   215     009C                     CMCON           equ	156	;# 
   216     009D                     CVRCON          equ	157	;# 
   217     009E                     ADRESL          equ	158	;# 
   218     009F                     ADCON1          equ	159	;# 
   219     010C                     EEDATA          equ	268	;# 
   220     010D                     EEADR           equ	269	;# 
   221     010E                     EEDATH          equ	270	;# 
   222     010F                     EEADRH          equ	271	;# 
   223     018C                     EECON1          equ	396	;# 
   224     018D                     EECON2          equ	397	;# 
   225                           
   226                           	psect	idataBANK3
   227     07FF                     __pidataBANK3:
   228                           
   229                           ;initializer for _servo_needs_update
   230     07FF  3401               	retlw	1
   231     0008                     _PORTD          set	8
   232     0006                     _PORTB          set	6
   233     001A                     _RCREG          set	26
   234     001E                     _ADRESH         set	30
   235     001F                     _ADCON0         set	31
   236     0019                     _TXREG          set	25
   237     0018                     _RCSTA          set	24
   238     0041                     _RD1            set	65
   239     0040                     _RD0            set	64
   240     0030                     _RB0            set	48
   241     005F                     _GIE            set	95
   242     005E                     _PEIE           set	94
   243     0065                     _RCIF           set	101
   244     005C                     _INTE           set	92
   245     0059                     _INTF           set	89
   246     003A                     _RC2            set	58
   247     00FA                     _GO_nDONE       set	250
   248     0064                     _TXIF           set	100
   249     0088                     _TRISD          set	136
   250     0086                     _TRISB          set	134
   251     0081                     _OPTION_REGbits set	129
   252     009E                     _ADRESL         set	158
   253     009F                     _ADCON1         set	159
   254     0098                     _TXSTA          set	152
   255     0099                     _SPBRG          set	153
   256     0465                     _RCIE           set	1125
   257     043A                     _TRISC2         set	1082
   258     0430                     _TRISB0         set	1072
   259     0428                     _TRISA0         set	1064
   260     043E                     _TRISC6         set	1086
   261     043F                     _TRISC7         set	1087
   262                           
   263                           	psect	strings
   264     1000                     __pstrings:
   265     1000                     stringtab:
   266     1000                     __stringtab:
   267                           
   268                           ;	String table - string pointers are 1 byte each
   269     1000  1BFF               	btfsc	btemp+1,7
   270     1001  280A               	ljmp	stringcode
   271     1002  1383               	bcf	3,7
   272     1003  187F               	btfsc	btemp+1,0
   273     1004  1783               	bsf	3,7
   274     1005  0800               	movf	0,w
   275     1006  0A84               	incf	4,f
   276     1007  1903               	skipnz
   277     1008  0AFF               	incf	btemp+1,f
   278     1009  0008               	return
   279     100A                     stringcode:
   280     100A                     stringdir:
   281     100A  3010               	movlw	high stringdir
   282     100B  008A               	movwf	10
   283     100C  0804               	movf	4,w
   284     100D  0A84               	incf	4,f
   285     100E  0782               	addwf	2,f
   286     100F                     __stringbase:
   287     100F  3400               	retlw	0
   288     1010                     __end_of__stringtab:
   289     1010                     STR_4:
   290     1010  3453               	retlw	83	;'S'
   291     1011  3465               	retlw	101	;'e'
   292     1012  3472               	retlw	114	;'r'
   293     1013  3476               	retlw	118	;'v'
   294     1014  346F               	retlw	111	;'o'
   295     1015  3420               	retlw	32	;' '
   296     1016  3466               	retlw	102	;'f'
   297     1017  3475               	retlw	117	;'u'
   298     1018  346E               	retlw	110	;'n'
   299     1019  3463               	retlw	99	;'c'
   300     101A  3469               	retlw	105	;'i'
   301     101B  346F               	retlw	111	;'o'
   302     101C  346E               	retlw	110	;'n'
   303     101D  3461               	retlw	97	;'a'
   304     101E  346E               	retlw	110	;'n'
   305     101F  3464               	retlw	100	;'d'
   306     1020  346F               	retlw	111	;'o'
   307     1021  3420               	retlw	32	;' '
   308     1022  3463               	retlw	99	;'c'
   309     1023  346F               	retlw	111	;'o'
   310     1024  3472               	retlw	114	;'r'
   311     1025  3472               	retlw	114	;'r'
   312     1026  3465               	retlw	101	;'e'
   313     1027  3463               	retlw	99	;'c'
   314     1028  3474               	retlw	116	;'t'
   315     1029  3461               	retlw	97	;'a'
   316     102A  346D               	retlw	109	;'m'
   317     102B  3465               	retlw	101	;'e'
   318     102C  346E               	retlw	110	;'n'
   319     102D  3474               	retlw	116	;'t'
   320     102E  3465               	retlw	101	;'e'
   321     102F  340A               	retlw	10
   322     1030  3400               	retlw	0
   323     1031                     STR_5:
   324     1031  3443               	retlw	67	;'C'
   325     1032  346F               	retlw	111	;'o'
   326     1033  346D               	retlw	109	;'m'
   327     1034  3461               	retlw	97	;'a'
   328     1035  346E               	retlw	110	;'n'
   329     1036  3464               	retlw	100	;'d'
   330     1037  346F               	retlw	111	;'o'
   331     1038  3473               	retlw	115	;'s'
   332     1039  343A               	retlw	58	;':'
   333     103A  3420               	retlw	32	;' '
   334     103B  3441               	retlw	65	;'A'
   335     103C  343D               	retlw	61	;'='
   336     103D  3441               	retlw	65	;'A'
   337     103E  3462               	retlw	98	;'b'
   338     103F  3472               	retlw	114	;'r'
   339     1040  3469               	retlw	105	;'i'
   340     1041  3472               	retlw	114	;'r'
   341     1042  342C               	retlw	44	;','
   342     1043  3420               	retlw	32	;' '
   343     1044  3443               	retlw	67	;'C'
   344     1045  343D               	retlw	61	;'='
   345     1046  3443               	retlw	67	;'C'
   346     1047  3465               	retlw	101	;'e'
   347     1048  3472               	retlw	114	;'r'
   348     1049  3472               	retlw	114	;'r'
   349     104A  3461               	retlw	97	;'a'
   350     104B  3472               	retlw	114	;'r'
   351     104C  340A               	retlw	10
   352     104D  3400               	retlw	0
   353     104E                     STR_3:
   354     104E  343D               	retlw	61	;'='
   355     104F  343D               	retlw	61	;'='
   356     1050  343D               	retlw	61	;'='
   357     1051  3420               	retlw	32	;' '
   358     1052  3453               	retlw	83	;'S'
   359     1053  3449               	retlw	73	;'I'
   360     1054  3453               	retlw	83	;'S'
   361     1055  3454               	retlw	84	;'T'
   362     1056  3445               	retlw	69	;'E'
   363     1057  344D               	retlw	77	;'M'
   364     1058  3441               	retlw	65	;'A'
   365     1059  3420               	retlw	32	;' '
   366     105A  3449               	retlw	73	;'I'
   367     105B  344E               	retlw	78	;'N'
   368     105C  3449               	retlw	73	;'I'
   369     105D  3443               	retlw	67	;'C'
   370     105E  3449               	retlw	73	;'I'
   371     105F  3441               	retlw	65	;'A'
   372     1060  3444               	retlw	68	;'D'
   373     1061  344F               	retlw	79	;'O'
   374     1062  3420               	retlw	32	;' '
   375     1063  343D               	retlw	61	;'='
   376     1064  343D               	retlw	61	;'='
   377     1065  343D               	retlw	61	;'='
   378     1066  340A               	retlw	10
   379     1067  3400               	retlw	0
   380     1068                     STR_6:
   381     1068  3442               	retlw	66	;'B'
   382     1069  346F               	retlw	111	;'o'
   383     106A  3474               	retlw	116	;'t'
   384     106B  346F               	retlw	111	;'o'
   385     106C  346E               	retlw	110	;'n'
   386     106D  3420               	retlw	32	;' '
   387     106E  3470               	retlw	112	;'p'
   388     106F  3472               	retlw	114	;'r'
   389     1070  3465               	retlw	101	;'e'
   390     1071  3473               	retlw	115	;'s'
   391     1072  3469               	retlw	105	;'i'
   392     1073  346F               	retlw	111	;'o'
   393     1074  346E               	retlw	110	;'n'
   394     1075  3461               	retlw	97	;'a'
   395     1076  3464               	retlw	100	;'d'
   396     1077  346F               	retlw	111	;'o'
   397     1078  340A               	retlw	10
   398     1079  3400               	retlw	0
   399     107A                     STR_2:
   400     107A  3443               	retlw	67	;'C'
   401     107B  346F               	retlw	111	;'o'
   402     107C  346D               	retlw	109	;'m'
   403     107D  3461               	retlw	97	;'a'
   404     107E  346E               	retlw	110	;'n'
   405     107F  3464               	retlw	100	;'d'
   406     1080  346F               	retlw	111	;'o'
   407     1081  343A               	retlw	58	;':'
   408     1082  3420               	retlw	32	;' '
   409     1083  3443               	retlw	67	;'C'
   410     1084  3445               	retlw	69	;'E'
   411     1085  3452               	retlw	82	;'R'
   412     1086  3452               	retlw	82	;'R'
   413     1087  3441               	retlw	65	;'A'
   414     1088  3452               	retlw	82	;'R'
   415     1089  340A               	retlw	10
   416     108A  3400               	retlw	0
   417     108B                     STR_1:
   418     108B  3443               	retlw	67	;'C'
   419     108C  346F               	retlw	111	;'o'
   420     108D  346D               	retlw	109	;'m'
   421     108E  3461               	retlw	97	;'a'
   422     108F  346E               	retlw	110	;'n'
   423     1090  3464               	retlw	100	;'d'
   424     1091  346F               	retlw	111	;'o'
   425     1092  343A               	retlw	58	;':'
   426     1093  3420               	retlw	32	;' '
   427     1094  3441               	retlw	65	;'A'
   428     1095  3442               	retlw	66	;'B'
   429     1096  3452               	retlw	82	;'R'
   430     1097  3449               	retlw	73	;'I'
   431     1098  3452               	retlw	82	;'R'
   432     1099  340A               	retlw	10
   433     109A  3400               	retlw	0
   434     109B                     STR_9:
   435     109B  3454               	retlw	84	;'T'
   436     109C  343A               	retlw	58	;':'
   437     109D  3425               	retlw	37	;'%'
   438     109E  342E               	retlw	46	;'.'
   439     109F  3431               	retlw	49	;'1'
   440     10A0  3466               	retlw	102	;'f'
   441     10A1  340A               	retlw	10
   442     10A2  3400               	retlw	0
   443     10A3                     STR_11:
   444     10A3  3446               	retlw	70	;'F'
   445     10A4  343A               	retlw	58	;':'
   446     10A5  3430               	retlw	48	;'0'
   447     10A6  340A               	retlw	10
   448     10A7  3400               	retlw	0
   449     10A8                     STR_10:
   450     10A8  3446               	retlw	70	;'F'
   451     10A9  343A               	retlw	58	;':'
   452     10AA  3431               	retlw	49	;'1'
   453     10AB  340A               	retlw	10
   454     10AC  3400               	retlw	0
   455     10AD                     STR_7:
   456     10AD  3453               	retlw	83	;'S'
   457     10AE  343A               	retlw	58	;':'
   458     10AF  3441               	retlw	65	;'A'
   459     10B0  340A               	retlw	10
   460     10B1  3400               	retlw	0
   461     10B2                     STR_8:
   462     10B2  3453               	retlw	83	;'S'
   463     10B3  343A               	retlw	58	;':'
   464     10B4  3443               	retlw	67	;'C'
   465     10B5  340A               	retlw	10
   466     10B6  3400               	retlw	0
   467     10B7                     STR_12:
   468     10B7  3469               	retlw	105	;'i'
   469     10B8  346E               	retlw	110	;'n'
   470     10B9  3466               	retlw	102	;'f'
   471     10BA  3400               	retlw	0
   472     10BB                     STR_15:
   473     10BB  346E               	retlw	110	;'n'
   474     10BC  3461               	retlw	97	;'a'
   475     10BD  346E               	retlw	110	;'n'
   476     10BE  3400               	retlw	0
   477     10BB                     STR_16          equ	STR_15
   478     10BB                     STR_17          equ	STR_15
   479     10B7                     STR_13          equ	STR_12
   480     10B7                     STR_14          equ	STR_12
   481                           
   482                           	psect	cinit
   483     0013                     start_initialization:	
   484                           ; #config settings
   485                           
   486     0013                     __initialization:
   487                           
   488                           ; Initialize objects allocated to BANK3
   489     0013  1683               	bsf	3,5	;RP0=1, select bank3
   490     0014  1703               	bsf	3,6	;RP1=1, select bank3
   491     0015  120A  118A  27FF  120A  118A  	fcall	__pidataBANK3	;fetch initializer
   492     001A  00CD               	movwf	__pdataBANK3& (0+127)
   493                           
   494                           ; Clear objects allocated to BANK3
   495     001B  1783               	bsf	3,7	;select IRP bank2
   496     001C  30BE               	movlw	low __pbssBANK3
   497     001D  0084               	movwf	4
   498     001E  30CD               	movlw	low (__pbssBANK3+15)
   499     001F  160A  158A  2287  120A  118A  	fcall	clear_ram0
   500                           
   501                           ; Clear objects allocated to BANK2
   502     0024  3010               	movlw	low __pbssBANK2
   503     0025  0084               	movwf	4
   504     0026  3060               	movlw	low (__pbssBANK2+80)
   505     0027  160A  158A  2287  120A  118A  	fcall	clear_ram0
   506                           
   507                           ; Clear objects allocated to BANK1
   508     002C  1683               	bsf	3,5	;RP0=1, select bank1
   509     002D  1303               	bcf	3,6	;RP1=0, select bank1
   510     002E  01EF               	clrf	__pbssBANK1& (0+127)
   511                           
   512                           ; Clear objects allocated to COMMON
   513     002F  01F7               	clrf	__pbssCOMMON& (0+127)
   514     0030  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   515     0031  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   516     0032  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   517     0033  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   518     0034                     end_of_initialization:	
   519                           ;End of C runtime variable initialization code
   520                           
   521     0034                     __end_of__initialization:
   522     0034  0183               	clrf	3
   523     0035  160A  118A  2A43   	ljmp	_main	;jump to C main() function
   524                           
   525                           	psect	bssCOMMON
   526     0077                     __pbssCOMMON:
   527     0077                     _width:
   528     0077                     	ds	2
   529     0079                     _prec:
   530     0079                     	ds	2
   531     007B                     _bluetoothData:
   532     007B                     	ds	1
   533                           
   534                           	psect	bssBANK1
   535     00EF                     __pbssBANK1:
   536     00EF                     _flags:
   537     00EF                     	ds	1
   538                           
   539                           	psect	bssBANK3
   540     01BE                     __pbssBANK3:
   541     01BE                     floorf@F521:
   542     01BE                     	ds	4
   543     01C2                     ___fpclassifyf@F465:
   544     01C2                     	ds	4
   545     01C6                     _temperature:
   546     01C6                     	ds	4
   547     01CA                     _ledBlinkCounter:
   548     01CA                     	ds	1
   549     01CB                     _fireAlarm:
   550     01CB                     	ds	1
   551     01CC                     _currentState:
   552     01CC                     	ds	1
   553                           
   554                           	psect	dataBANK3
   555     01CD                     __pdataBANK3:
   556     01CD                     _servo_needs_update:
   557     01CD                     	ds	1
   558                           
   559                           	psect	bssBANK2
   560     0110                     __pbssBANK2:
   561     0110                     _dbuf:
   562     0110                     	ds	80
   563                           
   564                           	psect	clrtext
   565     1A87                     clear_ram0:	
   566                           ;	Called with FSR containing the base address, and
   567                           ;	W with the last address+1
   568                           
   569     1A87  0064               	clrwdt	;clear the watchdog before getting into this loop
   570     1A88                     clrloop0:
   571     1A88  0180               	clrf	0	;clear RAM location pointed to by FSR
   572     1A89  0A84               	incf	4,f	;increment pointer
   573     1A8A  0604               	xorwf	4,w	;XOR with final address
   574     1A8B  1903               	btfsc	3,2	;have we reached the end yet?
   575     1A8C  3400               	retlw	0	;all done for this memory range, return
   576     1A8D  0604               	xorwf	4,w	;XOR again to restore value
   577     1A8E  2A88               	goto	clrloop0	;do the next byte
   578                           
   579                           	psect	cstackBANK3
   580     0190                     __pcstackBANK3:
   581     0190                     ?_sprintf:
   582     0190                     sprintf@s:	
   583                           ; 2 bytes @ 0x0
   584                           
   585                           
   586                           ; 1 bytes @ 0x0
   587     0190                     	ds	1
   588     0191                     sprintf@fmt:
   589                           
   590                           ; 1 bytes @ 0x1
   591     0191                     	ds	5
   592     0196                     sprintf@ap:
   593                           
   594                           ; 1 bytes @ 0x6
   595     0196                     	ds	1
   596     0197                     sprintf@f:
   597                           
   598                           ; 11 bytes @ 0x7
   599     0197                     	ds	11
   600     01A2                     ??_main:
   601                           
   602                           ; 1 bytes @ 0x12
   603     01A2                     	ds	3
   604     01A5                     main@tempStr:
   605                           
   606                           ; 20 bytes @ 0x15
   607     01A5                     	ds	20
   608     01B9                     main@temp_counter:
   609                           
   610                           ; 2 bytes @ 0x29
   611     01B9                     	ds	2
   612     01BB                     main@bt_counter:
   613                           
   614                           ; 2 bytes @ 0x2B
   615     01BB                     	ds	2
   616     01BD                     main@button_pressed:
   617                           
   618                           ; 1 bytes @ 0x2D
   619     01BD                     	ds	1
   620                           
   621                           	psect	cstackBANK1
   622     00A0                     __pcstackBANK1:
   623     00A0                     floorf@m:
   624                           
   625                           ; 4 bytes @ 0x0
   626     00A0                     	ds	4
   627     00A4                     floorf@e:
   628                           
   629                           ; 2 bytes @ 0x4
   630     00A4                     	ds	2
   631     00A6                     floorf@u:
   632                           
   633                           ; 4 bytes @ 0x6
   634     00A6                     	ds	4
   635     00AA                     ?_efgtoa:
   636     00AA                     efgtoa@fp:	
   637                           ; 1 bytes @ 0xA
   638                           
   639                           
   640                           ; 2 bytes @ 0xA
   641     00AA                     	ds	2
   642     00AC                     efgtoa@f:
   643                           
   644                           ; 4 bytes @ 0xC
   645     00AC                     	ds	4
   646     00B0                     efgtoa@c:
   647                           
   648                           ; 1 bytes @ 0x10
   649     00B0                     	ds	1
   650     00B1                     efgtoa@ne:
   651                           
   652                           ; 2 bytes @ 0x11
   653     00B1                     	ds	2
   654     00B3                     efgtoa@p:
   655                           
   656                           ; 2 bytes @ 0x13
   657     00B3                     	ds	2
   658     00B5                     efgtoa@t:
   659                           
   660                           ; 2 bytes @ 0x15
   661     00B5                     	ds	2
   662     00B7                     _efgtoa$726:
   663                           
   664                           ; 2 bytes @ 0x17
   665     00B7                     	ds	2
   666     00B9                     efgtoa@pp:
   667                           
   668                           ; 1 bytes @ 0x19
   669     00B9                     	ds	1
   670     00BA                     efgtoa@mode:
   671                           
   672                           ; 1 bytes @ 0x1A
   673     00BA                     	ds	1
   674     00BB                     efgtoa@nmode:
   675                           
   676                           ; 1 bytes @ 0x1B
   677     00BB                     	ds	1
   678     00BC                     efgtoa@d:
   679                           
   680                           ; 2 bytes @ 0x1C
   681     00BC                     	ds	2
   682     00BE                     efgtoa@m:
   683                           
   684                           ; 2 bytes @ 0x1E
   685     00BE                     	ds	2
   686     00C0                     efgtoa@e:
   687                           
   688                           ; 2 bytes @ 0x20
   689     00C0                     	ds	2
   690     00C2                     efgtoa@w:
   691                           
   692                           ; 2 bytes @ 0x22
   693     00C2                     	ds	2
   694     00C4                     efgtoa@ou:
   695                           
   696                           ; 4 bytes @ 0x24
   697     00C4                     	ds	4
   698     00C8                     efgtoa@i:
   699                           
   700                           ; 2 bytes @ 0x28
   701     00C8                     	ds	2
   702     00CA                     efgtoa@h:
   703                           
   704                           ; 4 bytes @ 0x2A
   705     00CA                     	ds	4
   706     00CE                     efgtoa@l:
   707                           
   708                           ; 4 bytes @ 0x2E
   709     00CE                     	ds	4
   710     00D2                     efgtoa@sign:
   711                           
   712                           ; 1 bytes @ 0x32
   713     00D2                     	ds	1
   714     00D3                     efgtoa@g:
   715                           
   716                           ; 4 bytes @ 0x33
   717     00D3                     	ds	4
   718     00D7                     efgtoa@n:
   719                           
   720                           ; 2 bytes @ 0x37
   721     00D7                     	ds	2
   722     00D9                     efgtoa@u:
   723                           
   724                           ; 4 bytes @ 0x39
   725     00D9                     	ds	4
   726     00DD                     ?_vfpfcnvrt:
   727     00DD                     vfpfcnvrt@fp:	
   728                           ; 1 bytes @ 0x3D
   729                           
   730                           
   731                           ; 2 bytes @ 0x3D
   732     00DD                     	ds	2
   733     00DF                     vfpfcnvrt@fmt:
   734                           
   735                           ; 1 bytes @ 0x3F
   736     00DF                     	ds	1
   737     00E0                     vfpfcnvrt@ap:
   738                           
   739                           ; 1 bytes @ 0x40
   740     00E0                     	ds	1
   741     00E1                     ??_vfpfcnvrt:
   742                           
   743                           ; 1 bytes @ 0x41
   744     00E1                     	ds	2
   745     00E3                     vfpfcnvrt@convarg:
   746                           
   747                           ; 4 bytes @ 0x43
   748     00E3                     	ds	4
   749     00E7                     vfpfcnvrt@c:
   750                           
   751                           ; 1 bytes @ 0x47
   752     00E7                     	ds	1
   753     00E8                     vfpfcnvrt@cp:
   754                           
   755                           ; 1 bytes @ 0x48
   756     00E8                     	ds	1
   757     00E9                     ?_vfprintf:
   758     00E9                     vfprintf@fp:	
   759                           ; 2 bytes @ 0x49
   760                           
   761                           
   762                           ; 2 bytes @ 0x49
   763     00E9                     	ds	2
   764     00EB                     vfprintf@fmt:
   765                           
   766                           ; 1 bytes @ 0x4B
   767     00EB                     	ds	1
   768     00EC                     vfprintf@ap:
   769                           
   770                           ; 1 bytes @ 0x4C
   771     00EC                     	ds	1
   772     00ED                     vfprintf@cfmt:
   773                           
   774                           ; 1 bytes @ 0x4D
   775     00ED                     	ds	1
   776     00EE                     ??_sprintf:
   777                           
   778                           ; 1 bytes @ 0x4E
   779     00EE                     	ds	1
   780                           
   781                           	psect	cstackCOMMON
   782     0070                     __pcstackCOMMON:
   783     0070                     ?_putch:
   784     0070                     ?_UART_Init:	
   785                           ; 1 bytes @ 0x0
   786                           
   787     0070                     ?_UART_Write:	
   788                           ; 1 bytes @ 0x0
   789                           
   790     0070                     ?_ADC_Init:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0070                     ?_Servo_MoveTo0:	
   794                           ; 1 bytes @ 0x0
   795                           
   796     0070                     ?_Servo_MoveTo180:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0070                     ?_Move_Servo:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0070                     ?_Button_Init:	
   803                           ; 1 bytes @ 0x0
   804                           
   805     0070                     ?_Servo_Init:	
   806                           ; 1 bytes @ 0x0
   807                           
   808     0070                     ?_Toggle_Lock_State:	
   809                           ; 1 bytes @ 0x0
   810                           
   811     0070                     ?_Check_Temperature_Alarm:	
   812                           ; 1 bytes @ 0x0
   813                           
   814     0070                     ?_ISR:	
   815                           ; 1 bytes @ 0x0
   816                           
   817     0070                     ?_main:	
   818                           ; 1 bytes @ 0x0
   819                           
   820     0070                     ?i1_UART_Write:	
   821                           ; 1 bytes @ 0x0
   822                           
   823     0070                     putch@c:	
   824                           ; 1 bytes @ 0x0
   825                           
   826     0070                     i1UART_Write@data:	
   827                           ; 1 bytes @ 0x0
   828                           
   829     0070                     ??i1_UART_Write:	
   830                           ; 1 bytes @ 0x0
   831                           
   832                           
   833                           ; 1 bytes @ 0x0
   834     0070                     	ds	1
   835     0071                     ?i1_UART_Write_String:
   836     0071                     i1UART_Write_String@str:	
   837                           ; 1 bytes @ 0x1
   838                           
   839                           
   840                           ; 2 bytes @ 0x1
   841     0071                     	ds	2
   842     0073                     ??_ISR:
   843     0073                     ??i1_UART_Write_String:	
   844                           ; 1 bytes @ 0x3
   845                           
   846                           
   847                           ; 1 bytes @ 0x3
   848     0073                     	ds	4
   849                           
   850                           	psect	cstackBANK0
   851     0020                     __pcstackBANK0:
   852     0020                     ?_strcpy:
   853     0020                     ?_memcpy:	
   854                           ; 1 bytes @ 0x0
   855                           
   856     0020                     ?___fleq:	
   857                           ; 1 bytes @ 0x0
   858                           
   859     0020                     ?__Umul8_16:	
   860                           ; 1 bit 
   861                           
   862     0020                     ?_fputc:	
   863                           ; 2 bytes @ 0x0
   864                           
   865     0020                     ?___fpclassifyf:	
   866                           ; 2 bytes @ 0x0
   867                           
   868     0020                     ?___wmul:	
   869                           ; 2 bytes @ 0x0
   870                           
   871     0020                     ?_labs:	
   872                           ; 2 bytes @ 0x0
   873                           
   874     0020                     ?___flneg:	
   875                           ; 4 bytes @ 0x0
   876                           
   877     0020                     ?___fltol:	
   878                           ; 4 bytes @ 0x0
   879                           
   880     0020                     ?___fladd:	
   881                           ; 4 bytes @ 0x0
   882                           
   883     0020                     ?___xxtofl:	
   884                           ; 4 bytes @ 0x0
   885                           
   886     0020                     UART_Write@data:	
   887                           ; 4 bytes @ 0x0
   888                           
   889     0020                     __Umul8_16@multiplicand:	
   890                           ; 1 bytes @ 0x0
   891                           
   892     0020                     memcpy@d1:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0020                     strcpy@dest:	
   896                           ; 1 bytes @ 0x0
   897                           
   898     0020                     ___wmul@multiplier:	
   899                           ; 1 bytes @ 0x0
   900                           
   901     0020                     fputc@c:	
   902                           ; 2 bytes @ 0x0
   903                           
   904     0020                     ___fleq@ff1:	
   905                           ; 2 bytes @ 0x0
   906                           
   907     0020                     ___flneg@f1:	
   908                           ; 4 bytes @ 0x0
   909                           
   910     0020                     ___fltol@f1:	
   911                           ; 4 bytes @ 0x0
   912                           
   913     0020                     ___fladd@b:	
   914                           ; 4 bytes @ 0x0
   915                           
   916     0020                     ___xxtofl@val:	
   917                           ; 4 bytes @ 0x0
   918                           
   919     0020                     ___fpclassifyf@x:	
   920                           ; 4 bytes @ 0x0
   921                           
   922     0020                     labs@a:	
   923                           ; 4 bytes @ 0x0
   924                           
   925     0020                     ??_putch:	
   926                           ; 4 bytes @ 0x0
   927                           
   928     0020                     ??_UART_Init:	
   929                           ; 1 bytes @ 0x0
   930                           
   931     0020                     ??_UART_Write:	
   932                           ; 1 bytes @ 0x0
   933                           
   934     0020                     ??_ADC_Init:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     0020                     ??_Servo_MoveTo0:	
   938                           ; 1 bytes @ 0x0
   939                           
   940     0020                     ??_Servo_MoveTo180:	
   941                           ; 1 bytes @ 0x0
   942                           
   943     0020                     ??_Button_Init:	
   944                           ; 1 bytes @ 0x0
   945                           
   946     0020                     ??_Servo_Init:	
   947                           ; 1 bytes @ 0x0
   948                           
   949     0020                     ??_Toggle_Lock_State:	
   950                           ; 1 bytes @ 0x0
   951                           
   952                           
   953                           ; 1 bytes @ 0x0
   954     0020                     	ds	1
   955     0021                     ?_UART_Write_String:
   956     0021                     memcpy@s1:	
   957                           ; 1 bytes @ 0x1
   958                           
   959     0021                     strcpy@src:	
   960                           ; 1 bytes @ 0x1
   961                           
   962     0021                     UART_Write_String@str:	
   963                           ; 1 bytes @ 0x1
   964                           
   965                           
   966                           ; 2 bytes @ 0x1
   967     0021                     	ds	1
   968     0022                     strcpy@d:
   969     0022                     Servo_MoveTo0@i:	
   970                           ; 1 bytes @ 0x2
   971                           
   972     0022                     Servo_MoveTo180@i:	
   973                           ; 2 bytes @ 0x2
   974                           
   975     0022                     ___wmul@multiplicand:	
   976                           ; 2 bytes @ 0x2
   977                           
   978     0022                     memcpy@n:	
   979                           ; 2 bytes @ 0x2
   980                           
   981     0022                     fputc@fp:	
   982                           ; 2 bytes @ 0x2
   983                           
   984     0022                     ??__Umul8_16:	
   985                           ; 2 bytes @ 0x2
   986                           
   987     0022                     ??_strcpy:	
   988                           ; 1 bytes @ 0x2
   989                           
   990                           
   991                           ; 1 bytes @ 0x2
   992     0022                     	ds	1
   993     0023                     ??_UART_Write_String:
   994                           
   995                           ; 1 bytes @ 0x3
   996     0023                     	ds	1
   997     0024                     Move_Servo@state:
   998     0024                     memcpy@tmp:	
   999                           ; 1 bytes @ 0x4
  1000                           
  1001     0024                     ___wmul@product:	
  1002                           ; 1 bytes @ 0x4
  1003                           
  1004     0024                     __Umul8_16@product:	
  1005                           ; 2 bytes @ 0x4
  1006                           
  1007     0024                     ___fleq@ff2:	
  1008                           ; 2 bytes @ 0x4
  1009                           
  1010     0024                     ___fladd@a:	
  1011                           ; 4 bytes @ 0x4
  1012                           
  1013     0024                     ??_fputc:	
  1014                           ; 4 bytes @ 0x4
  1015                           
  1016     0024                     ??___fpclassifyf:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019     0024                     ??_labs:	
  1020                           ; 1 bytes @ 0x4
  1021                           
  1022     0024                     ??_memcpy:	
  1023                           ; 1 bytes @ 0x4
  1024                           
  1025     0024                     ??_Move_Servo:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028     0024                     ??___wmul:	
  1029                           ; 1 bytes @ 0x4
  1030                           
  1031     0024                     ??___flneg:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034     0024                     ??___fltol:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037     0024                     ??___xxtofl:	
  1038                           ; 1 bytes @ 0x4
  1039                           
  1040                           
  1041                           ; 1 bytes @ 0x4
  1042     0024                     	ds	1
  1043     0025                     memcpy@d:
  1044                           
  1045                           ; 1 bytes @ 0x5
  1046     0025                     	ds	1
  1047     0026                     ?_read_prec_or_width:
  1048     0026                     read_prec_or_width@fmt:	
  1049                           ; 2 bytes @ 0x6
  1050                           
  1051     0026                     memcpy@s:	
  1052                           ; 1 bytes @ 0x6
  1053                           
  1054     0026                     __Umul8_16@word_mpld:	
  1055                           ; 1 bytes @ 0x6
  1056                           
  1057                           
  1058                           ; 2 bytes @ 0x6
  1059     0026                     	ds	1
  1060     0027                     read_prec_or_width@ap:
  1061                           
  1062                           ; 1 bytes @ 0x7
  1063     0027                     	ds	1
  1064     0028                     ___fltol@sign1:
  1065     0028                     __Umul8_16@multiplier:	
  1066                           ; 1 bytes @ 0x8
  1067                           
  1068     0028                     ___xxtofl@sign:	
  1069                           ; 1 bytes @ 0x8
  1070                           
  1071     0028                     read_prec_or_width@c:	
  1072                           ; 1 bytes @ 0x8
  1073                           
  1074     0028                     ??___fleq:	
  1075                           ; 1 bytes @ 0x8
  1076                           
  1077     0028                     ??___fladd:	
  1078                           ; 1 bytes @ 0x8
  1079                           
  1080     0028                     ??_read_prec_or_width:	
  1081                           ; 1 bytes @ 0x8
  1082                           
  1083                           
  1084                           ; 1 bytes @ 0x8
  1085     0028                     	ds	1
  1086     0029                     ___fltol@exp1:
  1087     0029                     ___xxtofl@exp:	
  1088                           ; 1 bytes @ 0x9
  1089                           
  1090     0029                     read_prec_or_width@n:	
  1091                           ; 1 bytes @ 0x9
  1092                           
  1093                           
  1094                           ; 2 bytes @ 0x9
  1095     0029                     	ds	1
  1096     002A                     ___fpclassifyf@e:
  1097     002A                     ___xxtofl@arg:	
  1098                           ; 2 bytes @ 0xA
  1099                           
  1100                           
  1101                           ; 4 bytes @ 0xA
  1102     002A                     	ds	2
  1103     002C                     ___fpclassifyf@u:
  1104                           
  1105                           ; 4 bytes @ 0xC
  1106     002C                     	ds	1
  1107     002D                     ?_fputs:
  1108     002D                     fputs@s:	
  1109                           ; 2 bytes @ 0xD
  1110                           
  1111                           
  1112                           ; 1 bytes @ 0xD
  1113     002D                     	ds	1
  1114     002E                     ?___flmul:
  1115     002E                     fputs@fp:	
  1116                           ; 4 bytes @ 0xE
  1117                           
  1118     002E                     ___flmul@b:	
  1119                           ; 2 bytes @ 0xE
  1120                           
  1121                           
  1122                           ; 4 bytes @ 0xE
  1123     002E                     	ds	2
  1124     0030                     ___fladd@signs:
  1125     0030                     ??_fputs:	
  1126                           ; 1 bytes @ 0x10
  1127                           
  1128                           
  1129                           ; 1 bytes @ 0x10
  1130     0030                     	ds	1
  1131     0031                     ___fladd@aexp:
  1132                           
  1133                           ; 1 bytes @ 0x11
  1134     0031                     	ds	1
  1135     0032                     ___fladd@bexp:
  1136     0032                     fputs@c:	
  1137                           ; 1 bytes @ 0x12
  1138                           
  1139     0032                     ___flmul@a:	
  1140                           ; 1 bytes @ 0x12
  1141                           
  1142                           
  1143                           ; 4 bytes @ 0x12
  1144     0032                     	ds	1
  1145     0033                     ___fladd@grs:
  1146     0033                     fputs@i:	
  1147                           ; 1 bytes @ 0x13
  1148                           
  1149                           
  1150                           ; 2 bytes @ 0x13
  1151     0033                     	ds	2
  1152     0035                     ?_pad:
  1153     0035                     pad@fp:	
  1154                           ; 1 bytes @ 0x15
  1155                           
  1156                           
  1157                           ; 2 bytes @ 0x15
  1158     0035                     	ds	1
  1159     0036                     ??___flmul:
  1160                           
  1161                           ; 1 bytes @ 0x16
  1162     0036                     	ds	1
  1163     0037                     pad@buf:
  1164                           
  1165                           ; 1 bytes @ 0x17
  1166     0037                     	ds	1
  1167     0038                     pad@p:
  1168                           
  1169                           ; 2 bytes @ 0x18
  1170     0038                     	ds	2
  1171     003A                     ??_pad:
  1172                           
  1173                           ; 1 bytes @ 0x1A
  1174     003A                     	ds	1
  1175     003B                     ___flmul@sign:
  1176     003B                     pad@i:	
  1177                           ; 1 bytes @ 0x1B
  1178                           
  1179                           
  1180                           ; 2 bytes @ 0x1B
  1181     003B                     	ds	1
  1182     003C                     ___flmul@grs:
  1183                           
  1184                           ; 4 bytes @ 0x1C
  1185     003C                     	ds	4
  1186     0040                     ___flmul@aexp:
  1187                           
  1188                           ; 1 bytes @ 0x20
  1189     0040                     	ds	1
  1190     0041                     ___flmul@bexp:
  1191                           
  1192                           ; 1 bytes @ 0x21
  1193     0041                     	ds	1
  1194     0042                     ___flmul@prod:
  1195                           
  1196                           ; 4 bytes @ 0x22
  1197     0042                     	ds	4
  1198     0046                     ___flmul@temp:
  1199                           
  1200                           ; 2 bytes @ 0x26
  1201     0046                     	ds	2
  1202     0048                     ?___flge:
  1203     0048                     ?___flsub:	
  1204                           ; 1 bit 
  1205                           
  1206     0048                     ?___fldiv:	
  1207                           ; 4 bytes @ 0x28
  1208                           
  1209     0048                     ___flge@ff1:	
  1210                           ; 4 bytes @ 0x28
  1211                           
  1212     0048                     ___flsub@a:	
  1213                           ; 4 bytes @ 0x28
  1214                           
  1215     0048                     ___fldiv@a:	
  1216                           ; 4 bytes @ 0x28
  1217                           
  1218                           
  1219                           ; 4 bytes @ 0x28
  1220     0048                     	ds	4
  1221     004C                     ___flge@ff2:
  1222     004C                     ___flsub@b:	
  1223                           ; 4 bytes @ 0x2C
  1224                           
  1225     004C                     ___fldiv@b:	
  1226                           ; 4 bytes @ 0x2C
  1227                           
  1228                           
  1229                           ; 4 bytes @ 0x2C
  1230     004C                     	ds	4
  1231     0050                     ??___flge:
  1232     0050                     ??___flsub:	
  1233                           ; 1 bytes @ 0x30
  1234                           
  1235     0050                     ??___fldiv:	
  1236                           ; 1 bytes @ 0x30
  1237                           
  1238                           
  1239                           ; 1 bytes @ 0x30
  1240     0050                     	ds	4
  1241     0054                     ??_Check_Temperature_Alarm:
  1242                           
  1243                           ; 1 bytes @ 0x34
  1244     0054                     	ds	1
  1245     0055                     ___fldiv@rem:
  1246                           
  1247                           ; 4 bytes @ 0x35
  1248     0055                     	ds	4
  1249     0059                     ___fldiv@sign:
  1250                           
  1251                           ; 1 bytes @ 0x39
  1252     0059                     	ds	1
  1253     005A                     ___fldiv@new_exp:
  1254                           
  1255                           ; 2 bytes @ 0x3A
  1256     005A                     	ds	2
  1257     005C                     ___fldiv@grs:
  1258                           
  1259                           ; 4 bytes @ 0x3C
  1260     005C                     	ds	4
  1261     0060                     ___fldiv@bexp:
  1262                           
  1263                           ; 1 bytes @ 0x40
  1264     0060                     	ds	1
  1265     0061                     ___fldiv@aexp:
  1266                           
  1267                           ; 1 bytes @ 0x41
  1268     0061                     	ds	1
  1269     0062                     ?_floorf:
  1270     0062                     ?_Read_Temperature:	
  1271                           ; 4 bytes @ 0x42
  1272                           
  1273     0062                     floorf@x:	
  1274                           ; 4 bytes @ 0x42
  1275                           
  1276                           
  1277                           ; 4 bytes @ 0x42
  1278     0062                     	ds	4
  1279     0066                     ??_floorf:
  1280     0066                     ??_Read_Temperature:	
  1281                           ; 1 bytes @ 0x46
  1282                           
  1283                           
  1284                           ; 1 bytes @ 0x46
  1285     0066                     	ds	2
  1286     0068                     _Read_Temperature$1034:
  1287                           
  1288                           ; 4 bytes @ 0x48
  1289     0068                     	ds	4
  1290     006C                     Read_Temperature@adcValue:
  1291     006C                     ??_efgtoa:	
  1292                           ; 2 bytes @ 0x4C
  1293                           
  1294                           
  1295                           ; 1 bytes @ 0x4C
  1296     006C                     	ds	4
  1297     0070                     ??_vfprintf:
  1298                           
  1299                           	psect	maintext
  1300     1243                     __pmaintext:	
  1301                           ; 1 bytes @ 0x50
  1302 ;;
  1303 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1304 ;;
  1305 ;; *************** function _main *****************
  1306 ;; Defined at:
  1307 ;;		line 173 in file "main.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  tempStr        20   21[BANK3 ] unsigned char [20]
  1312 ;;  bt_counter      2   43[BANK3 ] unsigned int 
  1313 ;;  temp_counter    2   41[BANK3 ] unsigned int 
  1314 ;;  button_press    1   45[BANK3 ] unsigned char 
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : B00/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1324 ;;      Params:         0       0       0       0       0
  1325 ;;      Locals:         0       0       0      25       0
  1326 ;;      Temps:          0       0       0       3       0
  1327 ;;      Totals:         0       0       0      28       0
  1328 ;;Total ram usage:       28 bytes
  1329 ;; Hardware stack levels required when called: 11
  1330 ;; This function calls:
  1331 ;;		_ADC_Init
  1332 ;;		_Button_Init
  1333 ;;		_Check_Temperature_Alarm
  1334 ;;		_Move_Servo
  1335 ;;		_Read_Temperature
  1336 ;;		_Servo_Init
  1337 ;;		_Toggle_Lock_State
  1338 ;;		_UART_Init
  1339 ;;		_UART_Write_String
  1340 ;;		_sprintf
  1341 ;; This function is called by:
  1342 ;;		Startup code after reset
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346     1243                     _main:	
  1347                           ;psect for function _main
  1348                           
  1349     1243                     l3900:	
  1350                           ;incstack = 0
  1351 ;; hardware stack exceeded
  1352                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1353                           
  1354                           
  1355                           ;main.c: 177:     TRISB = 0x01;
  1356     1243  3001               	movlw	1
  1357     1244  1683               	bsf	3,5	;RP0=1, select bank1
  1358     1245  1303               	bcf	3,6	;RP1=0, select bank1
  1359     1246  0086               	movwf	6	;volatile
  1360     1247                     l3902:
  1361                           
  1362                           ;main.c: 178:     TRISD = 0x00;
  1363     1247  0188               	clrf	8	;volatile
  1364                           
  1365                           ;main.c: 179:     PORTB = 0x00;
  1366     1248  1283               	bcf	3,5	;RP0=0, select bank0
  1367     1249  1303               	bcf	3,6	;RP1=0, select bank0
  1368     124A  0186               	clrf	6	;volatile
  1369                           
  1370                           ;main.c: 180:     PORTD = 0x00;
  1371     124B  0188               	clrf	8	;volatile
  1372     124C                     l3904:
  1373                           
  1374                           ;main.c: 183:     Servo_Init();
  1375     124C  160A  158A  2280  160A  118A  	fcall	_Servo_Init
  1376     1251                     l3906:
  1377                           
  1378                           ;main.c: 184:     ADC_Init();
  1379     1251  160A  158A  22A3  160A  118A  	fcall	_ADC_Init
  1380     1256                     l3908:
  1381                           
  1382                           ;main.c: 185:     UART_Init();
  1383     1256  160A  158A  22AF  160A  118A  	fcall	_UART_Init
  1384     125B                     l3910:
  1385                           
  1386                           ;main.c: 186:     Button_Init();
  1387     125B  160A  158A  2279  160A  118A  	fcall	_Button_Init
  1388     1260                     l3912:
  1389                           
  1390                           ;main.c: 189:     RCIE = 1;
  1391     1260  1683               	bsf	3,5	;RP0=1, select bank1
  1392     1261  1303               	bcf	3,6	;RP1=0, select bank1
  1393     1262  168C               	bsf	12,5	;volatile
  1394     1263                     l3914:
  1395                           
  1396                           ;main.c: 190:     INTE = 1;
  1397     1263  160B               	bsf	11,4	;volatile
  1398     1264                     l3916:
  1399                           
  1400                           ;main.c: 191:     PEIE = 1;
  1401     1264  170B               	bsf	11,6	;volatile
  1402     1265                     l3918:
  1403                           
  1404                           ;main.c: 192:     GIE = 1;
  1405     1265  178B               	bsf	11,7	;volatile
  1406                           
  1407                           ;main.c: 195:     currentState = CERRADO;
  1408     1266  1683               	bsf	3,5	;RP0=1, select bank3
  1409     1267  1703               	bsf	3,6	;RP1=1, select bank3
  1410     1268  01CC               	clrf	_currentState^(0+384)
  1411     1269                     l3920:
  1412                           
  1413                           ;main.c: 196:     Move_Servo(currentState);
  1414     1269  084C               	movf	_currentState^(0+384),w
  1415     126A  160A  158A  22CC  160A  118A  	fcall	_Move_Servo
  1416     126F                     l3922:
  1417                           
  1418                           ;main.c: 199:     UART_Write_String("=== SISTEMA INICIADO ===\n");
  1419     126F  303F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1420     1270  1283               	bcf	3,5	;RP0=0, select bank0
  1421     1271  1303               	bcf	3,6	;RP1=0, select bank0
  1422     1272  00A1               	movwf	UART_Write_String@str
  1423     1273  3080               	movlw	128
  1424     1274  00A2               	movwf	UART_Write_String@str+1
  1425     1275  160A  158A  23C9  160A  118A  	fcall	_UART_Write_String
  1426     127A                     l3924:
  1427                           
  1428                           ;main.c: 200:     UART_Write_String("Servo funcionando correctamente\n");
  1429     127A  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1430     127B  1283               	bcf	3,5	;RP0=0, select bank0
  1431     127C  1303               	bcf	3,6	;RP1=0, select bank0
  1432     127D  00A1               	movwf	UART_Write_String@str
  1433     127E  3080               	movlw	128
  1434     127F  00A2               	movwf	UART_Write_String@str+1
  1435     1280  160A  158A  23C9  160A  118A  	fcall	_UART_Write_String
  1436     1285                     l3926:
  1437                           
  1438                           ;main.c: 201:     UART_Write_String("Comandos: A=Abrir, C=Cerrar\n");
  1439     1285  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1440     1286  1283               	bcf	3,5	;RP0=0, select bank0
  1441     1287  1303               	bcf	3,6	;RP1=0, select bank0
  1442     1288  00A1               	movwf	UART_Write_String@str
  1443     1289  3080               	movlw	128
  1444     128A  00A2               	movwf	UART_Write_String@str+1
  1445     128B  160A  158A  23C9  160A  118A  	fcall	_UART_Write_String
  1446     1290                     l3928:
  1447                           
  1448                           ;main.c: 204:     unsigned int temp_counter = 0;
  1449     1290  1683               	bsf	3,5	;RP0=1, select bank3
  1450     1291  1703               	bsf	3,6	;RP1=1, select bank3
  1451     1292  01B9               	clrf	main@temp_counter^(0+384)
  1452     1293  01BA               	clrf	(main@temp_counter+1)^(0+384)
  1453     1294                     l3930:
  1454                           
  1455                           ;main.c: 205:     unsigned int bt_counter = 0;
  1456     1294  01BB               	clrf	main@bt_counter^(0+384)
  1457     1295  01BC               	clrf	(main@bt_counter+1)^(0+384)
  1458     1296                     l3932:
  1459                           
  1460                           ;main.c: 206:     unsigned char button_pressed = 0;
  1461     1296  01BD               	clrf	main@button_pressed^(0+384)
  1462     1297                     l3934:
  1463                           
  1464                           ;main.c: 211:         if(INTF && !button_pressed) {
  1465     1297  1C8B               	btfss	11,1	;volatile
  1466     1298  2A9A               	goto	u5791
  1467     1299  2A9B               	goto	u5790
  1468     129A                     u5791:
  1469     129A  2AEB               	goto	l3956
  1470     129B                     u5790:
  1471     129B                     l3936:
  1472     129B  1683               	bsf	3,5	;RP0=1, select bank3
  1473     129C  1703               	bsf	3,6	;RP1=1, select bank3
  1474     129D  083D               	movf	main@button_pressed^(0+384),w
  1475     129E  1D03               	btfss	3,2
  1476     129F  2AA1               	goto	u5801
  1477     12A0  2AA2               	goto	u5800
  1478     12A1                     u5801:
  1479     12A1  2AEB               	goto	l3956
  1480     12A2                     u5800:
  1481     12A2                     l3938:
  1482                           
  1483                           ;main.c: 212:             _delay((unsigned long)((50)*(20000000/4000.0)));
  1484     12A2  3002               	movlw	2
  1485     12A3  1683               	bsf	3,5	;RP0=1, select bank3
  1486     12A4  1703               	bsf	3,6	;RP1=1, select bank3
  1487     12A5  00A4               	movwf	(??_main^(0+384)+2)
  1488     12A6  3045               	movlw	69
  1489     12A7  00A3               	movwf	(??_main^(0+384)+1)
  1490     12A8  30A9               	movlw	169
  1491     12A9  00A2               	movwf	??_main^(0+384)
  1492     12AA                     u5957:
  1493     12AA  0BA2               	decfsz	??_main^(0+384),f
  1494     12AB  2AAA               	goto	u5957
  1495     12AC  0BA3               	decfsz	(??_main^(0+384)+1),f
  1496     12AD  2AAA               	goto	u5957
  1497     12AE  0BA4               	decfsz	(??_main^(0+384)+2),f
  1498     12AF  2AAA               	goto	u5957
  1499     12B0                     l3940:
  1500                           
  1501                           ;main.c: 213:             if(RB0 == 1) {
  1502     12B0  1283               	bcf	3,5	;RP0=0, select bank0
  1503     12B1  1303               	bcf	3,6	;RP1=0, select bank0
  1504     12B2  1C06               	btfss	6,0	;volatile
  1505     12B3  2AB5               	goto	u5811
  1506     12B4  2AB6               	goto	u5810
  1507     12B5                     u5811:
  1508     12B5  2AEA               	goto	l3954
  1509     12B6                     u5810:
  1510     12B6                     l3942:
  1511                           
  1512                           ;main.c: 214:                 Toggle_Lock_State();
  1513     12B6  160A  158A  22BC  160A  118A  	fcall	_Toggle_Lock_State
  1514     12BB                     l3944:
  1515                           
  1516                           ;main.c: 215:                 UART_Write_String("Boton presionado\n");
  1517     12BB  3059               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1518     12BC  1283               	bcf	3,5	;RP0=0, select bank0
  1519     12BD  1303               	bcf	3,6	;RP1=0, select bank0
  1520     12BE  00A1               	movwf	UART_Write_String@str
  1521     12BF  3080               	movlw	128
  1522     12C0  00A2               	movwf	UART_Write_String@str+1
  1523     12C1  160A  158A  23C9  160A  118A  	fcall	_UART_Write_String
  1524     12C6                     l3946:
  1525                           
  1526                           ;main.c: 216:                 button_pressed = 1;
  1527     12C6  3001               	movlw	1
  1528     12C7  1683               	bsf	3,5	;RP0=1, select bank3
  1529     12C8  1703               	bsf	3,6	;RP1=1, select bank3
  1530     12C9  00BD               	movwf	main@button_pressed^(0+384)
  1531                           
  1532                           ;main.c: 219:                 while(RB0 == 1) {
  1533     12CA  2AD6               	goto	l3950
  1534     12CB                     l3948:
  1535                           
  1536                           ;main.c: 220:                     _delay((unsigned long)((10)*(20000000/4000.0)));
  1537     12CB  3041               	movlw	65
  1538     12CC  1683               	bsf	3,5	;RP0=1, select bank3
  1539     12CD  1703               	bsf	3,6	;RP1=1, select bank3
  1540     12CE  00A3               	movwf	(??_main^(0+384)+1)
  1541     12CF  30ED               	movlw	237
  1542     12D0  00A2               	movwf	??_main^(0+384)
  1543     12D1                     u5967:
  1544     12D1  0BA2               	decfsz	??_main^(0+384),f
  1545     12D2  2AD1               	goto	u5967
  1546     12D3  0BA3               	decfsz	(??_main^(0+384)+1),f
  1547     12D4  2AD1               	goto	u5967
  1548     12D5  2AD6               	nop2
  1549     12D6                     l3950:
  1550                           
  1551                           ;main.c: 219:                 while(RB0 == 1) {
  1552     12D6  1283               	bcf	3,5	;RP0=0, select bank0
  1553     12D7  1303               	bcf	3,6	;RP1=0, select bank0
  1554     12D8  1806               	btfsc	6,0	;volatile
  1555     12D9  2ADB               	goto	u5821
  1556     12DA  2ADC               	goto	u5820
  1557     12DB                     u5821:
  1558     12DB  2ACB               	goto	l3948
  1559     12DC                     u5820:
  1560     12DC                     l3952:
  1561                           
  1562                           ;main.c: 222:                 _delay((unsigned long)((50)*(20000000/4000.0)));
  1563     12DC  3002               	movlw	2
  1564     12DD  1683               	bsf	3,5	;RP0=1, select bank3
  1565     12DE  1703               	bsf	3,6	;RP1=1, select bank3
  1566     12DF  00A4               	movwf	(??_main^(0+384)+2)
  1567     12E0  3045               	movlw	69
  1568     12E1  00A3               	movwf	(??_main^(0+384)+1)
  1569     12E2  30A9               	movlw	169
  1570     12E3  00A2               	movwf	??_main^(0+384)
  1571     12E4                     u5977:
  1572     12E4  0BA2               	decfsz	??_main^(0+384),f
  1573     12E5  2AE4               	goto	u5977
  1574     12E6  0BA3               	decfsz	(??_main^(0+384)+1),f
  1575     12E7  2AE4               	goto	u5977
  1576     12E8  0BA4               	decfsz	(??_main^(0+384)+2),f
  1577     12E9  2AE4               	goto	u5977
  1578     12EA                     l3954:
  1579                           
  1580                           ;main.c: 224:             INTF = 0;
  1581     12EA  108B               	bcf	11,1	;volatile
  1582     12EB                     l3956:
  1583                           
  1584                           ;main.c: 227:         if(RB0 == 0) {
  1585     12EB  1283               	bcf	3,5	;RP0=0, select bank0
  1586     12EC  1303               	bcf	3,6	;RP1=0, select bank0
  1587     12ED  1806               	btfsc	6,0	;volatile
  1588     12EE  2AF0               	goto	u5831
  1589     12EF  2AF1               	goto	u5830
  1590     12F0                     u5831:
  1591     12F0  2AF4               	goto	l3960
  1592     12F1                     u5830:
  1593     12F1                     l3958:
  1594                           
  1595                           ;main.c: 228:             button_pressed = 0;
  1596     12F1  1683               	bsf	3,5	;RP0=1, select bank3
  1597     12F2  1703               	bsf	3,6	;RP1=1, select bank3
  1598     12F3  01BD               	clrf	main@button_pressed^(0+384)
  1599     12F4                     l3960:
  1600                           
  1601                           ;main.c: 232:         if(servo_needs_update) {
  1602     12F4  1683               	bsf	3,5	;RP0=1, select bank3
  1603     12F5  1703               	bsf	3,6	;RP1=1, select bank3
  1604     12F6  084D               	movf	_servo_needs_update^(0+384),w	;volatile
  1605     12F7  1903               	btfsc	3,2
  1606     12F8  2AFA               	goto	u5841
  1607     12F9  2AFB               	goto	u5840
  1608     12FA                     u5841:
  1609     12FA  2B04               	goto	l3966
  1610     12FB                     u5840:
  1611     12FB                     l3962:
  1612                           
  1613                           ;main.c: 233:             Move_Servo(currentState);
  1614     12FB  084C               	movf	_currentState^(0+384),w
  1615     12FC  160A  158A  22CC  160A  118A  	fcall	_Move_Servo
  1616     1301                     l3964:
  1617                           
  1618                           ;main.c: 234:             servo_needs_update = 0;
  1619     1301  1683               	bsf	3,5	;RP0=1, select bank3
  1620     1302  1703               	bsf	3,6	;RP1=1, select bank3
  1621     1303  01CD               	clrf	_servo_needs_update^(0+384)	;volatile
  1622     1304                     l3966:
  1623                           
  1624                           ;main.c: 238:         temp_counter++;
  1625     1304  3001               	movlw	1
  1626     1305  07B9               	addwf	main@temp_counter^(0+384),f
  1627     1306  1803               	skipnc
  1628     1307  0ABA               	incf	(main@temp_counter+1)^(0+384),f
  1629     1308  3000               	movlw	0
  1630     1309  07BA               	addwf	(main@temp_counter+1)^(0+384),f
  1631     130A                     l3968:
  1632                           
  1633                           ;main.c: 239:         if(temp_counter >= 1000) {
  1634     130A  3003               	movlw	3
  1635     130B  023A               	subwf	(main@temp_counter+1)^(0+384),w
  1636     130C  30E8               	movlw	232
  1637     130D  1903               	skipnz
  1638     130E  0239               	subwf	main@temp_counter^(0+384),w
  1639     130F  1C03               	skipc
  1640     1310  2B12               	goto	u5851
  1641     1311  2B13               	goto	u5850
  1642     1312                     u5851:
  1643     1312  2B39               	goto	l3976
  1644     1313                     u5850:
  1645     1313                     l3970:
  1646                           
  1647                           ;main.c: 240:             temperature = Read_Temperature();
  1648     1313  160A  158A  2653  160A  118A  	fcall	_Read_Temperature
  1649     1318  1283               	bcf	3,5	;RP0=0, select bank0
  1650     1319  1303               	bcf	3,6	;RP1=0, select bank0
  1651     131A  0865               	movf	?_Read_Temperature+3,w
  1652     131B  1683               	bsf	3,5	;RP0=1, select bank3
  1653     131C  1703               	bsf	3,6	;RP1=1, select bank3
  1654     131D  00C9               	movwf	(_temperature+3)^(0+384)	;volatile
  1655     131E  1283               	bcf	3,5	;RP0=0, select bank0
  1656     131F  1303               	bcf	3,6	;RP1=0, select bank0
  1657     1320  0864               	movf	?_Read_Temperature+2,w
  1658     1321  1683               	bsf	3,5	;RP0=1, select bank3
  1659     1322  1703               	bsf	3,6	;RP1=1, select bank3
  1660     1323  00C8               	movwf	(_temperature+2)^(0+384)	;volatile
  1661     1324  1283               	bcf	3,5	;RP0=0, select bank0
  1662     1325  1303               	bcf	3,6	;RP1=0, select bank0
  1663     1326  0863               	movf	?_Read_Temperature+1,w
  1664     1327  1683               	bsf	3,5	;RP0=1, select bank3
  1665     1328  1703               	bsf	3,6	;RP1=1, select bank3
  1666     1329  00C7               	movwf	(_temperature+1)^(0+384)	;volatile
  1667     132A  1283               	bcf	3,5	;RP0=0, select bank0
  1668     132B  1303               	bcf	3,6	;RP1=0, select bank0
  1669     132C  0862               	movf	?_Read_Temperature,w
  1670     132D  1683               	bsf	3,5	;RP0=1, select bank3
  1671     132E  1703               	bsf	3,6	;RP1=1, select bank3
  1672     132F  00C6               	movwf	_temperature^(0+384)	;volatile
  1673     1330                     l3972:
  1674                           
  1675                           ;main.c: 241:             Check_Temperature_Alarm();
  1676     1330  160A  158A  2447  160A  118A  	fcall	_Check_Temperature_Alarm
  1677     1335                     l3974:
  1678                           
  1679                           ;main.c: 242:             temp_counter = 0;
  1680     1335  1683               	bsf	3,5	;RP0=1, select bank3
  1681     1336  1703               	bsf	3,6	;RP1=1, select bank3
  1682     1337  01B9               	clrf	main@temp_counter^(0+384)
  1683     1338  01BA               	clrf	(main@temp_counter+1)^(0+384)
  1684     1339                     l3976:
  1685                           
  1686                           ;main.c: 246:         if(fireAlarm) {
  1687     1339  084B               	movf	_fireAlarm^(0+384),w	;volatile
  1688     133A  1903               	btfsc	3,2
  1689     133B  2B3D               	goto	u5861
  1690     133C  2B3E               	goto	u5860
  1691     133D                     u5861:
  1692     133D  2B53               	goto	l3988
  1693     133E                     u5860:
  1694     133E                     l3978:
  1695                           
  1696                           ;main.c: 248:             RD0 = 0;
  1697     133E  1283               	bcf	3,5	;RP0=0, select bank0
  1698     133F  1303               	bcf	3,6	;RP1=0, select bank0
  1699     1340  1008               	bcf	8,0	;volatile
  1700     1341                     l3980:
  1701                           
  1702                           ;main.c: 249:             ledBlinkCounter++;
  1703     1341  3001               	movlw	1
  1704     1342  1683               	bsf	3,5	;RP0=1, select bank3
  1705     1343  1703               	bsf	3,6	;RP1=1, select bank3
  1706     1344  07CA               	addwf	_ledBlinkCounter^(0+384),f	;volatile
  1707     1345                     l3982:
  1708                           
  1709                           ;main.c: 250:             if(ledBlinkCounter > 100) {
  1710     1345  3065               	movlw	101
  1711     1346  024A               	subwf	_ledBlinkCounter^(0+384),w	;volatile
  1712     1347  1C03               	skipc
  1713     1348  2B4A               	goto	u5871
  1714     1349  2B4B               	goto	u5870
  1715     134A                     u5871:
  1716     134A  2B6C               	goto	l3992
  1717     134B                     u5870:
  1718     134B                     l3984:
  1719                           
  1720                           ;main.c: 251:                 RD1 = !RD1;
  1721     134B  3002               	movlw	2
  1722     134C  1283               	bcf	3,5	;RP0=0, select bank0
  1723     134D  1303               	bcf	3,6	;RP1=0, select bank0
  1724     134E  0688               	xorwf	8,f
  1725     134F                     l3986:
  1726                           
  1727                           ;main.c: 252:                 ledBlinkCounter = 0;
  1728     134F  1683               	bsf	3,5	;RP0=1, select bank3
  1729     1350  1703               	bsf	3,6	;RP1=1, select bank3
  1730     1351  01CA               	clrf	_ledBlinkCounter^(0+384)	;volatile
  1731     1352  2B6C               	goto	l3992
  1732     1353                     l3988:
  1733                           
  1734                           ;main.c: 256:             RD0 = (currentState == ABIERTO);
  1735     1353  034C               	decf	_currentState^(0+384),w
  1736     1354  1903               	btfsc	3,2
  1737     1355  2B57               	goto	u5881
  1738     1356  2B5B               	goto	u5880
  1739     1357                     u5881:
  1740     1357  1283               	bcf	3,5	;RP0=0, select bank0
  1741     1358  1303               	bcf	3,6	;RP1=0, select bank0
  1742     1359  1408               	bsf	8,0	;volatile
  1743     135A  2B5E               	goto	u5894
  1744     135B                     u5880:
  1745     135B  1283               	bcf	3,5	;RP0=0, select bank0
  1746     135C  1303               	bcf	3,6	;RP1=0, select bank0
  1747     135D  1008               	bcf	8,0	;volatile
  1748     135E                     u5894:
  1749                           
  1750                           ;main.c: 257:             RD1 = (currentState == CERRADO);
  1751     135E  1683               	bsf	3,5	;RP0=1, select bank3
  1752     135F  1703               	bsf	3,6	;RP1=1, select bank3
  1753     1360  084C               	movf	_currentState^(0+384),w
  1754     1361  1903               	btfsc	3,2
  1755     1362  2B64               	goto	u5901
  1756     1363  2B68               	goto	u5900
  1757     1364                     u5901:
  1758     1364  1283               	bcf	3,5	;RP0=0, select bank0
  1759     1365  1303               	bcf	3,6	;RP1=0, select bank0
  1760     1366  1488               	bsf	8,1	;volatile
  1761     1367  2B6B               	goto	u5914
  1762     1368                     u5900:
  1763     1368  1283               	bcf	3,5	;RP0=0, select bank0
  1764     1369  1303               	bcf	3,6	;RP1=0, select bank0
  1765     136A  1088               	bcf	8,1	;volatile
  1766     136B                     u5914:
  1767     136B  2B4F               	goto	l3986
  1768     136C                     l3992:
  1769                           
  1770                           ;main.c: 262:         bt_counter++;
  1771     136C  3001               	movlw	1
  1772     136D  07BB               	addwf	main@bt_counter^(0+384),f
  1773     136E  1803               	skipnc
  1774     136F  0ABC               	incf	(main@bt_counter+1)^(0+384),f
  1775     1370  3000               	movlw	0
  1776     1371  07BC               	addwf	(main@bt_counter+1)^(0+384),f
  1777     1372                     l3994:
  1778                           
  1779                           ;main.c: 263:         if(bt_counter >= 500) {
  1780     1372  3001               	movlw	1
  1781     1373  023C               	subwf	(main@bt_counter+1)^(0+384),w
  1782     1374  30F4               	movlw	244
  1783     1375  1903               	skipnz
  1784     1376  023B               	subwf	main@bt_counter^(0+384),w
  1785     1377  1C03               	skipc
  1786     1378  2B7A               	goto	u5921
  1787     1379  2B7B               	goto	u5920
  1788     137A                     u5921:
  1789     137A  2BD7               	goto	l4010
  1790     137B                     u5920:
  1791     137B                     l3996:
  1792                           
  1793                           ;main.c: 265:             if(currentState == ABIERTO) {
  1794     137B  034C               	decf	_currentState^(0+384),w
  1795     137C  1D03               	btfss	3,2
  1796     137D  2B7F               	goto	u5931
  1797     137E  2B80               	goto	u5930
  1798     137F                     u5931:
  1799     137F  2B8C               	goto	l4000
  1800     1380                     u5930:
  1801     1380                     l3998:
  1802                           
  1803                           ;main.c: 266:                 UART_Write_String("S:A\n");
  1804     1380  309E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1805     1381  1283               	bcf	3,5	;RP0=0, select bank0
  1806     1382  1303               	bcf	3,6	;RP1=0, select bank0
  1807     1383  00A1               	movwf	UART_Write_String@str
  1808     1384  3080               	movlw	128
  1809     1385  00A2               	movwf	UART_Write_String@str+1
  1810     1386  160A  158A  23C9  160A  118A  	fcall	_UART_Write_String
  1811                           
  1812                           ;main.c: 267:             } else {
  1813     138B  2B97               	goto	l166
  1814     138C                     l4000:
  1815                           
  1816                           ;main.c: 268:                 UART_Write_String("S:C\n");
  1817     138C  30A3               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1818     138D  1283               	bcf	3,5	;RP0=0, select bank0
  1819     138E  1303               	bcf	3,6	;RP1=0, select bank0
  1820     138F  00A1               	movwf	UART_Write_String@str
  1821     1390  3080               	movlw	128
  1822     1391  00A2               	movwf	UART_Write_String@str+1
  1823     1392  160A  158A  23C9  160A  118A  	fcall	_UART_Write_String
  1824     1397                     l166:	
  1825                           ;main.c: 269:             }
  1826                           
  1827                           
  1828                           ;main.c: 272:             char tempStr[20];;main.c: 273:             sprintf(tempStr, "T
      +                          :%.1f\n", temperature);
  1829     1397  30A5               	movlw	(low (main@tempStr| (0+256)))& (0+255)
  1830     1398  1683               	bsf	3,5	;RP0=1, select bank3
  1831     1399  1703               	bsf	3,6	;RP1=1, select bank3
  1832     139A  0090               	movwf	sprintf@s^(0+384)
  1833     139B  308C               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1834     139C  0091               	movwf	sprintf@fmt^(0+384)
  1835     139D  0849               	movf	(_temperature+3)^(0+384),w	;volatile
  1836     139E  0095               	movwf	((?_sprintf+3)^(0+384)+2)
  1837     139F  0848               	movf	(_temperature+2)^(0+384),w	;volatile
  1838     13A0  0094               	movwf	((?_sprintf+2)^(0+384)+2)
  1839     13A1  0847               	movf	(_temperature+1)^(0+384),w	;volatile
  1840     13A2  0093               	movwf	((?_sprintf+1)^(0+384)+2)
  1841     13A3  0846               	movf	_temperature^(0+384),w	;volatile
  1842     13A4  0092               	movwf	(?_sprintf^(0+384)+2)
  1843     13A5  160A  158A  241C  160A  118A  	fcall	_sprintf
  1844                           
  1845                           ;main.c: 274:             UART_Write_String(tempStr);
  1846     13AA  30A5               	movlw	(low (main@tempStr| (0+256)))& (0+255)
  1847     13AB  1283               	bcf	3,5	;RP0=0, select bank0
  1848     13AC  1303               	bcf	3,6	;RP1=0, select bank0
  1849     13AD  00A1               	movwf	UART_Write_String@str
  1850     13AE  3001               	movlw	1
  1851     13AF  00A2               	movwf	UART_Write_String@str+1
  1852     13B0  160A  158A  23C9  160A  118A  	fcall	_UART_Write_String
  1853     13B5                     l4002:
  1854                           
  1855                           ;main.c: 277:             if(fireAlarm) {
  1856     13B5  1683               	bsf	3,5	;RP0=1, select bank3
  1857     13B6  1703               	bsf	3,6	;RP1=1, select bank3
  1858     13B7  084B               	movf	_fireAlarm^(0+384),w	;volatile
  1859     13B8  1903               	btfsc	3,2
  1860     13B9  2BBB               	goto	u5941
  1861     13BA  2BBC               	goto	u5940
  1862     13BB                     u5941:
  1863     13BB  2BC8               	goto	l4006
  1864     13BC                     u5940:
  1865     13BC                     l4004:
  1866                           
  1867                           ;main.c: 278:                 UART_Write_String("F:1\n");
  1868     13BC  3099               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1869     13BD  1283               	bcf	3,5	;RP0=0, select bank0
  1870     13BE  1303               	bcf	3,6	;RP1=0, select bank0
  1871     13BF  00A1               	movwf	UART_Write_String@str
  1872     13C0  3080               	movlw	128
  1873     13C1  00A2               	movwf	UART_Write_String@str+1
  1874     13C2  160A  158A  23C9  160A  118A  	fcall	_UART_Write_String
  1875                           
  1876                           ;main.c: 279:             } else {
  1877     13C7  2BD3               	goto	l4008
  1878     13C8                     l4006:
  1879                           
  1880                           ;main.c: 280:                 UART_Write_String("F:0\n");
  1881     13C8  3094               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1882     13C9  1283               	bcf	3,5	;RP0=0, select bank0
  1883     13CA  1303               	bcf	3,6	;RP1=0, select bank0
  1884     13CB  00A1               	movwf	UART_Write_String@str
  1885     13CC  3080               	movlw	128
  1886     13CD  00A2               	movwf	UART_Write_String@str+1
  1887     13CE  160A  158A  23C9  160A  118A  	fcall	_UART_Write_String
  1888     13D3                     l4008:
  1889                           
  1890                           ;main.c: 283:             bt_counter = 0;
  1891     13D3  1683               	bsf	3,5	;RP0=1, select bank3
  1892     13D4  1703               	bsf	3,6	;RP1=1, select bank3
  1893     13D5  01BB               	clrf	main@bt_counter^(0+384)
  1894     13D6  01BC               	clrf	(main@bt_counter+1)^(0+384)
  1895     13D7                     l4010:
  1896                           
  1897                           ;main.c: 287:         _delay((unsigned long)((1)*(20000000/4000.0)));
  1898     13D7  3007               	movlw	7
  1899     13D8  1683               	bsf	3,5	;RP0=1, select bank3
  1900     13D9  1703               	bsf	3,6	;RP1=1, select bank3
  1901     13DA  00A3               	movwf	(??_main^(0+384)+1)
  1902     13DB  307C               	movlw	124
  1903     13DC  00A2               	movwf	??_main^(0+384)
  1904     13DD                     u5987:
  1905     13DD  0BA2               	decfsz	??_main^(0+384),f
  1906     13DE  2BDD               	goto	u5987
  1907     13DF  0BA3               	decfsz	(??_main^(0+384)+1),f
  1908     13E0  2BDD               	goto	u5987
  1909     13E1  0000               	nop
  1910     13E2  2A97               	goto	l3934
  1911     13E3  120A  118A  2810   	ljmp	start
  1912     13E6                     __end_of_main:
  1913                           
  1914                           	psect	text1
  1915     1C1C                     __ptext1:	
  1916 ;; *************** function _sprintf *****************
  1917 ;; Defined at:
  1918 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  s               1    0[BANK3 ] PTR unsigned char 
  1921 ;;		 -> main@tempStr(20), 
  1922 ;;  fmt             1    1[BANK3 ] PTR const unsigned char 
  1923 ;;		 -> STR_9(8), 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  f              11    7[BANK3 ] struct _IO_FILE
  1926 ;;  ret             2    0        int 
  1927 ;;  ap              1    6[BANK3 ] PTR void [1]
  1928 ;;		 -> ?_sprintf(2), 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  2    0[BANK3 ] int 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1938 ;;      Params:         0       0       0       6       0
  1939 ;;      Locals:         0       0       0      12       0
  1940 ;;      Temps:          0       0       1       0       0
  1941 ;;      Totals:         0       0       1      18       0
  1942 ;;Total ram usage:       19 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 10
  1945 ;; This function calls:
  1946 ;;		_vfprintf
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952     1C1C                     _sprintf:	
  1953                           ;psect for function _sprintf
  1954                           
  1955     1C1C                     l3886:	
  1956                           ;incstack = 0
  1957 ;; hardware stack exceeded
  1958                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1959                           
  1960     1C1C  3092               	movlw	(low ((?_sprintf| (0+256)+2)))& (0+255)
  1961     1C1D  1683               	bsf	3,5	;RP0=1, select bank3
  1962     1C1E  1703               	bsf	3,6	;RP1=1, select bank3
  1963     1C1F  0096               	movwf	sprintf@ap^(0+384)
  1964     1C20                     l3888:
  1965     1C20  0810               	movf	sprintf@s^(0+384),w
  1966     1C21  0097               	movwf	sprintf@f^(0+384)
  1967     1C22  3001               	movlw	1
  1968     1C23  0098               	movwf	(sprintf@f+1)^(0+384)
  1969     1C24                     l3890:
  1970     1C24  0199               	clrf	(sprintf@f^(0+384)+2)
  1971     1C25  019A               	clrf	((sprintf@f+1)^(0+384)+2)
  1972     1C26                     l3892:
  1973     1C26  01A0               	clrf	(sprintf@f^(0+384)+9)
  1974     1C27  01A1               	clrf	((sprintf@f+1)^(0+384)+9)
  1975     1C28                     l3894:
  1976     1C28  3097               	movlw	low sprintf@f
  1977     1C29  1683               	bsf	3,5	;RP0=1, select bank1
  1978     1C2A  1303               	bcf	3,6	;RP1=0, select bank1
  1979     1C2B  00E9               	movwf	vfprintf@fp^(0+128)
  1980     1C2C  3001               	movlw	high sprintf@f
  1981     1C2D  00EA               	movwf	(vfprintf@fp^(0+128)+1)
  1982     1C2E  1683               	bsf	3,5	;RP0=1, select bank3
  1983     1C2F  1703               	bsf	3,6	;RP1=1, select bank3
  1984     1C30  0811               	movf	sprintf@fmt^(0+384),w
  1985     1C31  1683               	bsf	3,5	;RP0=1, select bank1
  1986     1C32  1303               	bcf	3,6	;RP1=0, select bank1
  1987     1C33  00EB               	movwf	vfprintf@fmt^(0+128)
  1988     1C34  3096               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  1989     1C35  00EC               	movwf	vfprintf@ap^(0+128)
  1990     1C36  160A  158A  2335  160A  158A  	fcall	_vfprintf
  1991     1C3B                     l3896:
  1992     1C3B  1683               	bsf	3,5	;RP0=1, select bank3
  1993     1C3C  1703               	bsf	3,6	;RP1=1, select bank3
  1994     1C3D  0819               	movf	(sprintf@f^(0+384)+2),w
  1995     1C3E  0710               	addwf	sprintf@s^(0+384),w
  1996     1C3F  1683               	bsf	3,5	;RP0=1, select bank1
  1997     1C40  1303               	bcf	3,6	;RP1=0, select bank1
  1998     1C41  00EE               	movwf	??_sprintf^(0+128)
  1999     1C42  086E               	movf	??_sprintf^(0+128),w
  2000     1C43  0084               	movwf	4
  2001     1C44  1783               	bsf	3,7	;select IRP bank2
  2002     1C45  0180               	clrf	0
  2003     1C46                     l720:
  2004     1C46  0008               	return
  2005     1C47                     __end_of_sprintf:
  2006                           
  2007                           	psect	text2
  2008     1B35                     __ptext2:	
  2009 ;; *************** function _vfprintf *****************
  2010 ;; Defined at:
  2011 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;  fp              2   73[BANK1 ] PTR struct _IO_FILE
  2014 ;;		 -> sprintf@f(11), 
  2015 ;;  fmt             1   75[BANK1 ] PTR const unsigned char 
  2016 ;;		 -> STR_9(8), 
  2017 ;;  ap              1   76[BANK1 ] PTR PTR void 
  2018 ;;		 -> sprintf@ap(1), 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  cfmt            1   77[BANK1 ] PTR unsigned char 
  2021 ;;		 -> STR_9(8), 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  2   73[BANK1 ] int 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2031 ;;      Params:         0       0       4       0       0
  2032 ;;      Locals:         0       0       1       0       0
  2033 ;;      Temps:          0       0       0       0       0
  2034 ;;      Totals:         0       0       5       0       0
  2035 ;;Total ram usage:        5 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 9
  2038 ;; This function calls:
  2039 ;;		_vfpfcnvrt
  2040 ;; This function is called by:
  2041 ;;		_sprintf
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045     1B35                     _vfprintf:	
  2046                           ;psect for function _vfprintf
  2047                           
  2048     1B35                     l3840:	
  2049                           ;incstack = 0
  2050 ;; hardware stack exceeded
  2051                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2052                           
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2055     1B35  1683               	bsf	3,5	;RP0=1, select bank1
  2056     1B36  1303               	bcf	3,6	;RP1=0, select bank1
  2057     1B37  086B               	movf	vfprintf@fmt^(0+128),w
  2058     1B38  00ED               	movwf	vfprintf@cfmt^(0+128)
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2061     1B39  2B47               	goto	l3844
  2062     1B3A                     l3842:
  2063                           
  2064                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2065     1B3A  0869               	movf	vfprintf@fp^(0+128),w
  2066     1B3B  00DD               	movwf	vfpfcnvrt@fp^(0+128)
  2067     1B3C  086A               	movf	(vfprintf@fp+1)^(0+128),w
  2068     1B3D  00DE               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  2069     1B3E  30ED               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2070     1B3F  00DF               	movwf	vfpfcnvrt@fmt^(0+128)
  2071     1B40  086C               	movf	vfprintf@ap^(0+128),w
  2072     1B41  00E0               	movwf	vfpfcnvrt@ap^(0+128)
  2073     1B42  120A  158A  204C  160A  158A  	fcall	_vfpfcnvrt
  2074     1B47                     l3844:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2077     1B47  1683               	bsf	3,5	;RP0=1, select bank1
  2078     1B48  1303               	bcf	3,6	;RP1=0, select bank1
  2079     1B49  086D               	movf	vfprintf@cfmt^(0+128),w
  2080     1B4A  0084               	movwf	4
  2081     1B4B  160A  118A  200A  160A  158A  	fcall	stringdir
  2082     1B50  3A00               	xorlw	0
  2083     1B51  1D03               	skipz
  2084     1B52  2B54               	goto	u5741
  2085     1B53  2B55               	goto	u5740
  2086     1B54                     u5741:
  2087     1B54  2B3A               	goto	l3842
  2088     1B55                     u5740:
  2089     1B55                     l3846:
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2092     1B55  01E9               	clrf	?_vfprintf^(0+128)
  2093     1B56  01EA               	clrf	(?_vfprintf+1)^(0+128)
  2094     1B57                     l838:
  2095     1B57  0008               	return
  2096     1B58                     __end_of_vfprintf:
  2097                           
  2098                           	psect	text3
  2099     084C                     __ptext3:	
  2100 ;; *************** function _vfpfcnvrt *****************
  2101 ;; Defined at:
  2102 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  fp              2   61[BANK1 ] PTR struct _IO_FILE
  2105 ;;		 -> sprintf@f(11), 
  2106 ;;  fmt             1   63[BANK1 ] PTR PTR unsigned char 
  2107 ;;		 -> vfprintf@cfmt(1), 
  2108 ;;  ap              1   64[BANK1 ] PTR PTR void 
  2109 ;;		 -> sprintf@ap(1), 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  convarg         4   67[BANK1 ] struct .
  2112 ;;  cp              1   72[BANK1 ] PTR unsigned char 
  2113 ;;		 -> STR_9(8), 
  2114 ;;  c               1   71[BANK1 ] unsigned char 
  2115 ;;  done            1    0        _Bool 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2125 ;;      Params:         0       0       4       0       0
  2126 ;;      Locals:         0       0       6       0       0
  2127 ;;      Temps:          0       0       2       0       0
  2128 ;;      Totals:         0       0      12       0       0
  2129 ;;Total ram usage:       12 bytes
  2130 ;; Hardware stack levels used: 1
  2131 ;; Hardware stack levels required when called: 8
  2132 ;; This function calls:
  2133 ;;		_efgtoa
  2134 ;;		_fputc
  2135 ;;		_read_prec_or_width
  2136 ;; This function is called by:
  2137 ;;		_vfprintf
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141     084C                     _vfpfcnvrt:	
  2142                           ;psect for function _vfpfcnvrt
  2143                           
  2144     084C                     l3780:	
  2145                           ;incstack = 0
  2146 ;; hardware stack exceeded
  2147                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2148                           
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2151     084C  1683               	bsf	3,5	;RP0=1, select bank1
  2152     084D  1303               	bcf	3,6	;RP1=0, select bank1
  2153     084E  085F               	movf	vfpfcnvrt@fmt^(0+128),w
  2154     084F  0084               	movwf	4
  2155     0850  1383               	bcf	3,7	;select IRP bank0
  2156     0851  0800               	movf	0,w
  2157     0852  0084               	movwf	4
  2158     0853  160A  118A  200A  120A  158A  	fcall	stringdir
  2159     0858  3A25               	xorlw	37
  2160     0859  1D03               	skipz
  2161     085A  285C               	goto	u5701
  2162     085B  285D               	goto	u5700
  2163     085C                     u5701:
  2164     085C  2926               	goto	l3830
  2165     085D                     u5700:
  2166     085D                     l3782:
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2169     085D  085F               	movf	vfpfcnvrt@fmt^(0+128),w
  2170     085E  0084               	movwf	4
  2171     085F  3001               	movlw	1
  2172     0860  0780               	addwf	0,f
  2173     0861                     l3784:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2176     0861  01F7               	clrf	_width
  2177     0862  01F8               	clrf	_width+1
  2178     0863  3000               	movlw	0
  2179     0864  00EF               	movwf	_flags^(0+128)
  2180     0865                     l3786:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2183     0865  30FF               	movlw	255
  2184     0866  00F9               	movwf	_prec
  2185     0867  30FF               	movlw	255
  2186     0868  00FA               	movwf	_prec+1
  2187     0869                     l3788:
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2190     0869  085F               	movf	vfpfcnvrt@fmt^(0+128),w
  2191     086A  0084               	movwf	4
  2192     086B  0800               	movf	0,w
  2193     086C  0084               	movwf	4
  2194     086D  160A  118A  200A  120A  158A  	fcall	stringdir
  2195     0872  3A2E               	xorlw	46
  2196     0873  1D03               	skipz
  2197     0874  2876               	goto	u5711
  2198     0875  2877               	goto	u5710
  2199     0876                     u5711:
  2200     0876  2890               	goto	l3794
  2201     0877                     u5710:
  2202     0877                     l3790:
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2205     0877  085F               	movf	vfpfcnvrt@fmt^(0+128),w
  2206     0878  0084               	movwf	4
  2207     0879  3001               	movlw	1
  2208     087A  0780               	addwf	0,f
  2209     087B                     l3792:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2212     087B  085F               	movf	vfpfcnvrt@fmt^(0+128),w
  2213     087C  1283               	bcf	3,5	;RP0=0, select bank0
  2214     087D  1303               	bcf	3,6	;RP1=0, select bank0
  2215     087E  00A6               	movwf	read_prec_or_width@fmt
  2216     087F  1683               	bsf	3,5	;RP0=1, select bank1
  2217     0880  1303               	bcf	3,6	;RP1=0, select bank1
  2218     0881  0860               	movf	vfpfcnvrt@ap^(0+128),w
  2219     0882  1283               	bcf	3,5	;RP0=0, select bank0
  2220     0883  1303               	bcf	3,6	;RP1=0, select bank0
  2221     0884  00A7               	movwf	read_prec_or_width@ap
  2222     0885  160A  158A  2585  120A  158A  	fcall	_read_prec_or_width
  2223     088A  1283               	bcf	3,5	;RP0=0, select bank0
  2224     088B  1303               	bcf	3,6	;RP1=0, select bank0
  2225     088C  0827               	movf	?_read_prec_or_width+1,w
  2226     088D  00FA               	movwf	_prec+1
  2227     088E  0826               	movf	?_read_prec_or_width,w
  2228     088F  00F9               	movwf	_prec
  2229     0890                     l3794:
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2232     0890  1683               	bsf	3,5	;RP0=1, select bank1
  2233     0891  1303               	bcf	3,6	;RP1=0, select bank1
  2234     0892  085F               	movf	vfpfcnvrt@fmt^(0+128),w
  2235     0893  0084               	movwf	4
  2236     0894  1383               	bcf	3,7	;select IRP bank0
  2237     0895  0800               	movf	0,w
  2238     0896  00E8               	movwf	vfpfcnvrt@cp^(0+128)
  2239     0897                     l3796:
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2242     0897  0868               	movf	vfpfcnvrt@cp^(0+128),w
  2243     0898  0084               	movwf	4
  2244     0899  160A  118A  200A  120A  158A  	fcall	stringdir
  2245     089E  00E7               	movwf	vfpfcnvrt@c^(0+128)
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2248     089F  28A8               	goto	l3804
  2249     08A0                     l3798:
  2250                           
  2251                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2252     08A0  3001               	movlw	1
  2253     08A1  07E8               	addwf	vfpfcnvrt@cp^(0+128),f
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2256     08A2  28B3               	goto	l3806
  2257     08A3                     l820:	
  2258                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1710:    case 'f'
      +                          :
  2259                           
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2262     08A3  306C               	movlw	108
  2263     08A4  00E7               	movwf	vfpfcnvrt@c^(0+128)
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2266     08A5  28B3               	goto	l3806
  2267     08A6                     l3800:
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2270     08A6  01E7               	clrf	vfpfcnvrt@c^(0+128)
  2271                           
  2272                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2273     08A7  28B3               	goto	l3806
  2274     08A8                     l3804:
  2275     08A8  0867               	movf	vfpfcnvrt@c^(0+128),w
  2276                           
  2277                           ; Switch size 1, requested type "simple"
  2278                           ; Number of cases is 3, Range of values is 76 to 108
  2279                           ; switch strategies available:
  2280                           ; Name         Instructions Cycles
  2281                           ; simple_byte           10     6 (average)
  2282                           ; direct_byte          110    11 (fixed)
  2283                           ; jumptable            263     9 (fixed)
  2284                           ;	Chosen strategy is simple_byte
  2285     08A9  3A4C               	xorlw	76	; case 76
  2286     08AA  1903               	skipnz
  2287     08AB  28A0               	goto	l3798
  2288     08AC  3A2A               	xorlw	42	; case 102
  2289     08AD  1903               	skipnz
  2290     08AE  28A3               	goto	l820
  2291     08AF  3A0A               	xorlw	10	; case 108
  2292     08B0  1903               	skipnz
  2293     08B1  28A0               	goto	l3798
  2294     08B2  28A6               	goto	l3800
  2295     08B3                     l3806:
  2296     08B3  0868               	movf	vfpfcnvrt@cp^(0+128),w
  2297     08B4  0084               	movwf	4
  2298     08B5  160A  118A  200A  120A  158A  	fcall	stringdir
  2299     08BA  3A66               	xorlw	102
  2300     08BB  1D03               	skipz
  2301     08BC  28BE               	goto	u5721
  2302     08BD  28BF               	goto	u5720
  2303     08BE                     u5721:
  2304     08BE  291E               	goto	l3826
  2305     08BF                     u5720:
  2306     08BF  28EA               	goto	l3814
  2307     08C0                     l3808:
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2310     08C0  0860               	movf	vfpfcnvrt@ap^(0+128),w
  2311     08C1  0084               	movwf	4
  2312     08C2  1783               	bsf	3,7	;select IRP bank2
  2313     08C3  0800               	movf	0,w
  2314     08C4  00FF               	movwf	btemp+1
  2315     08C5  3004               	movlw	4
  2316     08C6  0780               	addwf	0,f
  2317     08C7  087F               	movf	btemp+1,w
  2318     08C8  0084               	movwf	4
  2319     08C9  0800               	movf	0,w
  2320     08CA  00E3               	movwf	vfpfcnvrt@convarg^(0+128)
  2321     08CB  0A84               	incf	4,f
  2322     08CC  0800               	movf	0,w
  2323     08CD  00E4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  2324     08CE  0A84               	incf	4,f
  2325     08CF  0800               	movf	0,w
  2326     08D0  00E5               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  2327     08D1  0A84               	incf	4,f
  2328     08D2  0800               	movf	0,w
  2329     08D3  00E6               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2332     08D4  28F2               	goto	l3816
  2333     08D5                     l3810:
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2336     08D5  0860               	movf	vfpfcnvrt@ap^(0+128),w
  2337     08D6  0084               	movwf	4
  2338     08D7  1783               	bsf	3,7	;select IRP bank2
  2339     08D8  0800               	movf	0,w
  2340     08D9  00FF               	movwf	btemp+1
  2341     08DA  3004               	movlw	4
  2342     08DB  0780               	addwf	0,f
  2343     08DC  087F               	movf	btemp+1,w
  2344     08DD  0084               	movwf	4
  2345     08DE  0800               	movf	0,w
  2346     08DF  00E3               	movwf	vfpfcnvrt@convarg^(0+128)
  2347     08E0  0A84               	incf	4,f
  2348     08E1  0800               	movf	0,w
  2349     08E2  00E4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  2350     08E3  0A84               	incf	4,f
  2351     08E4  0800               	movf	0,w
  2352     08E5  00E5               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  2353     08E6  0A84               	incf	4,f
  2354     08E7  0800               	movf	0,w
  2355     08E8  00E6               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  2356                           
  2357                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2358     08E9  28F2               	goto	l3816
  2359     08EA                     l3814:
  2360     08EA  0867               	movf	vfpfcnvrt@c^(0+128),w
  2361                           
  2362                           ; Switch size 1, requested type "simple"
  2363                           ; Number of cases is 2, Range of values is 76 to 108
  2364                           ; switch strategies available:
  2365                           ; Name         Instructions Cycles
  2366                           ; simple_byte            7     4 (average)
  2367                           ; direct_byte          110    11 (fixed)
  2368                           ; jumptable            263     9 (fixed)
  2369                           ;	Chosen strategy is simple_byte
  2370     08EB  3A4C               	xorlw	76	; case 76
  2371     08EC  1903               	skipnz
  2372     08ED  28D5               	goto	l3810
  2373     08EE  3A20               	xorlw	32	; case 108
  2374     08EF  1903               	skipnz
  2375     08F0  28C0               	goto	l3808
  2376     08F1  28F2               	goto	l3816
  2377     08F2                     l3816:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2380     08F2  085F               	movf	vfpfcnvrt@fmt^(0+128),w
  2381     08F3  0084               	movwf	4
  2382     08F4  0868               	movf	vfpfcnvrt@cp^(0+128),w
  2383     08F5  3E01               	addlw	1
  2384     08F6  1383               	bcf	3,7	;select IRP bank0
  2385     08F7  0080               	movwf	0
  2386                           
  2387                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2388     08F8  2913               	goto	l3824
  2389     08F9                     l3818:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2392     08F9  085D               	movf	vfpfcnvrt@fp^(0+128),w
  2393     08FA  00AA               	movwf	efgtoa@fp^(0+128)
  2394     08FB  085E               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  2395     08FC  00AB               	movwf	(efgtoa@fp+1)^(0+128)
  2396     08FD  0866               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
  2397     08FE  00AF               	movwf	(efgtoa@f+3)^(0+128)
  2398     08FF  0865               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
  2399     0900  00AE               	movwf	(efgtoa@f+2)^(0+128)
  2400     0901  0864               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  2401     0902  00AD               	movwf	(efgtoa@f+1)^(0+128)
  2402     0903  0863               	movf	vfpfcnvrt@convarg^(0+128),w
  2403     0904  00AC               	movwf	efgtoa@f^(0+128)
  2404     0905  0868               	movf	vfpfcnvrt@cp^(0+128),w
  2405     0906  0084               	movwf	4
  2406     0907  160A  118A  200A  120A  158A  	fcall	stringdir
  2407     090C  00B0               	movwf	efgtoa@c^(0+128)
  2408     090D  120A  158A  2490  120A  158A  	fcall	_efgtoa
  2409     0912  294D               	goto	l831
  2410     0913                     l3824:
  2411     0913  0868               	movf	vfpfcnvrt@cp^(0+128),w
  2412     0914  0084               	movwf	4
  2413     0915  160A  118A  200A  120A  158A  	fcall	stringdir
  2414                           
  2415                           ; Switch size 1, requested type "simple"
  2416                           ; Number of cases is 1, Range of values is 102 to 102
  2417                           ; switch strategies available:
  2418                           ; Name         Instructions Cycles
  2419                           ; simple_byte            4     3 (average)
  2420                           ; direct_byte           14    11 (fixed)
  2421                           ; jumptable            263     9 (fixed)
  2422                           ;	Chosen strategy is simple_byte
  2423     091A  3A66               	xorlw	102	; case 102
  2424     091B  1903               	skipnz
  2425     091C  28F9               	goto	l3818
  2426     091D  291E               	goto	l3826
  2427     091E                     l3826:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2430     091E  1683               	bsf	3,5	;RP0=1, select bank1
  2431     091F  1303               	bcf	3,6	;RP1=0, select bank1
  2432     0920  085F               	movf	vfpfcnvrt@fmt^(0+128),w
  2433     0921  0084               	movwf	4
  2434     0922  3001               	movlw	1
  2435     0923  1383               	bcf	3,7	;select IRP bank0
  2436     0924  0780               	addwf	0,f
  2437     0925  294D               	goto	l831
  2438     0926                     l3830:
  2439                           
  2440                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2441     0926  085F               	movf	vfpfcnvrt@fmt^(0+128),w
  2442     0927  0084               	movwf	4
  2443     0928  0800               	movf	0,w
  2444     0929  0084               	movwf	4
  2445     092A  160A  118A  200A  120A  158A  	fcall	stringdir
  2446     092F  00E1               	movwf	??_vfpfcnvrt^(0+128)
  2447     0930  01E2               	clrf	(??_vfpfcnvrt^(0+128)+1)
  2448     0931  0861               	movf	??_vfpfcnvrt^(0+128),w
  2449     0932  1283               	bcf	3,5	;RP0=0, select bank0
  2450     0933  1303               	bcf	3,6	;RP1=0, select bank0
  2451     0934  00A0               	movwf	fputc@c
  2452     0935  1683               	bsf	3,5	;RP0=1, select bank1
  2453     0936  1303               	bcf	3,6	;RP1=0, select bank1
  2454     0937  0862               	movf	(??_vfpfcnvrt+1)^(0+128),w
  2455     0938  1283               	bcf	3,5	;RP0=0, select bank0
  2456     0939  1303               	bcf	3,6	;RP1=0, select bank0
  2457     093A  00A1               	movwf	fputc@c+1
  2458     093B  1683               	bsf	3,5	;RP0=1, select bank1
  2459     093C  1303               	bcf	3,6	;RP1=0, select bank1
  2460     093D  085D               	movf	vfpfcnvrt@fp^(0+128),w
  2461     093E  1283               	bcf	3,5	;RP0=0, select bank0
  2462     093F  1303               	bcf	3,6	;RP1=0, select bank0
  2463     0940  00A2               	movwf	fputc@fp
  2464     0941  1683               	bsf	3,5	;RP0=1, select bank1
  2465     0942  1303               	bcf	3,6	;RP1=0, select bank1
  2466     0943  085E               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  2467     0944  1283               	bcf	3,5	;RP0=0, select bank0
  2468     0945  1303               	bcf	3,6	;RP1=0, select bank0
  2469     0946  00A3               	movwf	fputc@fp+1
  2470     0947  160A  158A  2760  120A  158A  	fcall	_fputc
  2471     094C  291E               	goto	l3826
  2472     094D                     l831:
  2473     094D  0008               	return
  2474     094E                     __end_of_vfpfcnvrt:
  2475                           
  2476                           	psect	text4
  2477     1D85                     __ptext4:	
  2478 ;; *************** function _read_prec_or_width *****************
  2479 ;; Defined at:
  2480 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  fmt             1    6[BANK0 ] PTR PTR const unsigned c
  2483 ;;		 -> vfprintf@cfmt(1), 
  2484 ;;  ap              1    7[BANK0 ] PTR PTR void [1]
  2485 ;;		 -> sprintf@ap(1), 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  c               1    8[BANK0 ] unsigned char 
  2488 ;;  n               2    9[BANK0 ] int 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  2    6[BANK0 ] int 
  2491 ;; Registers used:
  2492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2498 ;;      Params:         0       2       0       0       0
  2499 ;;      Locals:         0       3       0       0       0
  2500 ;;      Temps:          0       0       0       0       0
  2501 ;;      Totals:         0       5       0       0       0
  2502 ;;Total ram usage:        5 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 4
  2505 ;; This function calls:
  2506 ;;		___wmul
  2507 ;; This function is called by:
  2508 ;;		_vfpfcnvrt
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512     1D85                     _read_prec_or_width:	
  2513                           ;psect for function _read_prec_or_width
  2514                           
  2515     1D85                     l3762:	
  2516                           ;incstack = 0
  2517 ;; using string table level
  2518                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2519                           
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2522     1D85  1283               	bcf	3,5	;RP0=0, select bank0
  2523     1D86  1303               	bcf	3,6	;RP1=0, select bank0
  2524     1D87  01A9               	clrf	read_prec_or_width@n
  2525     1D88  01AA               	clrf	read_prec_or_width@n+1
  2526     1D89                     l3764:
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2529     1D89  0826               	movf	read_prec_or_width@fmt,w
  2530     1D8A  0084               	movwf	4
  2531     1D8B  1383               	bcf	3,7	;select IRP bank0
  2532     1D8C  0800               	movf	0,w
  2533     1D8D  0084               	movwf	4
  2534     1D8E  160A  118A  200A  160A  158A  	fcall	stringdir
  2535     1D93  3A2A               	xorlw	42
  2536     1D94  1D03               	skipz
  2537     1D95  2D97               	goto	u5681
  2538     1D96  2D98               	goto	u5680
  2539     1D97                     u5681:
  2540     1D97  2DC7               	goto	l3774
  2541     1D98                     u5680:
  2542     1D98                     l3766:
  2543                           
  2544                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2545     1D98  0826               	movf	read_prec_or_width@fmt,w
  2546     1D99  0084               	movwf	4
  2547     1D9A  3001               	movlw	1
  2548     1D9B  0780               	addwf	0,f
  2549     1D9C                     l3768:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2552     1D9C  0827               	movf	read_prec_or_width@ap,w
  2553     1D9D  0084               	movwf	4
  2554     1D9E  1783               	bsf	3,7	;select IRP bank2
  2555     1D9F  0800               	movf	0,w
  2556     1DA0  00FF               	movwf	btemp+1
  2557     1DA1  3002               	movlw	2
  2558     1DA2  0780               	addwf	0,f
  2559     1DA3  087F               	movf	btemp+1,w
  2560     1DA4  0084               	movwf	4
  2561     1DA5  0800               	movf	0,w
  2562     1DA6  00A9               	movwf	read_prec_or_width@n
  2563     1DA7  0A84               	incf	4,f
  2564     1DA8  0800               	movf	0,w
  2565     1DA9  00AA               	movwf	read_prec_or_width@n+1
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2568     1DAA  2DD8               	goto	l3776
  2569     1DAB                     l3770:
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2572     1DAB  082A               	movf	read_prec_or_width@n+1,w
  2573     1DAC  00A1               	movwf	___wmul@multiplier+1
  2574     1DAD  0829               	movf	read_prec_or_width@n,w
  2575     1DAE  00A0               	movwf	___wmul@multiplier
  2576     1DAF  300A               	movlw	10
  2577     1DB0  00A2               	movwf	___wmul@multiplicand
  2578     1DB1  3000               	movlw	0
  2579     1DB2  00A3               	movwf	___wmul@multiplicand+1
  2580     1DB3  160A  158A  23A2  160A  158A  	fcall	___wmul
  2581     1DB8  1283               	bcf	3,5	;RP0=0, select bank0
  2582     1DB9  1303               	bcf	3,6	;RP1=0, select bank0
  2583     1DBA  0828               	movf	read_prec_or_width@c,w
  2584     1DBB  0720               	addwf	?___wmul,w
  2585     1DBC  00A9               	movwf	read_prec_or_width@n
  2586     1DBD  3000               	movlw	0
  2587     1DBE  1803               	skipnc
  2588     1DBF  3001               	movlw	1
  2589     1DC0  0721               	addwf	?___wmul+1,w
  2590     1DC1  00AA               	movwf	read_prec_or_width@n+1
  2591     1DC2                     l3772:
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2594     1DC2  0826               	movf	read_prec_or_width@fmt,w
  2595     1DC3  0084               	movwf	4
  2596     1DC4  3001               	movlw	1
  2597     1DC5  1383               	bcf	3,7	;select IRP bank0
  2598     1DC6  0780               	addwf	0,f
  2599     1DC7                     l3774:
  2600                           
  2601                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2602     1DC7  0826               	movf	read_prec_or_width@fmt,w
  2603     1DC8  0084               	movwf	4
  2604     1DC9  0800               	movf	0,w
  2605     1DCA  0084               	movwf	4
  2606     1DCB  160A  118A  200A  160A  158A  	fcall	stringdir
  2607     1DD0  3ED0               	addlw	208
  2608     1DD1  00A8               	movwf	read_prec_or_width@c
  2609     1DD2  300A               	movlw	10
  2610     1DD3  0228               	subwf	read_prec_or_width@c,w
  2611     1DD4  1C03               	skipc
  2612     1DD5  2DD7               	goto	u5691
  2613     1DD6  2DD8               	goto	u5690
  2614     1DD7                     u5691:
  2615     1DD7  2DAB               	goto	l3770
  2616     1DD8                     u5690:
  2617     1DD8                     l3776:
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2620     1DD8  082A               	movf	read_prec_or_width@n+1,w
  2621     1DD9  00A7               	movwf	?_read_prec_or_width+1
  2622     1DDA  0829               	movf	read_prec_or_width@n,w
  2623     1DDB  00A6               	movwf	?_read_prec_or_width
  2624     1DDC                     l811:
  2625     1DDC  0008               	return
  2626     1DDD                     __end_of_read_prec_or_width:
  2627                           
  2628                           	psect	text5
  2629     1BA2                     __ptext5:	
  2630 ;; *************** function ___wmul *****************
  2631 ;; Defined at:
  2632 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2635 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  product         2    4[BANK0 ] unsigned int 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  2    0[BANK0 ] unsigned int 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2, status,0
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2647 ;;      Params:         0       4       0       0       0
  2648 ;;      Locals:         0       2       0       0       0
  2649 ;;      Temps:          0       0       0       0       0
  2650 ;;      Totals:         0       6       0       0       0
  2651 ;;Total ram usage:        6 bytes
  2652 ;; Hardware stack levels used: 1
  2653 ;; Hardware stack levels required when called: 3
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_read_prec_or_width
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661     1BA2                     ___wmul:	
  2662                           ;psect for function ___wmul
  2663                           
  2664     1BA2                     l3488:	
  2665                           ;incstack = 0
  2666                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2667                           
  2668     1BA2  1283               	bcf	3,5	;RP0=0, select bank0
  2669     1BA3  1303               	bcf	3,6	;RP1=0, select bank0
  2670     1BA4  01A4               	clrf	___wmul@product
  2671     1BA5  01A5               	clrf	___wmul@product+1
  2672     1BA6                     l3490:
  2673     1BA6  1C20               	btfss	___wmul@multiplier,0
  2674     1BA7  2BA9               	goto	u5231
  2675     1BA8  2BAA               	goto	u5230
  2676     1BA9                     u5231:
  2677     1BA9  2BB0               	goto	l257
  2678     1BAA                     u5230:
  2679     1BAA                     l3492:
  2680     1BAA  0822               	movf	___wmul@multiplicand,w
  2681     1BAB  07A4               	addwf	___wmul@product,f
  2682     1BAC  1803               	skipnc
  2683     1BAD  0AA5               	incf	___wmul@product+1,f
  2684     1BAE  0823               	movf	___wmul@multiplicand+1,w
  2685     1BAF  07A5               	addwf	___wmul@product+1,f
  2686     1BB0                     l257:
  2687     1BB0  3001               	movlw	1
  2688     1BB1                     u5245:
  2689     1BB1  1003               	clrc
  2690     1BB2  0DA2               	rlf	___wmul@multiplicand,f
  2691     1BB3  0DA3               	rlf	___wmul@multiplicand+1,f
  2692     1BB4  3EFF               	addlw	-1
  2693     1BB5  1D03               	skipz
  2694     1BB6  2BB1               	goto	u5245
  2695     1BB7                     l3494:
  2696     1BB7  3001               	movlw	1
  2697     1BB8                     u5255:
  2698     1BB8  1003               	clrc
  2699     1BB9  0CA1               	rrf	___wmul@multiplier+1,f
  2700     1BBA  0CA0               	rrf	___wmul@multiplier,f
  2701     1BBB  3EFF               	addlw	-1
  2702     1BBC  1D03               	skipz
  2703     1BBD  2BB8               	goto	u5255
  2704     1BBE                     l3496:
  2705     1BBE  0820               	movf	___wmul@multiplier,w
  2706     1BBF  0421               	iorwf	___wmul@multiplier+1,w
  2707     1BC0  1D03               	btfss	3,2
  2708     1BC1  2BC3               	goto	u5261
  2709     1BC2  2BC4               	goto	u5260
  2710     1BC3                     u5261:
  2711     1BC3  2BA6               	goto	l3490
  2712     1BC4                     u5260:
  2713     1BC4                     l3498:
  2714     1BC4  0825               	movf	___wmul@product+1,w
  2715     1BC5  00A1               	movwf	?___wmul+1
  2716     1BC6  0824               	movf	___wmul@product,w
  2717     1BC7  00A0               	movwf	?___wmul
  2718     1BC8                     l259:
  2719     1BC8  0008               	return
  2720     1BC9                     __end_of___wmul:
  2721                           
  2722                           	psect	text6
  2723     0C90                     __ptext6:	
  2724 ;; *************** function _efgtoa *****************
  2725 ;; Defined at:
  2726 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  fp              2   10[BANK1 ] PTR struct _IO_FILE
  2729 ;;		 -> sprintf@f(11), 
  2730 ;;  f               4   12[BANK1 ] PTR struct _IO_FILE
  2731 ;;  c               1   16[BANK1 ] unsigned char 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  u               4   57[BANK1 ] struct flui
  2734 ;;  g               4   51[BANK1 ] struct flui
  2735 ;;  l               4   46[BANK1 ] struct flui
  2736 ;;  h               4   42[BANK1 ] struct flui
  2737 ;;  ou              4   36[BANK1 ] struct flui
  2738 ;;  n               2   55[BANK1 ] int 
  2739 ;;  i               2   40[BANK1 ] int 
  2740 ;;  w               2   34[BANK1 ] int 
  2741 ;;  e               2   32[BANK1 ] int 
  2742 ;;  m               2   30[BANK1 ] int 
  2743 ;;  d               2   28[BANK1 ] int 
  2744 ;;  t               2   21[BANK1 ] int 
  2745 ;;  p               2   19[BANK1 ] int 
  2746 ;;  ne              2   17[BANK1 ] int 
  2747 ;;  sign            1   50[BANK1 ] unsigned char 
  2748 ;;  nmode           1   27[BANK1 ] unsigned char 
  2749 ;;  mode            1   26[BANK1 ] unsigned char 
  2750 ;;  pp              1   25[BANK1 ] unsigned char 
  2751 ;;  esign           1    0        unsigned char 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2761 ;;      Params:         0       0       7       0       0
  2762 ;;      Locals:         0       0      44       0       0
  2763 ;;      Temps:          0       4       0       0       0
  2764 ;;      Totals:         0       4      51       0       0
  2765 ;;Total ram usage:       55 bytes
  2766 ;; Hardware stack levels used: 1
  2767 ;; Hardware stack levels required when called: 7
  2768 ;; This function calls:
  2769 ;;		___fladd
  2770 ;;		___fldiv
  2771 ;;		___fleq
  2772 ;;		___flge
  2773 ;;		___flmul
  2774 ;;		___flneg
  2775 ;;		___flsub
  2776 ;;		___fltol
  2777 ;;		___fpclassifyf
  2778 ;;		_floorf
  2779 ;;		_labs
  2780 ;;		_memcpy
  2781 ;;		_pad
  2782 ;;		_strcpy
  2783 ;; This function is called by:
  2784 ;;		_vfpfcnvrt
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788     0C90                     _efgtoa:	
  2789                           ;psect for function _efgtoa
  2790                           
  2791     0C90                     l3548:	
  2792                           ;incstack = 0
  2793 ;; hardware stack exceeded
  2794                           ; Regs used in _efgtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2795                           
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2798     0C90  1683               	bsf	3,5	;RP0=1, select bank1
  2799     0C91  1303               	bcf	3,6	;RP1=0, select bank1
  2800     0C92  01D2               	clrf	efgtoa@sign^(0+128)
  2801     0C93                     l3550:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2804     0C93  082F               	movf	(efgtoa@f+3)^(0+128),w
  2805     0C94  00D6               	movwf	(efgtoa@g+3)^(0+128)
  2806     0C95  082E               	movf	(efgtoa@f+2)^(0+128),w
  2807     0C96  00D5               	movwf	(efgtoa@g+2)^(0+128)
  2808     0C97  082D               	movf	(efgtoa@f+1)^(0+128),w
  2809     0C98  00D4               	movwf	(efgtoa@g+1)^(0+128)
  2810     0C99  082C               	movf	efgtoa@f^(0+128),w
  2811     0C9A  00D3               	movwf	efgtoa@g^(0+128)
  2812     0C9B                     l3552:
  2813                           
  2814                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2815     0C9B  0856               	movf	(efgtoa@g+3)^(0+128),w
  2816     0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  2817     0C9D  1303               	bcf	3,6	;RP1=0, select bank0
  2818     0C9E  00CB               	movwf	___flge@ff1+3
  2819     0C9F  1683               	bsf	3,5	;RP0=1, select bank1
  2820     0CA0  1303               	bcf	3,6	;RP1=0, select bank1
  2821     0CA1  0855               	movf	(efgtoa@g+2)^(0+128),w
  2822     0CA2  1283               	bcf	3,5	;RP0=0, select bank0
  2823     0CA3  1303               	bcf	3,6	;RP1=0, select bank0
  2824     0CA4  00CA               	movwf	___flge@ff1+2
  2825     0CA5  1683               	bsf	3,5	;RP0=1, select bank1
  2826     0CA6  1303               	bcf	3,6	;RP1=0, select bank1
  2827     0CA7  0854               	movf	(efgtoa@g+1)^(0+128),w
  2828     0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  2829     0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  2830     0CAA  00C9               	movwf	___flge@ff1+1
  2831     0CAB  1683               	bsf	3,5	;RP0=1, select bank1
  2832     0CAC  1303               	bcf	3,6	;RP1=0, select bank1
  2833     0CAD  0853               	movf	efgtoa@g^(0+128),w
  2834     0CAE  1283               	bcf	3,5	;RP0=0, select bank0
  2835     0CAF  1303               	bcf	3,6	;RP1=0, select bank0
  2836     0CB0  00C8               	movwf	___flge@ff1
  2837     0CB1  3000               	movlw	0
  2838     0CB2  00CF               	movwf	___flge@ff2+3
  2839     0CB3  3000               	movlw	0
  2840     0CB4  00CE               	movwf	___flge@ff2+2
  2841     0CB5  3000               	movlw	0
  2842     0CB6  00CD               	movwf	___flge@ff2+1
  2843     0CB7  3000               	movlw	0
  2844     0CB8  00CC               	movwf	___flge@ff2
  2845     0CB9  160A  118A  20E9  120A  158A  	fcall	___flge
  2846     0CBE  1803               	btfsc	3,0
  2847     0CBF  2CC1               	goto	u5331
  2848     0CC0  2CC2               	goto	u5330
  2849     0CC1                     u5331:
  2850     0CC1  2CF9               	goto	l3558
  2851     0CC2                     u5330:
  2852     0CC2                     l3554:
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2855     0CC2  3001               	movlw	1
  2856     0CC3  1683               	bsf	3,5	;RP0=1, select bank1
  2857     0CC4  1303               	bcf	3,6	;RP1=0, select bank1
  2858     0CC5  00D2               	movwf	efgtoa@sign^(0+128)
  2859     0CC6                     l3556:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2862     0CC6  0856               	movf	(efgtoa@g+3)^(0+128),w
  2863     0CC7  1283               	bcf	3,5	;RP0=0, select bank0
  2864     0CC8  1303               	bcf	3,6	;RP1=0, select bank0
  2865     0CC9  00A3               	movwf	___flneg@f1+3
  2866     0CCA  1683               	bsf	3,5	;RP0=1, select bank1
  2867     0CCB  1303               	bcf	3,6	;RP1=0, select bank1
  2868     0CCC  0855               	movf	(efgtoa@g+2)^(0+128),w
  2869     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  2870     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  2871     0CCF  00A2               	movwf	___flneg@f1+2
  2872     0CD0  1683               	bsf	3,5	;RP0=1, select bank1
  2873     0CD1  1303               	bcf	3,6	;RP1=0, select bank1
  2874     0CD2  0854               	movf	(efgtoa@g+1)^(0+128),w
  2875     0CD3  1283               	bcf	3,5	;RP0=0, select bank0
  2876     0CD4  1303               	bcf	3,6	;RP1=0, select bank0
  2877     0CD5  00A1               	movwf	___flneg@f1+1
  2878     0CD6  1683               	bsf	3,5	;RP0=1, select bank1
  2879     0CD7  1303               	bcf	3,6	;RP1=0, select bank1
  2880     0CD8  0853               	movf	efgtoa@g^(0+128),w
  2881     0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  2882     0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  2883     0CDB  00A0               	movwf	___flneg@f1
  2884     0CDC  120A  158A  2001  120A  158A  	fcall	___flneg
  2885     0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  2886     0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  2887     0CE3  0823               	movf	?___flneg+3,w
  2888     0CE4  1683               	bsf	3,5	;RP0=1, select bank1
  2889     0CE5  1303               	bcf	3,6	;RP1=0, select bank1
  2890     0CE6  00D6               	movwf	(efgtoa@g+3)^(0+128)
  2891     0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  2892     0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  2893     0CE9  0822               	movf	?___flneg+2,w
  2894     0CEA  1683               	bsf	3,5	;RP0=1, select bank1
  2895     0CEB  1303               	bcf	3,6	;RP1=0, select bank1
  2896     0CEC  00D5               	movwf	(efgtoa@g+2)^(0+128)
  2897     0CED  1283               	bcf	3,5	;RP0=0, select bank0
  2898     0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  2899     0CEF  0821               	movf	?___flneg+1,w
  2900     0CF0  1683               	bsf	3,5	;RP0=1, select bank1
  2901     0CF1  1303               	bcf	3,6	;RP1=0, select bank1
  2902     0CF2  00D4               	movwf	(efgtoa@g+1)^(0+128)
  2903     0CF3  1283               	bcf	3,5	;RP0=0, select bank0
  2904     0CF4  1303               	bcf	3,6	;RP1=0, select bank0
  2905     0CF5  0820               	movf	?___flneg,w
  2906     0CF6  1683               	bsf	3,5	;RP0=1, select bank1
  2907     0CF7  1303               	bcf	3,6	;RP1=0, select bank1
  2908     0CF8  00D3               	movwf	efgtoa@g^(0+128)
  2909     0CF9                     l3558:
  2910                           
  2911                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2912     0CF9  1683               	bsf	3,5	;RP0=1, select bank1
  2913     0CFA  1303               	bcf	3,6	;RP1=0, select bank1
  2914     0CFB  01D7               	clrf	efgtoa@n^(0+128)
  2915     0CFC  01D8               	clrf	(efgtoa@n+1)^(0+128)
  2916     0CFD                     l3560:
  2917                           
  2918                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2919     0CFD  0878               	movf	_width+1,w
  2920     0CFE  00C3               	movwf	(efgtoa@w+1)^(0+128)
  2921     0CFF  0877               	movf	_width,w
  2922     0D00  00C2               	movwf	efgtoa@w^(0+128)
  2923     0D01                     l3562:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2926     0D01  0852               	movf	efgtoa@sign^(0+128),w
  2927     0D02  1903               	btfsc	3,2
  2928     0D03  2D05               	goto	u5341
  2929     0D04  2D06               	goto	u5340
  2930     0D05                     u5341:
  2931     0D05  2D16               	goto	l3570
  2932     0D06                     u5340:
  2933     0D06                     l3564:
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2936     0D06  0852               	movf	efgtoa@sign^(0+128),w
  2937     0D07  1D03               	btfss	3,2
  2938     0D08  2D0A               	goto	u5351
  2939     0D09  2D0B               	goto	u5350
  2940     0D0A                     u5351:
  2941     0D0A  2D10               	goto	l3568
  2942     0D0B                     u5350:
  2943     0D0B                     l3566:
  2944     0D0B  302B               	movlw	43
  2945     0D0C  00B7               	movwf	_efgtoa$726^(0+128)
  2946     0D0D  3000               	movlw	0
  2947     0D0E  00B8               	movwf	(_efgtoa$726^(0+128)+1)
  2948     0D0F  2D14               	goto	l759
  2949     0D10                     l3568:
  2950     0D10  302D               	movlw	45
  2951     0D11  00B7               	movwf	_efgtoa$726^(0+128)
  2952     0D12  3000               	movlw	0
  2953     0D13  00B8               	movwf	(_efgtoa$726^(0+128)+1)
  2954     0D14                     l759:
  2955     0D14  0837               	movf	_efgtoa$726^(0+128),w
  2956     0D15  00D2               	movwf	efgtoa@sign^(0+128)
  2957     0D16                     l3570:
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2960     0D16  0856               	movf	(efgtoa@g+3)^(0+128),w
  2961     0D17  1283               	bcf	3,5	;RP0=0, select bank0
  2962     0D18  1303               	bcf	3,6	;RP1=0, select bank0
  2963     0D19  00A3               	movwf	___fpclassifyf@x+3
  2964     0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  2965     0D1B  1303               	bcf	3,6	;RP1=0, select bank1
  2966     0D1C  0855               	movf	(efgtoa@g+2)^(0+128),w
  2967     0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  2968     0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  2969     0D1F  00A2               	movwf	___fpclassifyf@x+2
  2970     0D20  1683               	bsf	3,5	;RP0=1, select bank1
  2971     0D21  1303               	bcf	3,6	;RP1=0, select bank1
  2972     0D22  0854               	movf	(efgtoa@g+1)^(0+128),w
  2973     0D23  1283               	bcf	3,5	;RP0=0, select bank0
  2974     0D24  1303               	bcf	3,6	;RP1=0, select bank0
  2975     0D25  00A1               	movwf	___fpclassifyf@x+1
  2976     0D26  1683               	bsf	3,5	;RP0=1, select bank1
  2977     0D27  1303               	bcf	3,6	;RP1=0, select bank1
  2978     0D28  0853               	movf	efgtoa@g^(0+128),w
  2979     0D29  1283               	bcf	3,5	;RP0=0, select bank0
  2980     0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  2981     0D2B  00A0               	movwf	___fpclassifyf@x
  2982     0D2C  160A  158A  26D3  120A  158A  	fcall	___fpclassifyf
  2983     0D31  1283               	bcf	3,5	;RP0=0, select bank0
  2984     0D32  1303               	bcf	3,6	;RP1=0, select bank0
  2985     0D33  0320               	decf	?___fpclassifyf,w
  2986     0D34  0421               	iorwf	?___fpclassifyf+1,w
  2987     0D35  1D03               	btfss	3,2
  2988     0D36  2D38               	goto	u5361
  2989     0D37  2D39               	goto	u5360
  2990     0D38                     u5361:
  2991     0D38  2D84               	goto	l3584
  2992     0D39                     u5360:
  2993     0D39                     l3572:
  2994                           
  2995                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2996     0D39  1683               	bsf	3,5	;RP0=1, select bank1
  2997     0D3A  1303               	bcf	3,6	;RP1=0, select bank1
  2998     0D3B  0852               	movf	efgtoa@sign^(0+128),w
  2999     0D3C  1903               	btfsc	3,2
  3000     0D3D  2D3F               	goto	u5371
  3001     0D3E  2D40               	goto	u5370
  3002     0D3F                     u5371:
  3003     0D3F  2D50               	goto	l3576
  3004     0D40                     u5370:
  3005     0D40                     l3574:
  3006                           
  3007                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3008     0D40  0852               	movf	efgtoa@sign^(0+128),w
  3009     0D41  1283               	bcf	3,5	;RP0=0, select bank2
  3010     0D42  1703               	bsf	3,6	;RP1=1, select bank2
  3011     0D43  0090               	movwf	_dbuf^(0+256)
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  3014     0D44  30FF               	movlw	255
  3015     0D45  1683               	bsf	3,5	;RP0=1, select bank1
  3016     0D46  1303               	bcf	3,6	;RP1=0, select bank1
  3017     0D47  07C2               	addwf	efgtoa@w^(0+128),f
  3018     0D48  1803               	skipnc
  3019     0D49  0AC3               	incf	(efgtoa@w+1)^(0+128),f
  3020     0D4A  30FF               	movlw	255
  3021     0D4B  07C3               	addwf	(efgtoa@w+1)^(0+128),f
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3024     0D4C  3001               	movlw	1
  3025     0D4D  00D7               	movwf	efgtoa@n^(0+128)
  3026     0D4E  3000               	movlw	0
  3027     0D4F  00D8               	movwf	(efgtoa@n^(0+128)+1)
  3028     0D50                     l3576:
  3029                           
  3030                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3031     0D50  0857               	movf	efgtoa@n^(0+128),w
  3032     0D51  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3033     0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3034     0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3035     0D54  00A0               	movwf	strcpy@dest
  3036     0D55  30A8               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  3037     0D56  00A1               	movwf	strcpy@src
  3038     0D57  160A  158A  22F7  120A  158A  	fcall	_strcpy
  3039     0D5C                     l3578:
  3040                           
  3041                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3042     0D5C  30FD               	movlw	253
  3043     0D5D  1683               	bsf	3,5	;RP0=1, select bank1
  3044     0D5E  1303               	bcf	3,6	;RP1=0, select bank1
  3045     0D5F  07C2               	addwf	efgtoa@w^(0+128),f
  3046     0D60  1803               	skipnc
  3047     0D61  0AC3               	incf	(efgtoa@w+1)^(0+128),f
  3048     0D62  30FF               	movlw	255
  3049     0D63  07C3               	addwf	(efgtoa@w+1)^(0+128),f
  3050     0D64                     l3580:
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3053     0D64  082A               	movf	efgtoa@fp^(0+128),w
  3054     0D65  1283               	bcf	3,5	;RP0=0, select bank0
  3055     0D66  1303               	bcf	3,6	;RP1=0, select bank0
  3056     0D67  00B5               	movwf	pad@fp
  3057     0D68  1683               	bsf	3,5	;RP0=1, select bank1
  3058     0D69  1303               	bcf	3,6	;RP1=0, select bank1
  3059     0D6A  082B               	movf	(efgtoa@fp+1)^(0+128),w
  3060     0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  3061     0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  3062     0D6D  00B6               	movwf	pad@fp+1
  3063     0D6E  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
  3064     0D6F  00B7               	movwf	pad@buf
  3065     0D70  1683               	bsf	3,5	;RP0=1, select bank1
  3066     0D71  1303               	bcf	3,6	;RP1=0, select bank1
  3067     0D72  0843               	movf	(efgtoa@w+1)^(0+128),w
  3068     0D73  1283               	bcf	3,5	;RP0=0, select bank0
  3069     0D74  1303               	bcf	3,6	;RP1=0, select bank0
  3070     0D75  00B9               	movwf	pad@p+1
  3071     0D76  1683               	bsf	3,5	;RP0=1, select bank1
  3072     0D77  1303               	bcf	3,6	;RP1=0, select bank1
  3073     0D78  0842               	movf	efgtoa@w^(0+128),w
  3074     0D79  1283               	bcf	3,5	;RP0=0, select bank0
  3075     0D7A  1303               	bcf	3,6	;RP1=0, select bank0
  3076     0D7B  00B8               	movwf	pad@p
  3077     0D7C  120A  158A  200E  120A  158A  	fcall	_pad
  3078     0D81  120A  118A  2E4B   	goto	l762
  3079     0D84                     l3584:
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3082     0D84  1683               	bsf	3,5	;RP0=1, select bank1
  3083     0D85  1303               	bcf	3,6	;RP1=0, select bank1
  3084     0D86  0856               	movf	(efgtoa@g+3)^(0+128),w
  3085     0D87  1283               	bcf	3,5	;RP0=0, select bank0
  3086     0D88  1303               	bcf	3,6	;RP1=0, select bank0
  3087     0D89  00A3               	movwf	___fpclassifyf@x+3
  3088     0D8A  1683               	bsf	3,5	;RP0=1, select bank1
  3089     0D8B  1303               	bcf	3,6	;RP1=0, select bank1
  3090     0D8C  0855               	movf	(efgtoa@g+2)^(0+128),w
  3091     0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  3092     0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  3093     0D8F  00A2               	movwf	___fpclassifyf@x+2
  3094     0D90  1683               	bsf	3,5	;RP0=1, select bank1
  3095     0D91  1303               	bcf	3,6	;RP1=0, select bank1
  3096     0D92  0854               	movf	(efgtoa@g+1)^(0+128),w
  3097     0D93  1283               	bcf	3,5	;RP0=0, select bank0
  3098     0D94  1303               	bcf	3,6	;RP1=0, select bank0
  3099     0D95  00A1               	movwf	___fpclassifyf@x+1
  3100     0D96  1683               	bsf	3,5	;RP0=1, select bank1
  3101     0D97  1303               	bcf	3,6	;RP1=0, select bank1
  3102     0D98  0853               	movf	efgtoa@g^(0+128),w
  3103     0D99  1283               	bcf	3,5	;RP0=0, select bank0
  3104     0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  3105     0D9B  00A0               	movwf	___fpclassifyf@x
  3106     0D9C  160A  158A  26D3  120A  158A  	fcall	___fpclassifyf
  3107     0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  3108     0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  3109     0DA3  0820               	movf	?___fpclassifyf,w
  3110     0DA4  0421               	iorwf	?___fpclassifyf+1,w
  3111     0DA5  1D03               	btfss	3,2
  3112     0DA6  2DA8               	goto	u5381
  3113     0DA7  2DA9               	goto	u5380
  3114     0DA8                     u5381:
  3115     0DA8  2DCD               	goto	l3598
  3116     0DA9                     u5380:
  3117     0DA9                     l3586:
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3120     0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  3121     0DAA  1303               	bcf	3,6	;RP1=0, select bank1
  3122     0DAB  0852               	movf	efgtoa@sign^(0+128),w
  3123     0DAC  1903               	btfsc	3,2
  3124     0DAD  2DAF               	goto	u5391
  3125     0DAE  2DB0               	goto	u5390
  3126     0DAF                     u5391:
  3127     0DAF  2DC0               	goto	l3590
  3128     0DB0                     u5390:
  3129     0DB0                     l3588:
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3132     0DB0  0852               	movf	efgtoa@sign^(0+128),w
  3133     0DB1  1283               	bcf	3,5	;RP0=0, select bank2
  3134     0DB2  1703               	bsf	3,6	;RP1=1, select bank2
  3135     0DB3  0090               	movwf	_dbuf^(0+256)
  3136                           
  3137                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  3138     0DB4  30FF               	movlw	255
  3139     0DB5  1683               	bsf	3,5	;RP0=1, select bank1
  3140     0DB6  1303               	bcf	3,6	;RP1=0, select bank1
  3141     0DB7  07C2               	addwf	efgtoa@w^(0+128),f
  3142     0DB8  1803               	skipnc
  3143     0DB9  0AC3               	incf	(efgtoa@w+1)^(0+128),f
  3144     0DBA  30FF               	movlw	255
  3145     0DBB  07C3               	addwf	(efgtoa@w+1)^(0+128),f
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3148     0DBC  3001               	movlw	1
  3149     0DBD  00D7               	movwf	efgtoa@n^(0+128)
  3150     0DBE  3000               	movlw	0
  3151     0DBF  00D8               	movwf	(efgtoa@n^(0+128)+1)
  3152     0DC0                     l3590:
  3153                           
  3154                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3155     0DC0  0857               	movf	efgtoa@n^(0+128),w
  3156     0DC1  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3157     0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  3158     0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  3159     0DC4  00A0               	movwf	strcpy@dest
  3160     0DC5  30AC               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  3161     0DC6  00A1               	movwf	strcpy@src
  3162     0DC7  160A  158A  22F7  120A  158A  	fcall	_strcpy
  3163     0DCC  2D5C               	goto	l3578
  3164     0DCD                     l3598:
  3165                           
  3166                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3167     0DCD  303F               	movlw	63
  3168     0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  3169     0DCF  1303               	bcf	3,6	;RP1=0, select bank1
  3170     0DD0  00DC               	movwf	(efgtoa@u+3)^(0+128)
  3171     0DD1  3080               	movlw	128
  3172     0DD2  00DB               	movwf	(efgtoa@u+2)^(0+128)
  3173     0DD3  3000               	movlw	0
  3174     0DD4  00DA               	movwf	(efgtoa@u+1)^(0+128)
  3175     0DD5  3000               	movlw	0
  3176     0DD6  00D9               	movwf	efgtoa@u^(0+128)
  3177     0DD7                     l3600:
  3178                           
  3179                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3180     0DD7  01C0               	clrf	efgtoa@e^(0+128)
  3181     0DD8  01C1               	clrf	(efgtoa@e+1)^(0+128)
  3182     0DD9                     l3602:
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3185     0DD9  0856               	movf	(efgtoa@g+3)^(0+128),w
  3186     0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  3187     0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  3188     0DDC  00A3               	movwf	___fleq@ff1+3
  3189     0DDD  1683               	bsf	3,5	;RP0=1, select bank1
  3190     0DDE  1303               	bcf	3,6	;RP1=0, select bank1
  3191     0DDF  0855               	movf	(efgtoa@g+2)^(0+128),w
  3192     0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  3193     0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  3194     0DE2  00A2               	movwf	___fleq@ff1+2
  3195     0DE3  1683               	bsf	3,5	;RP0=1, select bank1
  3196     0DE4  1303               	bcf	3,6	;RP1=0, select bank1
  3197     0DE5  0854               	movf	(efgtoa@g+1)^(0+128),w
  3198     0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  3199     0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  3200     0DE8  00A1               	movwf	___fleq@ff1+1
  3201     0DE9  1683               	bsf	3,5	;RP0=1, select bank1
  3202     0DEA  1303               	bcf	3,6	;RP1=0, select bank1
  3203     0DEB  0853               	movf	efgtoa@g^(0+128),w
  3204     0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  3205     0DED  1303               	bcf	3,6	;RP1=0, select bank0
  3206     0DEE  00A0               	movwf	___fleq@ff1
  3207     0DEF  3000               	movlw	0
  3208     0DF0  00A7               	movwf	___fleq@ff2+3
  3209     0DF1  3000               	movlw	0
  3210     0DF2  00A6               	movwf	___fleq@ff2+2
  3211     0DF3  3000               	movlw	0
  3212     0DF4  00A5               	movwf	___fleq@ff2+1
  3213     0DF5  3000               	movlw	0
  3214     0DF6  00A4               	movwf	___fleq@ff2
  3215     0DF7  160A  158A  24E3  120A  158A  	fcall	___fleq
  3216     0DFC  1803               	btfsc	3,0
  3217     0DFD  2DFF               	goto	u5401
  3218     0DFE  2E02               	goto	u5400
  3219     0DFF                     u5401:
  3220     0DFF  120A  118A  2873   	goto	l3628
  3221     0E02                     u5400:
  3222     0E02  2E13               	goto	l3608
  3223     0E03                     l3606:
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3226     0E03  1683               	bsf	3,5	;RP0=1, select bank1
  3227     0E04  1303               	bcf	3,6	;RP1=0, select bank1
  3228     0E05  0847               	movf	(efgtoa@ou+3)^(0+128),w
  3229     0E06  00DC               	movwf	(efgtoa@u+3)^(0+128)
  3230     0E07  0846               	movf	(efgtoa@ou+2)^(0+128),w
  3231     0E08  00DB               	movwf	(efgtoa@u+2)^(0+128)
  3232     0E09  0845               	movf	(efgtoa@ou+1)^(0+128),w
  3233     0E0A  00DA               	movwf	(efgtoa@u+1)^(0+128)
  3234     0E0B  0844               	movf	efgtoa@ou^(0+128),w
  3235     0E0C  00D9               	movwf	efgtoa@u^(0+128)
  3236                           
  3237                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3238     0E0D  3001               	movlw	1
  3239     0E0E  07C0               	addwf	efgtoa@e^(0+128),f
  3240     0E0F  1803               	skipnc
  3241     0E10  0AC1               	incf	(efgtoa@e+1)^(0+128),f
  3242     0E11  3000               	movlw	0
  3243     0E12  07C1               	addwf	(efgtoa@e+1)^(0+128),f
  3244     0E13                     l3608:
  3245                           
  3246                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3247     0E13  3041               	movlw	65
  3248     0E14  1283               	bcf	3,5	;RP0=0, select bank0
  3249     0E15  1303               	bcf	3,6	;RP1=0, select bank0
  3250     0E16  00B1               	movwf	___flmul@b+3
  3251     0E17  3020               	movlw	32
  3252     0E18  00B0               	movwf	___flmul@b+2
  3253     0E19  3000               	movlw	0
  3254     0E1A  00AF               	movwf	___flmul@b+1
  3255     0E1B  3000               	movlw	0
  3256     0E1C  00AE               	movwf	___flmul@b
  3257     0E1D  1683               	bsf	3,5	;RP0=1, select bank1
  3258     0E1E  1303               	bcf	3,6	;RP1=0, select bank1
  3259     0E1F  085C               	movf	(efgtoa@u+3)^(0+128),w
  3260     0E20  1283               	bcf	3,5	;RP0=0, select bank0
  3261     0E21  1303               	bcf	3,6	;RP1=0, select bank0
  3262     0E22  00B5               	movwf	___flmul@a+3
  3263     0E23  1683               	bsf	3,5	;RP0=1, select bank1
  3264     0E24  1303               	bcf	3,6	;RP1=0, select bank1
  3265     0E25  085B               	movf	(efgtoa@u+2)^(0+128),w
  3266     0E26  1283               	bcf	3,5	;RP0=0, select bank0
  3267     0E27  1303               	bcf	3,6	;RP1=0, select bank0
  3268     0E28  00B4               	movwf	___flmul@a+2
  3269     0E29  1683               	bsf	3,5	;RP0=1, select bank1
  3270     0E2A  1303               	bcf	3,6	;RP1=0, select bank1
  3271     0E2B  085A               	movf	(efgtoa@u+1)^(0+128),w
  3272     0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  3273     0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  3274     0E2E  00B3               	movwf	___flmul@a+1
  3275     0E2F  1683               	bsf	3,5	;RP0=1, select bank1
  3276     0E30  1303               	bcf	3,6	;RP1=0, select bank1
  3277     0E31  0859               	movf	efgtoa@u^(0+128),w
  3278     0E32  1283               	bcf	3,5	;RP0=0, select bank0
  3279     0E33  1303               	bcf	3,6	;RP1=0, select bank0
  3280     0E34  00B2               	movwf	___flmul@a
  3281     0E35  120A  158A  214E  120A  158A  	fcall	___flmul
  3282     0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  3283     0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  3284     0E3C  0831               	movf	?___flmul+3,w
  3285     0E3D  1683               	bsf	3,5	;RP0=1, select bank1
  3286     0E3E  1303               	bcf	3,6	;RP1=0, select bank1
  3287     0E3F  00C7               	movwf	(efgtoa@ou+3)^(0+128)
  3288     0E40  1283               	bcf	3,5	;RP0=0, select bank0
  3289     0E41  1303               	bcf	3,6	;RP1=0, select bank0
  3290     0E42  0830               	movf	?___flmul+2,w
  3291     0E43  1683               	bsf	3,5	;RP0=1, select bank1
  3292     0E44  1303               	bcf	3,6	;RP1=0, select bank1
  3293     0E45  00C6               	movwf	(efgtoa@ou+2)^(0+128)
  3294     0E46  1283               	bcf	3,5	;RP0=0, select bank0
  3295     0E47  1303               	bcf	3,6	;RP1=0, select bank0
  3296     0E48  082F               	movf	?___flmul+1,w
  3297     0E49  1683               	bsf	3,5	;RP0=1, select bank1
  3298     0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  3299     0E4B  00C5               	movwf	(efgtoa@ou+1)^(0+128)
  3300     0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3301     0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  3302     0E4E  082E               	movf	?___flmul,w
  3303     0E4F  1683               	bsf	3,5	;RP0=1, select bank1
  3304     0E50  1303               	bcf	3,6	;RP1=0, select bank1
  3305     0E51  00C4               	movwf	efgtoa@ou^(0+128)
  3306     0E52                     l3610:
  3307     0E52  0853               	movf	efgtoa@g^(0+128),w
  3308     0E53  1283               	bcf	3,5	;RP0=0, select bank0
  3309     0E54  1303               	bcf	3,6	;RP1=0, select bank0
  3310     0E55  00EC               	movwf	??_efgtoa
  3311     0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3312     0E57  1303               	bcf	3,6	;RP1=0, select bank1
  3313     0E58  0854               	movf	(efgtoa@g+1)^(0+128),w
  3314     0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3315     0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  3316     0E5B  00ED               	movwf	??_efgtoa+1
  3317     0E5C  1683               	bsf	3,5	;RP0=1, select bank1
  3318     0E5D  1303               	bcf	3,6	;RP1=0, select bank1
  3319     0E5E  0855               	movf	(efgtoa@g+2)^(0+128),w
  3320     0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  3321     0E60  1303               	bcf	3,6	;RP1=0, select bank0
  3322     0E61  00EE               	movwf	??_efgtoa+2
  3323     0E62  1683               	bsf	3,5	;RP0=1, select bank1
  3324     0E63  1303               	bcf	3,6	;RP1=0, select bank1
  3325     0E64  0856               	movf	(efgtoa@g+3)^(0+128),w
  3326     0E65  1283               	bcf	3,5	;RP0=0, select bank0
  3327     0E66  1303               	bcf	3,6	;RP1=0, select bank0
  3328     0E67  00EF               	movwf	??_efgtoa+3
  3329     0E68  1683               	bsf	3,5	;RP0=1, select bank1
  3330     0E69  1303               	bcf	3,6	;RP1=0, select bank1
  3331     0E6A  0844               	movf	efgtoa@ou^(0+128),w
  3332     0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  3333     0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  3334     0E6D  02EC               	subwf	??_efgtoa,f
  3335     0E6E  1683               	bsf	3,5	;RP0=1, select bank1
  3336     0E6F  1303               	bcf	3,6	;RP1=0, select bank1
  3337     0E70  0845               	movf	(efgtoa@ou+1)^(0+128),w
  3338     0E71  1C03               	skipc
  3339     0E72  0F45               	incfsz	(efgtoa@ou+1)^(0+128),w
  3340     0E73  2E75               	goto	u5411
  3341     0E74  2E78               	goto	u5412
  3342     0E75                     u5411:
  3343     0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3344     0E76  1303               	bcf	3,6	;RP1=0, select bank0
  3345     0E77  02ED               	subwf	??_efgtoa+1,f
  3346     0E78                     u5412:
  3347     0E78  1683               	bsf	3,5	;RP0=1, select bank1
  3348     0E79  1303               	bcf	3,6	;RP1=0, select bank1
  3349     0E7A  0846               	movf	(efgtoa@ou+2)^(0+128),w
  3350     0E7B  1C03               	skipc
  3351     0E7C  0F46               	incfsz	(efgtoa@ou+2)^(0+128),w
  3352     0E7D  2E7F               	goto	u5413
  3353     0E7E  2E82               	goto	u5414
  3354     0E7F                     u5413:
  3355     0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3356     0E80  1303               	bcf	3,6	;RP1=0, select bank0
  3357     0E81  02EE               	subwf	??_efgtoa+2,f
  3358     0E82                     u5414:
  3359     0E82  1683               	bsf	3,5	;RP0=1, select bank1
  3360     0E83  1303               	bcf	3,6	;RP1=0, select bank1
  3361     0E84  0847               	movf	(efgtoa@ou+3)^(0+128),w
  3362     0E85  1C03               	skipc
  3363     0E86  0F47               	incfsz	(efgtoa@ou+3)^(0+128),w
  3364     0E87  2E89               	goto	u5415
  3365     0E88  2E8C               	goto	u5416
  3366     0E89                     u5415:
  3367     0E89  1283               	bcf	3,5	;RP0=0, select bank0
  3368     0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  3369     0E8B  02EF               	subwf	??_efgtoa+3,f
  3370     0E8C                     u5416:
  3371     0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  3372     0E8D  1303               	bcf	3,6	;RP1=0, select bank1
  3373     0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  3374     0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  3375     0E90  086F               	movf	??_efgtoa+3,w
  3376     0E91  00A3               	movwf	labs@a+3
  3377     0E92  086E               	movf	??_efgtoa+2,w
  3378     0E93  00A2               	movwf	labs@a+2
  3379     0E94  086D               	movf	??_efgtoa+1,w
  3380     0E95  00A1               	movwf	labs@a+1
  3381     0E96  086C               	movf	??_efgtoa,w
  3382     0E97  00A0               	movwf	labs@a
  3383     0E98  160A  158A  22E0  120A  158A  	fcall	_labs
  3384     0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  3385     0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  3386     0E9F  1BA3               	btfsc	?_labs+3,7
  3387     0EA0  2EB1               	goto	u5421
  3388     0EA1  0823               	movf	?_labs+3,w
  3389     0EA2  1D03               	btfss	3,2
  3390     0EA3  2EB2               	goto	u5420
  3391     0EA4  0822               	movf	?_labs+2,w
  3392     0EA5  1D03               	btfss	3,2
  3393     0EA6  2EB2               	goto	u5420
  3394     0EA7  0821               	movf	?_labs+1,w
  3395     0EA8  1D03               	btfss	3,2
  3396     0EA9  2EB2               	goto	u5420
  3397     0EAA  3002               	movlw	2
  3398     0EAB  0220               	subwf	?_labs,w
  3399     0EAC  1D03               	skipz
  3400     0EAD  2EAE               	goto	u5423
  3401     0EAE                     u5423:
  3402     0EAE  1C03               	btfss	3,0
  3403     0EAF  2EB1               	goto	u5421
  3404     0EB0  2EB2               	goto	u5420
  3405     0EB1                     u5421:
  3406     0EB1  2E03               	goto	l3606
  3407     0EB2                     u5420:
  3408     0EB2                     l3612:
  3409     0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  3410     0EB3  1303               	bcf	3,6	;RP1=0, select bank1
  3411     0EB4  0847               	movf	(efgtoa@ou+3)^(0+128),w
  3412     0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  3413     0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  3414     0EB7  00CB               	movwf	___flge@ff1+3
  3415     0EB8  1683               	bsf	3,5	;RP0=1, select bank1
  3416     0EB9  1303               	bcf	3,6	;RP1=0, select bank1
  3417     0EBA  0846               	movf	(efgtoa@ou+2)^(0+128),w
  3418     0EBB  1283               	bcf	3,5	;RP0=0, select bank0
  3419     0EBC  1303               	bcf	3,6	;RP1=0, select bank0
  3420     0EBD  00CA               	movwf	___flge@ff1+2
  3421     0EBE  1683               	bsf	3,5	;RP0=1, select bank1
  3422     0EBF  1303               	bcf	3,6	;RP1=0, select bank1
  3423     0EC0  0845               	movf	(efgtoa@ou+1)^(0+128),w
  3424     0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  3425     0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  3426     0EC3  00C9               	movwf	___flge@ff1+1
  3427     0EC4  1683               	bsf	3,5	;RP0=1, select bank1
  3428     0EC5  1303               	bcf	3,6	;RP1=0, select bank1
  3429     0EC6  0844               	movf	efgtoa@ou^(0+128),w
  3430     0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  3431     0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  3432     0EC9  00C8               	movwf	___flge@ff1
  3433     0ECA  1683               	bsf	3,5	;RP0=1, select bank1
  3434     0ECB  1303               	bcf	3,6	;RP1=0, select bank1
  3435     0ECC  0856               	movf	(efgtoa@g+3)^(0+128),w
  3436     0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  3437     0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  3438     0ECF  00CF               	movwf	___flge@ff2+3
  3439     0ED0  1683               	bsf	3,5	;RP0=1, select bank1
  3440     0ED1  1303               	bcf	3,6	;RP1=0, select bank1
  3441     0ED2  0855               	movf	(efgtoa@g+2)^(0+128),w
  3442     0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  3443     0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  3444     0ED5  00CE               	movwf	___flge@ff2+2
  3445     0ED6  1683               	bsf	3,5	;RP0=1, select bank1
  3446     0ED7  1303               	bcf	3,6	;RP1=0, select bank1
  3447     0ED8  0854               	movf	(efgtoa@g+1)^(0+128),w
  3448     0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  3449     0EDA  1303               	bcf	3,6	;RP1=0, select bank0
  3450     0EDB  00CD               	movwf	___flge@ff2+1
  3451     0EDC  1683               	bsf	3,5	;RP0=1, select bank1
  3452     0EDD  1303               	bcf	3,6	;RP1=0, select bank1
  3453     0EDE  0853               	movf	efgtoa@g^(0+128),w
  3454     0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  3455     0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  3456     0EE1  00CC               	movwf	___flge@ff2
  3457     0EE2  160A  118A  20E9  120A  158A  	fcall	___flge
  3458     0EE7  1C03               	btfss	3,0
  3459     0EE8  2EEA               	goto	u5431
  3460     0EE9  2EEB               	goto	u5430
  3461     0EEA                     u5431:
  3462     0EEA  2E03               	goto	l3606
  3463     0EEB                     u5430:
  3464     0EEB                     l3614:
  3465                           
  3466                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3467     0EEB  1683               	bsf	3,5	;RP0=1, select bank1
  3468     0EEC  1303               	bcf	3,6	;RP1=0, select bank1
  3469     0EED  0853               	movf	efgtoa@g^(0+128),w
  3470     0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3471     0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3472     0EF0  00EC               	movwf	??_efgtoa
  3473     0EF1  1683               	bsf	3,5	;RP0=1, select bank1
  3474     0EF2  1303               	bcf	3,6	;RP1=0, select bank1
  3475     0EF3  0854               	movf	(efgtoa@g+1)^(0+128),w
  3476     0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3477     0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  3478     0EF6  00ED               	movwf	??_efgtoa+1
  3479     0EF7  1683               	bsf	3,5	;RP0=1, select bank1
  3480     0EF8  1303               	bcf	3,6	;RP1=0, select bank1
  3481     0EF9  0855               	movf	(efgtoa@g+2)^(0+128),w
  3482     0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  3483     0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  3484     0EFC  00EE               	movwf	??_efgtoa+2
  3485     0EFD  1683               	bsf	3,5	;RP0=1, select bank1
  3486     0EFE  1303               	bcf	3,6	;RP1=0, select bank1
  3487     0EFF  0856               	movf	(efgtoa@g+3)^(0+128),w
  3488     0F00  1283               	bcf	3,5	;RP0=0, select bank0
  3489     0F01  1303               	bcf	3,6	;RP1=0, select bank0
  3490     0F02  00EF               	movwf	??_efgtoa+3
  3491     0F03  1683               	bsf	3,5	;RP0=1, select bank1
  3492     0F04  1303               	bcf	3,6	;RP1=0, select bank1
  3493     0F05  0859               	movf	efgtoa@u^(0+128),w
  3494     0F06  1283               	bcf	3,5	;RP0=0, select bank0
  3495     0F07  1303               	bcf	3,6	;RP1=0, select bank0
  3496     0F08  02EC               	subwf	??_efgtoa,f
  3497     0F09  1683               	bsf	3,5	;RP0=1, select bank1
  3498     0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  3499     0F0B  085A               	movf	(efgtoa@u+1)^(0+128),w
  3500     0F0C  1C03               	skipc
  3501     0F0D  0F5A               	incfsz	(efgtoa@u+1)^(0+128),w
  3502     0F0E  2F10               	goto	u5441
  3503     0F0F  2F13               	goto	u5442
  3504     0F10                     u5441:
  3505     0F10  1283               	bcf	3,5	;RP0=0, select bank0
  3506     0F11  1303               	bcf	3,6	;RP1=0, select bank0
  3507     0F12  02ED               	subwf	??_efgtoa+1,f
  3508     0F13                     u5442:
  3509     0F13  1683               	bsf	3,5	;RP0=1, select bank1
  3510     0F14  1303               	bcf	3,6	;RP1=0, select bank1
  3511     0F15  085B               	movf	(efgtoa@u+2)^(0+128),w
  3512     0F16  1C03               	skipc
  3513     0F17  0F5B               	incfsz	(efgtoa@u+2)^(0+128),w
  3514     0F18  2F1A               	goto	u5443
  3515     0F19  2F1D               	goto	u5444
  3516     0F1A                     u5443:
  3517     0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  3518     0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  3519     0F1C  02EE               	subwf	??_efgtoa+2,f
  3520     0F1D                     u5444:
  3521     0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  3522     0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  3523     0F1F  085C               	movf	(efgtoa@u+3)^(0+128),w
  3524     0F20  1C03               	skipc
  3525     0F21  0F5C               	incfsz	(efgtoa@u+3)^(0+128),w
  3526     0F22  2F24               	goto	u5445
  3527     0F23  2F27               	goto	u5446
  3528     0F24                     u5445:
  3529     0F24  1283               	bcf	3,5	;RP0=0, select bank0
  3530     0F25  1303               	bcf	3,6	;RP1=0, select bank0
  3531     0F26  02EF               	subwf	??_efgtoa+3,f
  3532     0F27                     u5446:
  3533     0F27  1683               	bsf	3,5	;RP0=1, select bank1
  3534     0F28  1303               	bcf	3,6	;RP1=0, select bank1
  3535     0F29  1283               	bcf	3,5	;RP0=0, select bank0
  3536     0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  3537     0F2B  086F               	movf	??_efgtoa+3,w
  3538     0F2C  00A3               	movwf	labs@a+3
  3539     0F2D  086E               	movf	??_efgtoa+2,w
  3540     0F2E  00A2               	movwf	labs@a+2
  3541     0F2F  086D               	movf	??_efgtoa+1,w
  3542     0F30  00A1               	movwf	labs@a+1
  3543     0F31  086C               	movf	??_efgtoa,w
  3544     0F32  00A0               	movwf	labs@a
  3545     0F33  160A  158A  22E0  120A  158A  	fcall	_labs
  3546     0F38  1283               	bcf	3,5	;RP0=0, select bank0
  3547     0F39  1303               	bcf	3,6	;RP1=0, select bank0
  3548     0F3A  1BA3               	btfsc	?_labs+3,7
  3549     0F3B  2F4F               	goto	u5450
  3550     0F3C  0823               	movf	?_labs+3,w
  3551     0F3D  1D03               	btfss	3,2
  3552     0F3E  2F4C               	goto	u5451
  3553     0F3F  0822               	movf	?_labs+2,w
  3554     0F40  1D03               	btfss	3,2
  3555     0F41  2F4C               	goto	u5451
  3556     0F42  0821               	movf	?_labs+1,w
  3557     0F43  1D03               	btfss	3,2
  3558     0F44  2F4C               	goto	u5451
  3559     0F45  3002               	movlw	2
  3560     0F46  0220               	subwf	?_labs,w
  3561     0F47  1D03               	skipz
  3562     0F48  2F49               	goto	u5453
  3563     0F49                     u5453:
  3564     0F49  1803               	btfsc	3,0
  3565     0F4A  2F4C               	goto	u5451
  3566     0F4B  2F4F               	goto	u5450
  3567     0F4C                     u5451:
  3568     0F4C  120A  118A  2838   	goto	l3626
  3569     0F4F                     u5450:
  3570     0F4F                     l3616:
  3571                           
  3572                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3573     0F4F  1683               	bsf	3,5	;RP0=1, select bank1
  3574     0F50  1303               	bcf	3,6	;RP1=0, select bank1
  3575     0F51  085C               	movf	(efgtoa@u+3)^(0+128),w
  3576     0F52  00D6               	movwf	(efgtoa@g+3)^(0+128)
  3577     0F53  085B               	movf	(efgtoa@u+2)^(0+128),w
  3578     0F54  00D5               	movwf	(efgtoa@g+2)^(0+128)
  3579     0F55  085A               	movf	(efgtoa@u+1)^(0+128),w
  3580     0F56  00D4               	movwf	(efgtoa@g+1)^(0+128)
  3581     0F57  0859               	movf	efgtoa@u^(0+128),w
  3582     0F58  00D3               	movwf	efgtoa@g^(0+128)
  3583                           
  3584                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  3585     0F59  2DFF               	goto	u5401
  3586     0F5A                     l3618:
  3587                           
  3588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3589     0F5A  3041               	movlw	65
  3590     0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  3591     0F5C  1303               	bcf	3,6	;RP1=0, select bank0
  3592     0F5D  00CB               	movwf	___fldiv@a+3
  3593     0F5E  3020               	movlw	32
  3594     0F5F  00CA               	movwf	___fldiv@a+2
  3595     0F60  3000               	movlw	0
  3596     0F61  00C9               	movwf	___fldiv@a+1
  3597     0F62  3000               	movlw	0
  3598     0F63  00C8               	movwf	___fldiv@a
  3599     0F64  1683               	bsf	3,5	;RP0=1, select bank1
  3600     0F65  1303               	bcf	3,6	;RP1=0, select bank1
  3601     0F66  085C               	movf	(efgtoa@u+3)^(0+128),w
  3602     0F67  1283               	bcf	3,5	;RP0=0, select bank0
  3603     0F68  1303               	bcf	3,6	;RP1=0, select bank0
  3604     0F69  00CF               	movwf	___fldiv@b+3
  3605     0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  3606     0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  3607     0F6C  085B               	movf	(efgtoa@u+2)^(0+128),w
  3608     0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  3609     0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  3610     0F6F  00CE               	movwf	___fldiv@b+2
  3611     0F70  1683               	bsf	3,5	;RP0=1, select bank1
  3612     0F71  1303               	bcf	3,6	;RP1=0, select bank1
  3613     0F72  085A               	movf	(efgtoa@u+1)^(0+128),w
  3614     0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3615     0F74  1303               	bcf	3,6	;RP1=0, select bank0
  3616     0F75  00CD               	movwf	___fldiv@b+1
  3617     0F76  1683               	bsf	3,5	;RP0=1, select bank1
  3618     0F77  1303               	bcf	3,6	;RP1=0, select bank1
  3619     0F78  0859               	movf	efgtoa@u^(0+128),w
  3620     0F79  1283               	bcf	3,5	;RP0=0, select bank0
  3621     0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  3622     0F7B  00CC               	movwf	___fldiv@b
  3623     0F7C  160A  118A  23E6  120A  158A  	fcall	___fldiv
  3624     0F81  1283               	bcf	3,5	;RP0=0, select bank0
  3625     0F82  1303               	bcf	3,6	;RP1=0, select bank0
  3626     0F83  084B               	movf	?___fldiv+3,w
  3627     0F84  1683               	bsf	3,5	;RP0=1, select bank1
  3628     0F85  1303               	bcf	3,6	;RP1=0, select bank1
  3629     0F86  00DC               	movwf	(efgtoa@u+3)^(0+128)
  3630     0F87  1283               	bcf	3,5	;RP0=0, select bank0
  3631     0F88  1303               	bcf	3,6	;RP1=0, select bank0
  3632     0F89  084A               	movf	?___fldiv+2,w
  3633     0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  3634     0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  3635     0F8C  00DB               	movwf	(efgtoa@u+2)^(0+128)
  3636     0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  3637     0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  3638     0F8F  0849               	movf	?___fldiv+1,w
  3639     0F90  1683               	bsf	3,5	;RP0=1, select bank1
  3640     0F91  1303               	bcf	3,6	;RP1=0, select bank1
  3641     0F92  00DA               	movwf	(efgtoa@u+1)^(0+128)
  3642     0F93  1283               	bcf	3,5	;RP0=0, select bank0
  3643     0F94  1303               	bcf	3,6	;RP1=0, select bank0
  3644     0F95  0848               	movf	?___fldiv,w
  3645     0F96  1683               	bsf	3,5	;RP0=1, select bank1
  3646     0F97  1303               	bcf	3,6	;RP1=0, select bank1
  3647     0F98  00D9               	movwf	efgtoa@u^(0+128)
  3648     0F99                     l3620:
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  3651     0F99  30FF               	movlw	255
  3652     0F9A  07C0               	addwf	efgtoa@e^(0+128),f
  3653     0F9B  1803               	skipnc
  3654     0F9C  0AC1               	incf	(efgtoa@e+1)^(0+128),f
  3655     0F9D  30FF               	movlw	255
  3656     0F9E  07C1               	addwf	(efgtoa@e+1)^(0+128),f
  3657     0F9F                     l3622:
  3658                           
  3659                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3660     0F9F  0853               	movf	efgtoa@g^(0+128),w
  3661     0FA0  1283               	bcf	3,5	;RP0=0, select bank0
  3662     0FA1  1303               	bcf	3,6	;RP1=0, select bank0
  3663     0FA2  00EC               	movwf	??_efgtoa
  3664     0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  3665     0FA4  1303               	bcf	3,6	;RP1=0, select bank1
  3666     0FA5  0854               	movf	(efgtoa@g+1)^(0+128),w
  3667     0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  3668     0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  3669     0FA8  00ED               	movwf	??_efgtoa+1
  3670     0FA9  1683               	bsf	3,5	;RP0=1, select bank1
  3671     0FAA  1303               	bcf	3,6	;RP1=0, select bank1
  3672     0FAB  0855               	movf	(efgtoa@g+2)^(0+128),w
  3673     0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3674     0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  3675     0FAE  00EE               	movwf	??_efgtoa+2
  3676     0FAF  1683               	bsf	3,5	;RP0=1, select bank1
  3677     0FB0  1303               	bcf	3,6	;RP1=0, select bank1
  3678     0FB1  0856               	movf	(efgtoa@g+3)^(0+128),w
  3679     0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  3680     0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  3681     0FB4  00EF               	movwf	??_efgtoa+3
  3682     0FB5  1683               	bsf	3,5	;RP0=1, select bank1
  3683     0FB6  1303               	bcf	3,6	;RP1=0, select bank1
  3684     0FB7  0859               	movf	efgtoa@u^(0+128),w
  3685     0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  3686     0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  3687     0FBA  02EC               	subwf	??_efgtoa,f
  3688     0FBB  1683               	bsf	3,5	;RP0=1, select bank1
  3689     0FBC  1303               	bcf	3,6	;RP1=0, select bank1
  3690     0FBD  085A               	movf	(efgtoa@u+1)^(0+128),w
  3691     0FBE  1C03               	skipc
  3692     0FBF  0F5A               	incfsz	(efgtoa@u+1)^(0+128),w
  3693     0FC0  2FC2               	goto	u5461
  3694     0FC1  2FC5               	goto	u5462
  3695     0FC2                     u5461:
  3696     0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3697     0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  3698     0FC4  02ED               	subwf	??_efgtoa+1,f
  3699     0FC5                     u5462:
  3700     0FC5  1683               	bsf	3,5	;RP0=1, select bank1
  3701     0FC6  1303               	bcf	3,6	;RP1=0, select bank1
  3702     0FC7  085B               	movf	(efgtoa@u+2)^(0+128),w
  3703     0FC8  1C03               	skipc
  3704     0FC9  0F5B               	incfsz	(efgtoa@u+2)^(0+128),w
  3705     0FCA  2FCC               	goto	u5463
  3706     0FCB  2FCF               	goto	u5464
  3707     0FCC                     u5463:
  3708     0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3709     0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  3710     0FCE  02EE               	subwf	??_efgtoa+2,f
  3711     0FCF                     u5464:
  3712     0FCF  1683               	bsf	3,5	;RP0=1, select bank1
  3713     0FD0  1303               	bcf	3,6	;RP1=0, select bank1
  3714     0FD1  085C               	movf	(efgtoa@u+3)^(0+128),w
  3715     0FD2  1C03               	skipc
  3716     0FD3  0F5C               	incfsz	(efgtoa@u+3)^(0+128),w
  3717     0FD4  2FD6               	goto	u5465
  3718     0FD5  2FD9               	goto	u5466
  3719     0FD6                     u5465:
  3720     0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  3721     0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  3722     0FD8  02EF               	subwf	??_efgtoa+3,f
  3723     0FD9                     u5466:
  3724     0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  3725     0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  3726     0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  3727     0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  3728     0FDD  086F               	movf	??_efgtoa+3,w
  3729     0FDE  00A3               	movwf	labs@a+3
  3730     0FDF  086E               	movf	??_efgtoa+2,w
  3731     0FE0  00A2               	movwf	labs@a+2
  3732     0FE1  086D               	movf	??_efgtoa+1,w
  3733     0FE2  00A1               	movwf	labs@a+1
  3734     0FE3  086C               	movf	??_efgtoa,w
  3735     0FE4  00A0               	movwf	labs@a
  3736     0FE5  160A  158A  22E0  120A  158A  	fcall	_labs
  3737     0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  3738     0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  3739     0FEC  1BA3               	btfsc	?_labs+3,7
  3740     0FED  2FFF               	goto	u5470
  3741     0FEE  0823               	movf	?_labs+3,w
  3742     0FEF  1D03               	btfss	3,2
  3743     0FF0  2FFE               	goto	u5471
  3744     0FF1  0822               	movf	?_labs+2,w
  3745     0FF2  1D03               	btfss	3,2
  3746     0FF3  2FFE               	goto	u5471
  3747     0FF4  0821               	movf	?_labs+1,w
  3748     0FF5  1D03               	btfss	3,2
  3749     0FF6  2FFE               	goto	u5471
  3750     0FF7  3002               	movlw	2
  3751     0FF8  0220               	subwf	?_labs,w
  3752     0FF9  1D03               	skipz
  3753     0FFA  2FFB               	goto	u5473
  3754     0FFB                     u5473:
  3755     0FFB  1803               	btfsc	3,0
  3756     0FFC  2FFE               	goto	u5471
  3757     0FFD  2FFF               	goto	u5470
  3758     0FFE                     u5471:
  3759     0FFE  2F4C               	goto	u5451
  3760     0FFF                     u5470:
  3761     0FFF  2F4F               	goto	l3616
  3762                           
  3763                           	psect	text7
  3764     1AF7                     __ptext7:	
  3765 ;; *************** function _strcpy *****************
  3766 ;; Defined at:
  3767 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  dest            1    0[BANK0 ] PTR unsigned char 
  3770 ;;		 -> dbuf(80), 
  3771 ;;  src             1    1[BANK0 ] PTR const unsigned char 
  3772 ;;		 -> STR_15(4), STR_12(4), 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  d               1    2[BANK0 ] PTR unsigned char 
  3775 ;;		 -> dbuf(80), 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    0[BANK0 ] PTR unsigned char 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3785 ;;      Params:         0       2       0       0       0
  3786 ;;      Locals:         0       1       0       0       0
  3787 ;;      Temps:          0       0       0       0       0
  3788 ;;      Totals:         0       3       0       0       0
  3789 ;;Total ram usage:        3 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; Hardware stack levels required when called: 3
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_efgtoa
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799     1AF7                     _strcpy:	
  3800                           ;psect for function _strcpy
  3801                           
  3802     1AF7                     l3528:	
  3803                           ;incstack = 0
  3804 ;; using string table level
  3805                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3806                           
  3807     1AF7  1283               	bcf	3,5	;RP0=0, select bank0
  3808     1AF8  1303               	bcf	3,6	;RP1=0, select bank0
  3809     1AF9  0820               	movf	strcpy@dest,w
  3810     1AFA  00A2               	movwf	strcpy@d
  3811     1AFB                     l3530:
  3812     1AFB  3001               	movlw	1
  3813     1AFC  07A1               	addwf	strcpy@src,f
  3814     1AFD  30FF               	movlw	-1
  3815     1AFE  0721               	addwf	strcpy@src,w
  3816     1AFF  0084               	movwf	4
  3817     1B00  160A  118A  200A  160A  158A  	fcall	stringdir
  3818     1B05  00FF               	movwf	btemp+1
  3819     1B06  0822               	movf	strcpy@d,w
  3820     1B07  0AA2               	incf	strcpy@d,f
  3821     1B08  0084               	movwf	4
  3822     1B09  087F               	movf	btemp+1,w
  3823     1B0A  1783               	bsf	3,7	;select IRP bank2
  3824     1B0B  0080               	movwf	0
  3825     1B0C  0800               	movf	0,w
  3826     1B0D  1D03               	btfss	3,2
  3827     1B0E  2B10               	goto	u5301
  3828     1B0F  2B11               	goto	u5300
  3829     1B10                     u5301:
  3830     1B10  2AFB               	goto	l3530
  3831     1B11                     u5300:
  3832     1B11                     l904:
  3833     1B11  0008               	return
  3834     1B12                     __end_of_strcpy:
  3835                           
  3836                           	psect	text8
  3837     080E                     __ptext8:	
  3838 ;; *************** function _pad *****************
  3839 ;; Defined at:
  3840 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
  3843 ;;		 -> sprintf@f(11), 
  3844 ;;  buf             1   23[BANK0 ] PTR unsigned char 
  3845 ;;		 -> dbuf(80), 
  3846 ;;  p               2   24[BANK0 ] int 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  i               2   27[BANK0 ] int 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3858 ;;      Params:         0       5       0       0       0
  3859 ;;      Locals:         0       2       0       0       0
  3860 ;;      Temps:          0       1       0       0       0
  3861 ;;      Totals:         0       8       0       0       0
  3862 ;;Total ram usage:        8 bytes
  3863 ;; Hardware stack levels used: 1
  3864 ;; Hardware stack levels required when called: 6
  3865 ;; This function calls:
  3866 ;;		_fputc
  3867 ;;		_fputs
  3868 ;; This function is called by:
  3869 ;;		_efgtoa
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873     080E                     _pad:	
  3874                           ;psect for function _pad
  3875                           
  3876     080E                     l3516:	
  3877                           ;incstack = 0
  3878 ;; hardware stack exceeded
  3879                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3880                           
  3881                           
  3882                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  3883     080E  1283               	bcf	3,5	;RP0=0, select bank0
  3884     080F  1303               	bcf	3,6	;RP1=0, select bank0
  3885     0810  1FB9               	btfss	pad@p+1,7
  3886     0811  2813               	goto	u5281
  3887     0812  2814               	goto	u5280
  3888     0813                     u5281:
  3889     0813  2816               	goto	l747
  3890     0814                     u5280:
  3891     0814                     l3518:
  3892                           
  3893                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3894     0814  01B8               	clrf	pad@p
  3895     0815  01B9               	clrf	pad@p+1
  3896     0816                     l747:	
  3897                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
  3898                           
  3899                           
  3900                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3901     0816  01BB               	clrf	pad@i
  3902     0817  01BC               	clrf	pad@i+1
  3903                           
  3904                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3905     0818  2830               	goto	l3524
  3906     0819                     l3520:
  3907                           
  3908                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3909     0819  3020               	movlw	32
  3910     081A  1283               	bcf	3,5	;RP0=0, select bank0
  3911     081B  1303               	bcf	3,6	;RP1=0, select bank0
  3912     081C  00A0               	movwf	fputc@c
  3913     081D  3000               	movlw	0
  3914     081E  00A1               	movwf	fputc@c+1
  3915     081F  0835               	movf	pad@fp,w
  3916     0820  00A2               	movwf	fputc@fp
  3917     0821  0836               	movf	pad@fp+1,w
  3918     0822  00A3               	movwf	fputc@fp+1
  3919     0823  160A  158A  2760  120A  158A  	fcall	_fputc
  3920     0828                     l3522:
  3921                           
  3922                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3923     0828  3001               	movlw	1
  3924     0829  1283               	bcf	3,5	;RP0=0, select bank0
  3925     082A  1303               	bcf	3,6	;RP1=0, select bank0
  3926     082B  07BB               	addwf	pad@i,f
  3927     082C  1803               	skipnc
  3928     082D  0ABC               	incf	pad@i+1,f
  3929     082E  3000               	movlw	0
  3930     082F  07BC               	addwf	pad@i+1,f
  3931     0830                     l3524:
  3932                           
  3933                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3934     0830  083C               	movf	pad@i+1,w
  3935     0831  3A80               	xorlw	128
  3936     0832  00BA               	movwf	??_pad
  3937     0833  0839               	movf	pad@p+1,w
  3938     0834  3A80               	xorlw	128
  3939     0835  023A               	subwf	??_pad,w
  3940     0836  1D03               	skipz
  3941     0837  283A               	goto	u5295
  3942     0838  0838               	movf	pad@p,w
  3943     0839  023B               	subwf	pad@i,w
  3944     083A                     u5295:
  3945     083A  1C03               	skipc
  3946     083B  283D               	goto	u5291
  3947     083C  283E               	goto	u5290
  3948     083D                     u5291:
  3949     083D  2819               	goto	l3520
  3950     083E                     u5290:
  3951     083E                     l3526:
  3952                           
  3953                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3954     083E  1283               	bcf	3,5	;RP0=0, select bank0
  3955     083F  1303               	bcf	3,6	;RP1=0, select bank0
  3956     0840  0837               	movf	pad@buf,w
  3957     0841  00AD               	movwf	fputs@s
  3958     0842  0835               	movf	pad@fp,w
  3959     0843  00AE               	movwf	fputs@fp
  3960     0844  0836               	movf	pad@fp+1,w
  3961     0845  00AF               	movwf	fputs@fp+1
  3962     0846  160A  158A  23F1  120A  158A  	fcall	_fputs
  3963     084B                     l751:
  3964     084B  0008               	return
  3965     084C                     __end_of_pad:
  3966                           
  3967                           	psect	text9
  3968     1BF1                     __ptext9:	
  3969 ;; *************** function _fputs *****************
  3970 ;; Defined at:
  3971 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  3974 ;;		 -> dbuf(80), 
  3975 ;;  fp              2   14[BANK0 ] PTR struct _IO_FILE
  3976 ;;		 -> sprintf@f(11), 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  i               2   19[BANK0 ] int 
  3979 ;;  c               1   18[BANK0 ] unsigned char 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  2   13[BANK0 ] int 
  3982 ;; Registers used:
  3983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3989 ;;      Params:         0       3       0       0       0
  3990 ;;      Locals:         0       3       0       0       0
  3991 ;;      Temps:          0       2       0       0       0
  3992 ;;      Totals:         0       8       0       0       0
  3993 ;;Total ram usage:        8 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 5
  3996 ;; This function calls:
  3997 ;;		_fputc
  3998 ;; This function is called by:
  3999 ;;		_pad
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003     1BF1                     _fputs:	
  4004                           ;psect for function _fputs
  4005                           
  4006     1BF1                     l3480:	
  4007                           ;incstack = 0
  4008 ;; hardware stack exceeded
  4009                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4010                           
  4011     1BF1  1283               	bcf	3,5	;RP0=0, select bank0
  4012     1BF2  1303               	bcf	3,6	;RP1=0, select bank0
  4013     1BF3  01B3               	clrf	fputs@i
  4014     1BF4  01B4               	clrf	fputs@i+1
  4015     1BF5  2C0E               	goto	l3486
  4016     1BF6                     l3482:
  4017     1BF6  0832               	movf	fputs@c,w
  4018     1BF7  00B0               	movwf	??_fputs
  4019     1BF8  01B1               	clrf	??_fputs+1
  4020     1BF9  0830               	movf	??_fputs,w
  4021     1BFA  00A0               	movwf	fputc@c
  4022     1BFB  0831               	movf	??_fputs+1,w
  4023     1BFC  00A1               	movwf	fputc@c+1
  4024     1BFD  082E               	movf	fputs@fp,w
  4025     1BFE  00A2               	movwf	fputc@fp
  4026     1BFF  082F               	movf	fputs@fp+1,w
  4027     1C00  00A3               	movwf	fputc@fp+1
  4028     1C01  160A  158A  2760  160A  158A  	fcall	_fputc
  4029     1C06                     l3484:
  4030     1C06  3001               	movlw	1
  4031     1C07  1283               	bcf	3,5	;RP0=0, select bank0
  4032     1C08  1303               	bcf	3,6	;RP1=0, select bank0
  4033     1C09  07B3               	addwf	fputs@i,f
  4034     1C0A  1803               	skipnc
  4035     1C0B  0AB4               	incf	fputs@i+1,f
  4036     1C0C  3000               	movlw	0
  4037     1C0D  07B4               	addwf	fputs@i+1,f
  4038     1C0E                     l3486:
  4039     1C0E  0833               	movf	fputs@i,w
  4040     1C0F  072D               	addwf	fputs@s,w
  4041     1C10  00B0               	movwf	??_fputs
  4042     1C11  0830               	movf	??_fputs,w
  4043     1C12  0084               	movwf	4
  4044     1C13  1783               	bsf	3,7	;select IRP bank2
  4045     1C14  0800               	movf	0,w
  4046     1C15  00B2               	movwf	fputs@c
  4047     1C16  0832               	movf	fputs@c,w
  4048     1C17  1D03               	btfss	3,2
  4049     1C18  2C1A               	goto	u5221
  4050     1C19  2C1B               	goto	u5220
  4051     1C1A                     u5221:
  4052     1C1A  2BF6               	goto	l3482
  4053     1C1B                     u5220:
  4054     1C1B                     l895:
  4055     1C1B  0008               	return
  4056     1C1C                     __end_of_fputs:
  4057                           
  4058                           	psect	text10
  4059     1F60                     __ptext10:	
  4060 ;; *************** function _fputc *****************
  4061 ;; Defined at:
  4062 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  c               2    0[BANK0 ] int 
  4065 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4066 ;;		 -> sprintf@f(11), 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  2    0[BANK0 ] int 
  4071 ;; Registers used:
  4072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4078 ;;      Params:         0       4       0       0       0
  4079 ;;      Locals:         0       0       0       0       0
  4080 ;;      Temps:          0       9       0       0       0
  4081 ;;      Totals:         0      13       0       0       0
  4082 ;;Total ram usage:       13 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; Hardware stack levels required when called: 4
  4085 ;; This function calls:
  4086 ;;		_putch
  4087 ;; This function is called by:
  4088 ;;		_pad
  4089 ;;		_vfpfcnvrt
  4090 ;;		_fputs
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094     1F60                     _fputc:	
  4095                           ;psect for function _fputc
  4096                           
  4097     1F60                     l3466:	
  4098                           ;incstack = 0
  4099                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4100                           
  4101     1F60  1283               	bcf	3,5	;RP0=0, select bank0
  4102     1F61  1303               	bcf	3,6	;RP1=0, select bank0
  4103     1F62  0822               	movf	fputc@fp,w
  4104     1F63  0423               	iorwf	fputc@fp+1,w
  4105     1F64  1903               	btfsc	3,2
  4106     1F65  2F67               	goto	u5171
  4107     1F66  2F68               	goto	u5170
  4108     1F67                     u5171:
  4109     1F67  2F6E               	goto	l3470
  4110     1F68                     u5170:
  4111     1F68                     l3468:
  4112     1F68  0822               	movf	fputc@fp,w
  4113     1F69  0423               	iorwf	fputc@fp+1,w
  4114     1F6A  1D03               	btfss	3,2
  4115     1F6B  2F6D               	goto	u5181
  4116     1F6C  2F6E               	goto	u5180
  4117     1F6D                     u5181:
  4118     1F6D  2F75               	goto	l3472
  4119     1F6E                     u5180:
  4120     1F6E                     l3470:
  4121     1F6E  0820               	movf	fputc@c,w
  4122     1F6F  120A  118A  2003  160A  158A  	fcall	_putch
  4123     1F74  2FFF               	goto	l887
  4124     1F75                     l3472:
  4125     1F75  0822               	movf	fputc@fp,w
  4126     1F76  3E09               	addlw	9
  4127     1F77  00A4               	movwf	??_fputc
  4128     1F78  0823               	movf	fputc@fp+1,w
  4129     1F79  1803               	skipnc
  4130     1F7A  3E01               	addlw	1
  4131     1F7B  3E00               	addlw	0
  4132     1F7C  00A5               	movwf	??_fputc+1
  4133     1F7D  0824               	movf	??_fputc,w
  4134     1F7E  0084               	movwf	4
  4135     1F7F  1783               	bsf	3,7
  4136     1F80  1C25               	btfss	??_fputc+1,0
  4137     1F81  1383               	bcf	3,7
  4138     1F82  0800               	movf	0,w
  4139     1F83  00A6               	movwf	??_fputc+2
  4140     1F84  0A84               	incf	4,f
  4141     1F85  0800               	movf	0,w
  4142     1F86  00A7               	movwf	??_fputc+3
  4143     1F87  0826               	movf	??_fputc+2,w
  4144     1F88  0427               	iorwf	??_fputc+3,w
  4145     1F89  1903               	btfsc	3,2
  4146     1F8A  2F8C               	goto	u5191
  4147     1F8B  2F8D               	goto	u5190
  4148     1F8C                     u5191:
  4149     1F8C  2FBF               	goto	l3476
  4150     1F8D                     u5190:
  4151     1F8D                     l3474:
  4152     1F8D  0822               	movf	fputc@fp,w
  4153     1F8E  3E09               	addlw	9
  4154     1F8F  00A4               	movwf	??_fputc
  4155     1F90  0823               	movf	fputc@fp+1,w
  4156     1F91  1803               	skipnc
  4157     1F92  3E01               	addlw	1
  4158     1F93  3E00               	addlw	0
  4159     1F94  00A5               	movwf	??_fputc+1
  4160     1F95  0824               	movf	??_fputc,w
  4161     1F96  0084               	movwf	4
  4162     1F97  1783               	bsf	3,7
  4163     1F98  1C25               	btfss	??_fputc+1,0
  4164     1F99  1383               	bcf	3,7
  4165     1F9A  0800               	movf	0,w
  4166     1F9B  00A6               	movwf	??_fputc+2
  4167     1F9C  0A84               	incf	4,f
  4168     1F9D  0800               	movf	0,w
  4169     1F9E  00A7               	movwf	??_fputc+3
  4170     1F9F  0822               	movf	fputc@fp,w
  4171     1FA0  3E02               	addlw	2
  4172     1FA1  00A8               	movwf	??_fputc+4
  4173     1FA2  0823               	movf	fputc@fp+1,w
  4174     1FA3  1803               	skipnc
  4175     1FA4  3E01               	addlw	1
  4176     1FA5  3E00               	addlw	0
  4177     1FA6  00A9               	movwf	??_fputc+5
  4178     1FA7  0828               	movf	??_fputc+4,w
  4179     1FA8  0084               	movwf	4
  4180     1FA9  1783               	bsf	3,7
  4181     1FAA  1C29               	btfss	??_fputc+5,0
  4182     1FAB  1383               	bcf	3,7
  4183     1FAC  0800               	movf	0,w
  4184     1FAD  00AA               	movwf	??_fputc+6
  4185     1FAE  0A84               	incf	4,f
  4186     1FAF  0800               	movf	0,w
  4187     1FB0  00AB               	movwf	??_fputc+7
  4188     1FB1  082B               	movf	??_fputc+7,w
  4189     1FB2  3A80               	xorlw	128
  4190     1FB3  00AC               	movwf	??_fputc+8
  4191     1FB4  0827               	movf	??_fputc+3,w
  4192     1FB5  3A80               	xorlw	128
  4193     1FB6  022C               	subwf	??_fputc+8,w
  4194     1FB7  1D03               	skipz
  4195     1FB8  2FBB               	goto	u5205
  4196     1FB9  0826               	movf	??_fputc+2,w
  4197     1FBA  022A               	subwf	??_fputc+6,w
  4198     1FBB                     u5205:
  4199     1FBB  1803               	skipnc
  4200     1FBC  2FBE               	goto	u5201
  4201     1FBD  2FBF               	goto	u5200
  4202     1FBE                     u5201:
  4203     1FBE  2FFF               	goto	l887
  4204     1FBF                     u5200:
  4205     1FBF                     l3476:
  4206     1FBF  1283               	bcf	3,5	;RP0=0, select bank0
  4207     1FC0  1303               	bcf	3,6	;RP1=0, select bank0
  4208     1FC1  0822               	movf	fputc@fp,w
  4209     1FC2  0084               	movwf	4
  4210     1FC3  1783               	bsf	3,7
  4211     1FC4  1C23               	btfss	fputc@fp+1,0
  4212     1FC5  1383               	bcf	3,7
  4213     1FC6  0800               	movf	0,w
  4214     1FC7  00A4               	movwf	??_fputc
  4215     1FC8  0A84               	incf	4,f
  4216     1FC9  0800               	movf	0,w
  4217     1FCA  00A5               	movwf	??_fputc+1
  4218     1FCB  0822               	movf	fputc@fp,w
  4219     1FCC  3E02               	addlw	2
  4220     1FCD  00A6               	movwf	??_fputc+2
  4221     1FCE  0823               	movf	fputc@fp+1,w
  4222     1FCF  1803               	skipnc
  4223     1FD0  3E01               	addlw	1
  4224     1FD1  3E00               	addlw	0
  4225     1FD2  00A7               	movwf	??_fputc+3
  4226     1FD3  0826               	movf	??_fputc+2,w
  4227     1FD4  0084               	movwf	4
  4228     1FD5  1783               	bsf	3,7
  4229     1FD6  1C27               	btfss	??_fputc+3,0
  4230     1FD7  1383               	bcf	3,7
  4231     1FD8  0800               	movf	0,w
  4232     1FD9  0724               	addwf	??_fputc,w
  4233     1FDA  00A9               	movwf	??_fputc+5
  4234     1FDB  0825               	movf	??_fputc+1,w
  4235     1FDC  00A8               	movwf	??_fputc+4
  4236     1FDD  1803               	skipnc
  4237     1FDE  0AA8               	incf	??_fputc+4,f
  4238     1FDF  1F80               	btfss	0,7
  4239     1FE0  2FE2               	goto	u5210
  4240     1FE1  03A8               	decf	??_fputc+4,f
  4241     1FE2                     u5210:
  4242     1FE2  1283               	bcf	3,5	;RP0=0, select bank0
  4243     1FE3  1303               	bcf	3,6	;RP1=0, select bank0
  4244     1FE4  0828               	movf	??_fputc+4,w
  4245     1FE5  00AA               	movwf	??_fputc+6
  4246     1FE6  0829               	movf	??_fputc+5,w
  4247     1FE7  0084               	movwf	4
  4248     1FE8  1783               	bsf	3,7
  4249     1FE9  1C2A               	btfss	??_fputc+6,0
  4250     1FEA  1383               	bcf	3,7
  4251     1FEB  0820               	movf	fputc@c,w
  4252     1FEC  0080               	movwf	0
  4253     1FED  0822               	movf	fputc@fp,w
  4254     1FEE  3E02               	addlw	2
  4255     1FEF  00A4               	movwf	??_fputc
  4256     1FF0  0823               	movf	fputc@fp+1,w
  4257     1FF1  1803               	skipnc
  4258     1FF2  3E01               	addlw	1
  4259     1FF3  3E00               	addlw	0
  4260     1FF4  00A5               	movwf	??_fputc+1
  4261     1FF5  0824               	movf	??_fputc,w
  4262     1FF6  0084               	movwf	4
  4263     1FF7  1783               	bsf	3,7
  4264     1FF8  1C25               	btfss	??_fputc+1,0
  4265     1FF9  1383               	bcf	3,7
  4266     1FFA  3001               	movlw	1
  4267     1FFB  0780               	addwf	0,f
  4268     1FFC  0A84               	incf	4,f
  4269     1FFD  1803               	skipnc
  4270     1FFE  0A80               	incf	0,f
  4271     1FFF                     l887:
  4272     1FFF  0008               	return
  4273     2000                     __end_of_fputc:
  4274                           
  4275                           	psect	text11
  4276     0003                     __ptext11:	
  4277 ;; *************** function _putch *****************
  4278 ;; Defined at:
  4279 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  c               1    wreg     unsigned char 
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  c               1    0[COMMON] unsigned char 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  1    wreg      void 
  4286 ;; Registers used:
  4287 ;;		wreg
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4293 ;;      Params:         0       0       0       0       0
  4294 ;;      Locals:         0       0       0       0       0
  4295 ;;      Temps:          0       0       0       0       0
  4296 ;;      Totals:         0       0       0       0       0
  4297 ;;Total ram usage:        0 bytes
  4298 ;; Hardware stack levels used: 1
  4299 ;; Hardware stack levels required when called: 3
  4300 ;; This function calls:
  4301 ;;		Nothing
  4302 ;; This function is called by:
  4303 ;;		_fputc
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307     0003                     _putch:	
  4308                           ;psect for function _putch
  4309                           
  4310     0003                     l898:	
  4311                           ;incstack = 0
  4312                           ; Regs used in _putch: [wreg]
  4313                           
  4314     0003  0008               	return
  4315     0004                     __end_of_putch:
  4316                           
  4317                           	psect	text12
  4318     1B12                     __ptext12:	
  4319 ;; *************** function _memcpy *****************
  4320 ;; Defined at:
  4321 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  d1              1    0[BANK0 ] PTR void 
  4324 ;;		 -> dbuf(80), 
  4325 ;;  s1              1    1[BANK0 ] PTR const void 
  4326 ;;		 -> dbuf(80), 
  4327 ;;  n               2    2[BANK0 ] unsigned int 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  4330 ;;		 -> dbuf(80), 
  4331 ;;  d               1    5[BANK0 ] PTR unsigned char 
  4332 ;;		 -> dbuf(80), 
  4333 ;;  tmp             1    4[BANK0 ] unsigned char 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    0[BANK0 ] PTR void 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4343 ;;      Params:         0       4       0       0       0
  4344 ;;      Locals:         0       3       0       0       0
  4345 ;;      Temps:          0       0       0       0       0
  4346 ;;      Totals:         0       7       0       0       0
  4347 ;;Total ram usage:        7 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 3
  4350 ;; This function calls:
  4351 ;;		Nothing
  4352 ;; This function is called by:
  4353 ;;		_efgtoa
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357     1B12                     _memcpy:	
  4358                           ;psect for function _memcpy
  4359                           
  4360     1B12                     l3540:	
  4361                           ;incstack = 0
  4362                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  4363                           
  4364     1B12  1283               	bcf	3,5	;RP0=0, select bank0
  4365     1B13  1303               	bcf	3,6	;RP1=0, select bank0
  4366     1B14  0821               	movf	memcpy@s1,w
  4367     1B15  00A6               	movwf	memcpy@s
  4368     1B16  0820               	movf	memcpy@d1,w
  4369     1B17  00A5               	movwf	memcpy@d
  4370     1B18  2B26               	goto	l872
  4371     1B19                     l3542:
  4372     1B19  0826               	movf	memcpy@s,w
  4373     1B1A  0084               	movwf	4
  4374     1B1B  1783               	bsf	3,7	;select IRP bank2
  4375     1B1C  0800               	movf	0,w
  4376     1B1D  00A4               	movwf	memcpy@tmp
  4377     1B1E                     l3544:
  4378     1B1E  3001               	movlw	1
  4379     1B1F  07A6               	addwf	memcpy@s,f
  4380     1B20                     l3546:
  4381     1B20  0825               	movf	memcpy@d,w
  4382     1B21  0084               	movwf	4
  4383     1B22  0824               	movf	memcpy@tmp,w
  4384     1B23  0080               	movwf	0
  4385     1B24  3001               	movlw	1
  4386     1B25  07A5               	addwf	memcpy@d,f
  4387     1B26                     l872:
  4388     1B26  3001               	movlw	1
  4389     1B27  02A2               	subwf	memcpy@n,f
  4390     1B28  3000               	movlw	0
  4391     1B29  1C03               	skipc
  4392     1B2A  03A3               	decf	memcpy@n+1,f
  4393     1B2B  02A3               	subwf	memcpy@n+1,f
  4394     1B2C  0A22               	incf	memcpy@n,w
  4395     1B2D  1D03               	skipz
  4396     1B2E  2B33               	goto	u5321
  4397     1B2F  0A23               	incf	memcpy@n+1,w
  4398     1B30  1D03               	btfss	3,2
  4399     1B31  2B33               	goto	u5321
  4400     1B32  2B34               	goto	u5320
  4401     1B33                     u5321:
  4402     1B33  2B19               	goto	l3542
  4403     1B34                     u5320:
  4404     1B34                     l875:
  4405     1B34  0008               	return
  4406     1B35                     __end_of_memcpy:
  4407                           
  4408                           	psect	text13
  4409     1AE0                     __ptext13:	
  4410 ;; *************** function _labs *****************
  4411 ;; Defined at:
  4412 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  a               4    0[BANK0 ] long 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  4    0[BANK0 ] long 
  4419 ;; Registers used:
  4420 ;;		wreg, status,2, status,0
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4426 ;;      Params:         0       4       0       0       0
  4427 ;;      Locals:         0       0       0       0       0
  4428 ;;      Temps:          0       0       0       0       0
  4429 ;;      Totals:         0       4       0       0       0
  4430 ;;Total ram usage:        4 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 3
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_efgtoa
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440     1AE0                     _labs:	
  4441                           ;psect for function _labs
  4442                           
  4443     1AE0                     l3532:	
  4444                           ;incstack = 0
  4445                           ; Regs used in _labs: [wreg+status,2+status,0]
  4446                           
  4447     1AE0  1283               	bcf	3,5	;RP0=0, select bank0
  4448     1AE1  1303               	bcf	3,6	;RP1=0, select bank0
  4449     1AE2  1BA3               	btfsc	labs@a+3,7
  4450     1AE3  2AE5               	goto	u5311
  4451     1AE4  2AE6               	goto	u5310
  4452     1AE5                     u5311:
  4453     1AE5  2AE7               	goto	l3536
  4454     1AE6                     u5310:
  4455     1AE6                     l3534:
  4456     1AE6  2AF6               	goto	l869
  4457     1AE7                     l3536:
  4458     1AE7  0920               	comf	labs@a,w
  4459     1AE8  00A0               	movwf	?_labs
  4460     1AE9  0921               	comf	labs@a+1,w
  4461     1AEA  00A1               	movwf	?_labs+1
  4462     1AEB  0922               	comf	labs@a+2,w
  4463     1AEC  00A2               	movwf	?_labs+2
  4464     1AED  0923               	comf	labs@a+3,w
  4465     1AEE  00A3               	movwf	?_labs+3
  4466     1AEF  0AA0               	incf	?_labs,f
  4467     1AF0  1903               	skipnz
  4468     1AF1  0AA1               	incf	?_labs+1,f
  4469     1AF2  1903               	skipnz
  4470     1AF3  0AA2               	incf	?_labs+2,f
  4471     1AF4  1903               	skipnz
  4472     1AF5  0AA3               	incf	?_labs+3,f
  4473     1AF6                     l869:
  4474     1AF6  0008               	return
  4475     1AF7                     __end_of_labs:
  4476                           
  4477                           	psect	text14
  4478     064C                     __ptext14:	
  4479 ;; *************** function _floorf *****************
  4480 ;; Defined at:
  4481 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  x               4   66[BANK0 ] float 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  u               4    6[BANK1 ] struct .
  4486 ;;  m               4    0[BANK1 ] unsigned long 
  4487 ;;  e               2    4[BANK1 ] int 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  4   66[BANK0 ] float 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2, status,0, btemp+1
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4497 ;;      Params:         0       4       0       0       0
  4498 ;;      Locals:         0       0      10       0       0
  4499 ;;      Temps:          0       6       0       0       0
  4500 ;;      Totals:         0      10      10       0       0
  4501 ;;Total ram usage:       20 bytes
  4502 ;; Hardware stack levels used: 1
  4503 ;; Hardware stack levels required when called: 3
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_efgtoa
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511     064C                     _floorf:	
  4512                           ;psect for function _floorf
  4513                           
  4514     064C                     l2850:	
  4515                           ;incstack = 0
  4516                           ; Regs used in _floorf: [wreg+status,2+status,0+btemp+1]
  4517                           
  4518     064C  1683               	bsf	3,5	;RP0=1, select bank3
  4519     064D  1703               	bsf	3,6	;RP1=1, select bank3
  4520     064E  0841               	movf	(floorf@F521+3)^(0+384),w
  4521     064F  1683               	bsf	3,5	;RP0=1, select bank1
  4522     0650  1303               	bcf	3,6	;RP1=0, select bank1
  4523     0651  00A9               	movwf	(floorf@u+3)^(0+128)
  4524     0652  1683               	bsf	3,5	;RP0=1, select bank3
  4525     0653  1703               	bsf	3,6	;RP1=1, select bank3
  4526     0654  0840               	movf	(floorf@F521+2)^(0+384),w
  4527     0655  1683               	bsf	3,5	;RP0=1, select bank1
  4528     0656  1303               	bcf	3,6	;RP1=0, select bank1
  4529     0657  00A8               	movwf	(floorf@u+2)^(0+128)
  4530     0658  1683               	bsf	3,5	;RP0=1, select bank3
  4531     0659  1703               	bsf	3,6	;RP1=1, select bank3
  4532     065A  083F               	movf	(floorf@F521+1)^(0+384),w
  4533     065B  1683               	bsf	3,5	;RP0=1, select bank1
  4534     065C  1303               	bcf	3,6	;RP1=0, select bank1
  4535     065D  00A7               	movwf	(floorf@u+1)^(0+128)
  4536     065E  1683               	bsf	3,5	;RP0=1, select bank3
  4537     065F  1703               	bsf	3,6	;RP1=1, select bank3
  4538     0660  083E               	movf	floorf@F521^(0+384),w
  4539     0661  1683               	bsf	3,5	;RP0=1, select bank1
  4540     0662  1303               	bcf	3,6	;RP1=0, select bank1
  4541     0663  00A6               	movwf	floorf@u^(0+128)
  4542     0664  1283               	bcf	3,5	;RP0=0, select bank0
  4543     0665  1303               	bcf	3,6	;RP1=0, select bank0
  4544     0666  0865               	movf	floorf@x+3,w
  4545     0667  1683               	bsf	3,5	;RP0=1, select bank1
  4546     0668  1303               	bcf	3,6	;RP1=0, select bank1
  4547     0669  00A9               	movwf	(floorf@u+3)^(0+128)
  4548     066A  1283               	bcf	3,5	;RP0=0, select bank0
  4549     066B  1303               	bcf	3,6	;RP1=0, select bank0
  4550     066C  0864               	movf	floorf@x+2,w
  4551     066D  1683               	bsf	3,5	;RP0=1, select bank1
  4552     066E  1303               	bcf	3,6	;RP1=0, select bank1
  4553     066F  00A8               	movwf	(floorf@u+2)^(0+128)
  4554     0670  1283               	bcf	3,5	;RP0=0, select bank0
  4555     0671  1303               	bcf	3,6	;RP1=0, select bank0
  4556     0672  0863               	movf	floorf@x+1,w
  4557     0673  1683               	bsf	3,5	;RP0=1, select bank1
  4558     0674  1303               	bcf	3,6	;RP1=0, select bank1
  4559     0675  00A7               	movwf	(floorf@u+1)^(0+128)
  4560     0676  1283               	bcf	3,5	;RP0=0, select bank0
  4561     0677  1303               	bcf	3,6	;RP1=0, select bank0
  4562     0678  0862               	movf	floorf@x,w
  4563     0679  1683               	bsf	3,5	;RP0=1, select bank1
  4564     067A  1303               	bcf	3,6	;RP1=0, select bank1
  4565     067B  00A6               	movwf	floorf@u^(0+128)
  4566     067C                     l2852:
  4567     067C  0826               	movf	floorf@u^(0+128),w
  4568     067D  1283               	bcf	3,5	;RP0=0, select bank0
  4569     067E  1303               	bcf	3,6	;RP1=0, select bank0
  4570     067F  00E6               	movwf	??_floorf
  4571     0680  1683               	bsf	3,5	;RP0=1, select bank1
  4572     0681  1303               	bcf	3,6	;RP1=0, select bank1
  4573     0682  0827               	movf	(floorf@u+1)^(0+128),w
  4574     0683  1283               	bcf	3,5	;RP0=0, select bank0
  4575     0684  1303               	bcf	3,6	;RP1=0, select bank0
  4576     0685  00E7               	movwf	??_floorf+1
  4577     0686  1683               	bsf	3,5	;RP0=1, select bank1
  4578     0687  1303               	bcf	3,6	;RP1=0, select bank1
  4579     0688  0828               	movf	(floorf@u+2)^(0+128),w
  4580     0689  1283               	bcf	3,5	;RP0=0, select bank0
  4581     068A  1303               	bcf	3,6	;RP1=0, select bank0
  4582     068B  00E8               	movwf	??_floorf+2
  4583     068C  1683               	bsf	3,5	;RP0=1, select bank1
  4584     068D  1303               	bcf	3,6	;RP1=0, select bank1
  4585     068E  0829               	movf	(floorf@u+3)^(0+128),w
  4586     068F  1283               	bcf	3,5	;RP0=0, select bank0
  4587     0690  1303               	bcf	3,6	;RP1=0, select bank0
  4588     0691  00E9               	movwf	??_floorf+3
  4589     0692  3017               	movlw	23
  4590     0693                     u4175:
  4591     0693  1003               	clrc
  4592     0694  0CE9               	rrf	??_floorf+3,f
  4593     0695  0CE8               	rrf	??_floorf+2,f
  4594     0696  0CE7               	rrf	??_floorf+1,f
  4595     0697  0CE6               	rrf	??_floorf,f
  4596     0698                     u4170:
  4597     0698  3EFF               	addlw	-1
  4598     0699  1D03               	skipz
  4599     069A  2E93               	goto	u4175
  4600     069B  30FF               	movlw	255
  4601     069C  0566               	andwf	??_floorf,w
  4602     069D  00EA               	movwf	??_floorf+4
  4603     069E  3000               	movlw	0
  4604     069F  0567               	andwf	??_floorf+1,w
  4605     06A0  00EB               	movwf	??_floorf+5
  4606     06A1  086A               	movf	??_floorf+4,w
  4607     06A2  3E81               	addlw	129
  4608     06A3  1683               	bsf	3,5	;RP0=1, select bank1
  4609     06A4  1303               	bcf	3,6	;RP1=0, select bank1
  4610     06A5  00A4               	movwf	floorf@e^(0+128)
  4611     06A6  1283               	bcf	3,5	;RP0=0, select bank0
  4612     06A7  1303               	bcf	3,6	;RP1=0, select bank0
  4613     06A8  086B               	movf	??_floorf+5,w
  4614     06A9  1803               	skipnc
  4615     06AA  3E01               	addlw	1
  4616     06AB  3EFF               	addlw	255
  4617     06AC  1683               	bsf	3,5	;RP0=1, select bank1
  4618     06AD  1303               	bcf	3,6	;RP1=0, select bank1
  4619     06AE  00A5               	movwf	(floorf@e+1)^(0+128)
  4620     06AF                     l2854:
  4621     06AF  0825               	movf	(floorf@e+1)^(0+128),w
  4622     06B0  3A80               	xorlw	128
  4623     06B1  00FF               	movwf	btemp+1
  4624     06B2  3080               	movlw	128
  4625     06B3  027F               	subwf	btemp+1,w
  4626     06B4  1D03               	skipz
  4627     06B5  2EB8               	goto	u4185
  4628     06B6  3017               	movlw	23
  4629     06B7  0224               	subwf	floorf@e^(0+128),w
  4630     06B8                     u4185:
  4631     06B8  1C03               	skipc
  4632     06B9  2EBB               	goto	u4181
  4633     06BA  2EBC               	goto	u4180
  4634     06BB                     u4181:
  4635     06BB  2EBD               	goto	l854
  4636     06BC                     u4180:
  4637     06BC                     l2856:
  4638     06BC  2FFE               	goto	l855
  4639     06BD                     l854:
  4640     06BD  1683               	bsf	3,5	;RP0=1, select bank1
  4641     06BE  1303               	bcf	3,6	;RP1=0, select bank1
  4642     06BF  1BA5               	btfsc	(floorf@e+1)^(0+128),7
  4643     06C0  2EC2               	goto	u4191
  4644     06C1  2EC3               	goto	u4190
  4645     06C2                     u4191:
  4646     06C2  2F81               	goto	l2870
  4647     06C3                     u4190:
  4648     06C3                     l2858:
  4649     06C3  0A24               	incf	floorf@e^(0+128),w
  4650     06C4  00FF               	movwf	btemp+1
  4651     06C5  30FF               	movlw	255
  4652     06C6  1283               	bcf	3,5	;RP0=0, select bank0
  4653     06C7  1303               	bcf	3,6	;RP1=0, select bank0
  4654     06C8  00E6               	movwf	??_floorf
  4655     06C9  30FF               	movlw	255
  4656     06CA  00E7               	movwf	??_floorf+1
  4657     06CB  307F               	movlw	127
  4658     06CC  00E8               	movwf	??_floorf+2
  4659     06CD  3000               	movlw	0
  4660     06CE  00E9               	movwf	??_floorf+3
  4661     06CF  2ED5               	goto	u4200
  4662     06D0                     u4205:
  4663     06D0  0D69               	rlf	??_floorf+3,w
  4664     06D1  0CE9               	rrf	??_floorf+3,f
  4665     06D2  0CE8               	rrf	??_floorf+2,f
  4666     06D3  0CE7               	rrf	??_floorf+1,f
  4667     06D4  0CE6               	rrf	??_floorf,f
  4668     06D5                     u4200:
  4669     06D5  0BFF               	decfsz	btemp+1,f
  4670     06D6  2ED0               	goto	u4205
  4671     06D7  0869               	movf	??_floorf+3,w
  4672     06D8  1683               	bsf	3,5	;RP0=1, select bank1
  4673     06D9  1303               	bcf	3,6	;RP1=0, select bank1
  4674     06DA  00A3               	movwf	(floorf@m+3)^(0+128)
  4675     06DB  1283               	bcf	3,5	;RP0=0, select bank0
  4676     06DC  1303               	bcf	3,6	;RP1=0, select bank0
  4677     06DD  0868               	movf	??_floorf+2,w
  4678     06DE  1683               	bsf	3,5	;RP0=1, select bank1
  4679     06DF  1303               	bcf	3,6	;RP1=0, select bank1
  4680     06E0  00A2               	movwf	(floorf@m+2)^(0+128)
  4681     06E1  1283               	bcf	3,5	;RP0=0, select bank0
  4682     06E2  1303               	bcf	3,6	;RP1=0, select bank0
  4683     06E3  0867               	movf	??_floorf+1,w
  4684     06E4  1683               	bsf	3,5	;RP0=1, select bank1
  4685     06E5  1303               	bcf	3,6	;RP1=0, select bank1
  4686     06E6  00A1               	movwf	(floorf@m+1)^(0+128)
  4687     06E7  1283               	bcf	3,5	;RP0=0, select bank0
  4688     06E8  1303               	bcf	3,6	;RP1=0, select bank0
  4689     06E9  0866               	movf	??_floorf,w
  4690     06EA  1683               	bsf	3,5	;RP0=1, select bank1
  4691     06EB  1303               	bcf	3,6	;RP1=0, select bank1
  4692     06EC  00A0               	movwf	floorf@m^(0+128)
  4693     06ED                     l2860:
  4694     06ED  0820               	movf	floorf@m^(0+128),w
  4695     06EE  0526               	andwf	floorf@u^(0+128),w
  4696     06EF  1283               	bcf	3,5	;RP0=0, select bank0
  4697     06F0  1303               	bcf	3,6	;RP1=0, select bank0
  4698     06F1  00E6               	movwf	??_floorf
  4699     06F2  1683               	bsf	3,5	;RP0=1, select bank1
  4700     06F3  1303               	bcf	3,6	;RP1=0, select bank1
  4701     06F4  0821               	movf	(floorf@m+1)^(0+128),w
  4702     06F5  0527               	andwf	(floorf@u+1)^(0+128),w
  4703     06F6  1283               	bcf	3,5	;RP0=0, select bank0
  4704     06F7  1303               	bcf	3,6	;RP1=0, select bank0
  4705     06F8  00E7               	movwf	??_floorf+1
  4706     06F9  1683               	bsf	3,5	;RP0=1, select bank1
  4707     06FA  1303               	bcf	3,6	;RP1=0, select bank1
  4708     06FB  0822               	movf	(floorf@m+2)^(0+128),w
  4709     06FC  0528               	andwf	(floorf@u+2)^(0+128),w
  4710     06FD  1283               	bcf	3,5	;RP0=0, select bank0
  4711     06FE  1303               	bcf	3,6	;RP1=0, select bank0
  4712     06FF  00E8               	movwf	??_floorf+2
  4713     0700  1683               	bsf	3,5	;RP0=1, select bank1
  4714     0701  1303               	bcf	3,6	;RP1=0, select bank1
  4715     0702  0823               	movf	(floorf@m+3)^(0+128),w
  4716     0703  0529               	andwf	(floorf@u+3)^(0+128),w
  4717     0704  1283               	bcf	3,5	;RP0=0, select bank0
  4718     0705  1303               	bcf	3,6	;RP1=0, select bank0
  4719     0706  00E9               	movwf	??_floorf+3
  4720     0707  0869               	movf	??_floorf+3,w
  4721     0708  0468               	iorwf	??_floorf+2,w
  4722     0709  0467               	iorwf	??_floorf+1,w
  4723     070A  0466               	iorwf	??_floorf,w
  4724     070B  1D03               	skipz
  4725     070C  2F0E               	goto	u4211
  4726     070D  2F0F               	goto	u4210
  4727     070E                     u4211:
  4728     070E  2F10               	goto	l2864
  4729     070F                     u4210:
  4730     070F  2EBC               	goto	l2856
  4731     0710                     l2864:
  4732     0710  1683               	bsf	3,5	;RP0=1, select bank1
  4733     0711  1303               	bcf	3,6	;RP1=0, select bank1
  4734     0712  0826               	movf	floorf@u^(0+128),w
  4735     0713  1283               	bcf	3,5	;RP0=0, select bank0
  4736     0714  1303               	bcf	3,6	;RP1=0, select bank0
  4737     0715  00E6               	movwf	??_floorf
  4738     0716  1683               	bsf	3,5	;RP0=1, select bank1
  4739     0717  1303               	bcf	3,6	;RP1=0, select bank1
  4740     0718  0827               	movf	(floorf@u+1)^(0+128),w
  4741     0719  1283               	bcf	3,5	;RP0=0, select bank0
  4742     071A  1303               	bcf	3,6	;RP1=0, select bank0
  4743     071B  00E7               	movwf	??_floorf+1
  4744     071C  1683               	bsf	3,5	;RP0=1, select bank1
  4745     071D  1303               	bcf	3,6	;RP1=0, select bank1
  4746     071E  0828               	movf	(floorf@u+2)^(0+128),w
  4747     071F  1283               	bcf	3,5	;RP0=0, select bank0
  4748     0720  1303               	bcf	3,6	;RP1=0, select bank0
  4749     0721  00E8               	movwf	??_floorf+2
  4750     0722  1683               	bsf	3,5	;RP0=1, select bank1
  4751     0723  1303               	bcf	3,6	;RP1=0, select bank1
  4752     0724  0829               	movf	(floorf@u+3)^(0+128),w
  4753     0725  1283               	bcf	3,5	;RP0=0, select bank0
  4754     0726  1303               	bcf	3,6	;RP1=0, select bank0
  4755     0727  00E9               	movwf	??_floorf+3
  4756     0728  301F               	movlw	31
  4757     0729                     u4225:
  4758     0729  1003               	clrc
  4759     072A  0CE9               	rrf	??_floorf+3,f
  4760     072B  0CE8               	rrf	??_floorf+2,f
  4761     072C  0CE7               	rrf	??_floorf+1,f
  4762     072D  0CE6               	rrf	??_floorf,f
  4763     072E                     u4220:
  4764     072E  3EFF               	addlw	-1
  4765     072F  1D03               	skipz
  4766     0730  2F29               	goto	u4225
  4767     0731  0869               	movf	??_floorf+3,w
  4768     0732  0468               	iorwf	??_floorf+2,w
  4769     0733  0467               	iorwf	??_floorf+1,w
  4770     0734  0466               	iorwf	??_floorf,w
  4771     0735  1903               	skipnz
  4772     0736  2F38               	goto	u4231
  4773     0737  2F39               	goto	u4230
  4774     0738                     u4231:
  4775     0738  2F52               	goto	l2868
  4776     0739                     u4230:
  4777     0739                     l2866:
  4778     0739  1683               	bsf	3,5	;RP0=1, select bank1
  4779     073A  1303               	bcf	3,6	;RP1=0, select bank1
  4780     073B  0820               	movf	floorf@m^(0+128),w
  4781     073C  07A6               	addwf	floorf@u^(0+128),f
  4782     073D  0821               	movf	(floorf@m+1)^(0+128),w
  4783     073E  1103               	clrz
  4784     073F  1803               	skipnc
  4785     0740  3E01               	addlw	1
  4786     0741  1903               	skipnz
  4787     0742  2F44               	goto	u4241
  4788     0743  07A7               	addwf	(floorf@u+1)^(0+128),f
  4789     0744                     u4241:
  4790     0744  0822               	movf	(floorf@m+2)^(0+128),w
  4791     0745  1103               	clrz
  4792     0746  1803               	skipnc
  4793     0747  3E01               	addlw	1
  4794     0748  1903               	skipnz
  4795     0749  2F4B               	goto	u4242
  4796     074A  07A8               	addwf	(floorf@u+2)^(0+128),f
  4797     074B                     u4242:
  4798     074B  0823               	movf	(floorf@m+3)^(0+128),w
  4799     074C  1103               	clrz
  4800     074D  1803               	skipnc
  4801     074E  3E01               	addlw	1
  4802     074F  1903               	skipnz
  4803     0750  2F52               	goto	u4243
  4804     0751  07A9               	addwf	(floorf@u+3)^(0+128),f
  4805     0752                     u4243:
  4806     0752                     l2868:
  4807     0752  1683               	bsf	3,5	;RP0=1, select bank1
  4808     0753  1303               	bcf	3,6	;RP1=0, select bank1
  4809     0754  0920               	comf	floorf@m^(0+128),w
  4810     0755  1283               	bcf	3,5	;RP0=0, select bank0
  4811     0756  1303               	bcf	3,6	;RP1=0, select bank0
  4812     0757  00E6               	movwf	??_floorf
  4813     0758  1683               	bsf	3,5	;RP0=1, select bank1
  4814     0759  1303               	bcf	3,6	;RP1=0, select bank1
  4815     075A  0921               	comf	(floorf@m+1)^(0+128),w
  4816     075B  1283               	bcf	3,5	;RP0=0, select bank0
  4817     075C  1303               	bcf	3,6	;RP1=0, select bank0
  4818     075D  00E7               	movwf	??_floorf+1
  4819     075E  1683               	bsf	3,5	;RP0=1, select bank1
  4820     075F  1303               	bcf	3,6	;RP1=0, select bank1
  4821     0760  0922               	comf	(floorf@m+2)^(0+128),w
  4822     0761  1283               	bcf	3,5	;RP0=0, select bank0
  4823     0762  1303               	bcf	3,6	;RP1=0, select bank0
  4824     0763  00E8               	movwf	??_floorf+2
  4825     0764  1683               	bsf	3,5	;RP0=1, select bank1
  4826     0765  1303               	bcf	3,6	;RP1=0, select bank1
  4827     0766  0923               	comf	(floorf@m+3)^(0+128),w
  4828     0767  1283               	bcf	3,5	;RP0=0, select bank0
  4829     0768  1303               	bcf	3,6	;RP1=0, select bank0
  4830     0769  00E9               	movwf	??_floorf+3
  4831     076A  0866               	movf	??_floorf,w
  4832     076B  1683               	bsf	3,5	;RP0=1, select bank1
  4833     076C  1303               	bcf	3,6	;RP1=0, select bank1
  4834     076D  05A6               	andwf	floorf@u^(0+128),f
  4835     076E  1283               	bcf	3,5	;RP0=0, select bank0
  4836     076F  1303               	bcf	3,6	;RP1=0, select bank0
  4837     0770  0867               	movf	??_floorf+1,w
  4838     0771  1683               	bsf	3,5	;RP0=1, select bank1
  4839     0772  1303               	bcf	3,6	;RP1=0, select bank1
  4840     0773  05A7               	andwf	(floorf@u+1)^(0+128),f
  4841     0774  1283               	bcf	3,5	;RP0=0, select bank0
  4842     0775  1303               	bcf	3,6	;RP1=0, select bank0
  4843     0776  0868               	movf	??_floorf+2,w
  4844     0777  1683               	bsf	3,5	;RP0=1, select bank1
  4845     0778  1303               	bcf	3,6	;RP1=0, select bank1
  4846     0779  05A8               	andwf	(floorf@u+2)^(0+128),f
  4847     077A  1283               	bcf	3,5	;RP0=0, select bank0
  4848     077B  1303               	bcf	3,6	;RP1=0, select bank0
  4849     077C  0869               	movf	??_floorf+3,w
  4850     077D  1683               	bsf	3,5	;RP0=1, select bank1
  4851     077E  1303               	bcf	3,6	;RP1=0, select bank1
  4852     077F  05A9               	andwf	(floorf@u+3)^(0+128),f
  4853     0780  2FE6               	goto	l859
  4854     0781                     l2870:
  4855     0781  0826               	movf	floorf@u^(0+128),w
  4856     0782  1283               	bcf	3,5	;RP0=0, select bank0
  4857     0783  1303               	bcf	3,6	;RP1=0, select bank0
  4858     0784  00E6               	movwf	??_floorf
  4859     0785  1683               	bsf	3,5	;RP0=1, select bank1
  4860     0786  1303               	bcf	3,6	;RP1=0, select bank1
  4861     0787  0827               	movf	(floorf@u+1)^(0+128),w
  4862     0788  1283               	bcf	3,5	;RP0=0, select bank0
  4863     0789  1303               	bcf	3,6	;RP1=0, select bank0
  4864     078A  00E7               	movwf	??_floorf+1
  4865     078B  1683               	bsf	3,5	;RP0=1, select bank1
  4866     078C  1303               	bcf	3,6	;RP1=0, select bank1
  4867     078D  0828               	movf	(floorf@u+2)^(0+128),w
  4868     078E  1283               	bcf	3,5	;RP0=0, select bank0
  4869     078F  1303               	bcf	3,6	;RP1=0, select bank0
  4870     0790  00E8               	movwf	??_floorf+2
  4871     0791  1683               	bsf	3,5	;RP0=1, select bank1
  4872     0792  1303               	bcf	3,6	;RP1=0, select bank1
  4873     0793  0829               	movf	(floorf@u+3)^(0+128),w
  4874     0794  1283               	bcf	3,5	;RP0=0, select bank0
  4875     0795  1303               	bcf	3,6	;RP1=0, select bank0
  4876     0796  00E9               	movwf	??_floorf+3
  4877     0797  301F               	movlw	31
  4878     0798                     u4255:
  4879     0798  1003               	clrc
  4880     0799  0CE9               	rrf	??_floorf+3,f
  4881     079A  0CE8               	rrf	??_floorf+2,f
  4882     079B  0CE7               	rrf	??_floorf+1,f
  4883     079C  0CE6               	rrf	??_floorf,f
  4884     079D                     u4250:
  4885     079D  3EFF               	addlw	-1
  4886     079E  1D03               	skipz
  4887     079F  2F98               	goto	u4255
  4888     07A0  0869               	movf	??_floorf+3,w
  4889     07A1  0468               	iorwf	??_floorf+2,w
  4890     07A2  0467               	iorwf	??_floorf+1,w
  4891     07A3  0466               	iorwf	??_floorf,w
  4892     07A4  1D03               	skipz
  4893     07A5  2FA7               	goto	u4261
  4894     07A6  2FA8               	goto	u4260
  4895     07A7                     u4261:
  4896     07A7  2FB3               	goto	l2874
  4897     07A8                     u4260:
  4898     07A8                     l2872:
  4899     07A8  3000               	movlw	0
  4900     07A9  1683               	bsf	3,5	;RP0=1, select bank1
  4901     07AA  1303               	bcf	3,6	;RP1=0, select bank1
  4902     07AB  00A9               	movwf	(floorf@u+3)^(0+128)
  4903     07AC  3000               	movlw	0
  4904     07AD  00A8               	movwf	(floorf@u+2)^(0+128)
  4905     07AE  3000               	movlw	0
  4906     07AF  00A7               	movwf	(floorf@u+1)^(0+128)
  4907     07B0  3000               	movlw	0
  4908     07B1  00A6               	movwf	floorf@u^(0+128)
  4909     07B2  2FE6               	goto	l859
  4910     07B3                     l2874:
  4911     07B3  1683               	bsf	3,5	;RP0=1, select bank1
  4912     07B4  1303               	bcf	3,6	;RP1=0, select bank1
  4913     07B5  0826               	movf	floorf@u^(0+128),w
  4914     07B6  1283               	bcf	3,5	;RP0=0, select bank0
  4915     07B7  1303               	bcf	3,6	;RP1=0, select bank0
  4916     07B8  00E6               	movwf	??_floorf
  4917     07B9  1683               	bsf	3,5	;RP0=1, select bank1
  4918     07BA  1303               	bcf	3,6	;RP1=0, select bank1
  4919     07BB  0827               	movf	(floorf@u+1)^(0+128),w
  4920     07BC  1283               	bcf	3,5	;RP0=0, select bank0
  4921     07BD  1303               	bcf	3,6	;RP1=0, select bank0
  4922     07BE  00E7               	movwf	??_floorf+1
  4923     07BF  1683               	bsf	3,5	;RP0=1, select bank1
  4924     07C0  1303               	bcf	3,6	;RP1=0, select bank1
  4925     07C1  0828               	movf	(floorf@u+2)^(0+128),w
  4926     07C2  1283               	bcf	3,5	;RP0=0, select bank0
  4927     07C3  1303               	bcf	3,6	;RP1=0, select bank0
  4928     07C4  00E8               	movwf	??_floorf+2
  4929     07C5  1683               	bsf	3,5	;RP0=1, select bank1
  4930     07C6  1303               	bcf	3,6	;RP1=0, select bank1
  4931     07C7  0829               	movf	(floorf@u+3)^(0+128),w
  4932     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  4933     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  4934     07CA  00E9               	movwf	??_floorf+3
  4935     07CB  3001               	movlw	1
  4936     07CC                     u4275:
  4937     07CC  1003               	clrc
  4938     07CD  0DE6               	rlf	??_floorf,f
  4939     07CE  0DE7               	rlf	??_floorf+1,f
  4940     07CF  0DE8               	rlf	??_floorf+2,f
  4941     07D0  0DE9               	rlf	??_floorf+3,f
  4942     07D1                     u4270:
  4943     07D1  3EFF               	addlw	-1
  4944     07D2  1D03               	skipz
  4945     07D3  2FCC               	goto	u4275
  4946     07D4  0869               	movf	??_floorf+3,w
  4947     07D5  0468               	iorwf	??_floorf+2,w
  4948     07D6  0467               	iorwf	??_floorf+1,w
  4949     07D7  0466               	iorwf	??_floorf,w
  4950     07D8  1903               	skipnz
  4951     07D9  2FDB               	goto	u4281
  4952     07DA  2FDC               	goto	u4280
  4953     07DB                     u4281:
  4954     07DB  2FE6               	goto	l859
  4955     07DC                     u4280:
  4956     07DC                     l2876:
  4957     07DC  30BF               	movlw	191
  4958     07DD  1683               	bsf	3,5	;RP0=1, select bank1
  4959     07DE  1303               	bcf	3,6	;RP1=0, select bank1
  4960     07DF  00A9               	movwf	(floorf@u+3)^(0+128)
  4961     07E0  3080               	movlw	128
  4962     07E1  00A8               	movwf	(floorf@u+2)^(0+128)
  4963     07E2  3000               	movlw	0
  4964     07E3  00A7               	movwf	(floorf@u+1)^(0+128)
  4965     07E4  3000               	movlw	0
  4966     07E5  00A6               	movwf	floorf@u^(0+128)
  4967     07E6                     l859:
  4968     07E6  1683               	bsf	3,5	;RP0=1, select bank1
  4969     07E7  1303               	bcf	3,6	;RP1=0, select bank1
  4970     07E8  0829               	movf	(floorf@u+3)^(0+128),w
  4971     07E9  1283               	bcf	3,5	;RP0=0, select bank0
  4972     07EA  1303               	bcf	3,6	;RP1=0, select bank0
  4973     07EB  00E5               	movwf	?_floorf+3
  4974     07EC  1683               	bsf	3,5	;RP0=1, select bank1
  4975     07ED  1303               	bcf	3,6	;RP1=0, select bank1
  4976     07EE  0828               	movf	(floorf@u+2)^(0+128),w
  4977     07EF  1283               	bcf	3,5	;RP0=0, select bank0
  4978     07F0  1303               	bcf	3,6	;RP1=0, select bank0
  4979     07F1  00E4               	movwf	?_floorf+2
  4980     07F2  1683               	bsf	3,5	;RP0=1, select bank1
  4981     07F3  1303               	bcf	3,6	;RP1=0, select bank1
  4982     07F4  0827               	movf	(floorf@u+1)^(0+128),w
  4983     07F5  1283               	bcf	3,5	;RP0=0, select bank0
  4984     07F6  1303               	bcf	3,6	;RP1=0, select bank0
  4985     07F7  00E3               	movwf	?_floorf+1
  4986     07F8  1683               	bsf	3,5	;RP0=1, select bank1
  4987     07F9  1303               	bcf	3,6	;RP1=0, select bank1
  4988     07FA  0826               	movf	floorf@u^(0+128),w
  4989     07FB  1283               	bcf	3,5	;RP0=0, select bank0
  4990     07FC  1303               	bcf	3,6	;RP1=0, select bank0
  4991     07FD  00E2               	movwf	?_floorf
  4992     07FE                     l855:
  4993     07FE  0008               	return
  4994     07FF                     __end_of_floorf:
  4995                           
  4996                           	psect	text15
  4997     1ED3                     __ptext15:	
  4998 ;; *************** function ___fpclassifyf *****************
  4999 ;; Defined at:
  5000 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  x               4    0[BANK0 ] float 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  u               4   12[BANK0 ] struct .
  5005 ;;  e               2   10[BANK0 ] int 
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  2    0[BANK0 ] int 
  5008 ;; Registers used:
  5009 ;;		wreg, status,2, status,0
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5015 ;;      Params:         0       4       0       0       0
  5016 ;;      Locals:         0       6       0       0       0
  5017 ;;      Temps:          0       6       0       0       0
  5018 ;;      Totals:         0      16       0       0       0
  5019 ;;Total ram usage:       16 bytes
  5020 ;; Hardware stack levels used: 1
  5021 ;; Hardware stack levels required when called: 3
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_efgtoa
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029     1ED3                     ___fpclassifyf:	
  5030                           ;psect for function ___fpclassifyf
  5031                           
  5032     1ED3                     l2814:	
  5033                           ;incstack = 0
  5034                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  5035                           
  5036     1ED3  1683               	bsf	3,5	;RP0=1, select bank3
  5037     1ED4  1703               	bsf	3,6	;RP1=1, select bank3
  5038     1ED5  0845               	movf	(___fpclassifyf@F465+3)^(0+384),w
  5039     1ED6  1283               	bcf	3,5	;RP0=0, select bank0
  5040     1ED7  1303               	bcf	3,6	;RP1=0, select bank0
  5041     1ED8  00AF               	movwf	___fpclassifyf@u+3
  5042     1ED9  1683               	bsf	3,5	;RP0=1, select bank3
  5043     1EDA  1703               	bsf	3,6	;RP1=1, select bank3
  5044     1EDB  0844               	movf	(___fpclassifyf@F465+2)^(0+384),w
  5045     1EDC  1283               	bcf	3,5	;RP0=0, select bank0
  5046     1EDD  1303               	bcf	3,6	;RP1=0, select bank0
  5047     1EDE  00AE               	movwf	___fpclassifyf@u+2
  5048     1EDF  1683               	bsf	3,5	;RP0=1, select bank3
  5049     1EE0  1703               	bsf	3,6	;RP1=1, select bank3
  5050     1EE1  0843               	movf	(___fpclassifyf@F465+1)^(0+384),w
  5051     1EE2  1283               	bcf	3,5	;RP0=0, select bank0
  5052     1EE3  1303               	bcf	3,6	;RP1=0, select bank0
  5053     1EE4  00AD               	movwf	___fpclassifyf@u+1
  5054     1EE5  1683               	bsf	3,5	;RP0=1, select bank3
  5055     1EE6  1703               	bsf	3,6	;RP1=1, select bank3
  5056     1EE7  0842               	movf	___fpclassifyf@F465^(0+384),w
  5057     1EE8  1283               	bcf	3,5	;RP0=0, select bank0
  5058     1EE9  1303               	bcf	3,6	;RP1=0, select bank0
  5059     1EEA  00AC               	movwf	___fpclassifyf@u
  5060     1EEB  0823               	movf	___fpclassifyf@x+3,w
  5061     1EEC  00AF               	movwf	___fpclassifyf@u+3
  5062     1EED  0822               	movf	___fpclassifyf@x+2,w
  5063     1EEE  00AE               	movwf	___fpclassifyf@u+2
  5064     1EEF  0821               	movf	___fpclassifyf@x+1,w
  5065     1EF0  00AD               	movwf	___fpclassifyf@u+1
  5066     1EF1  0820               	movf	___fpclassifyf@x,w
  5067     1EF2  00AC               	movwf	___fpclassifyf@u
  5068     1EF3                     l2816:
  5069     1EF3  082C               	movf	___fpclassifyf@u,w
  5070     1EF4  00A4               	movwf	??___fpclassifyf
  5071     1EF5  082D               	movf	___fpclassifyf@u+1,w
  5072     1EF6  00A5               	movwf	??___fpclassifyf+1
  5073     1EF7  082E               	movf	___fpclassifyf@u+2,w
  5074     1EF8  00A6               	movwf	??___fpclassifyf+2
  5075     1EF9  082F               	movf	___fpclassifyf@u+3,w
  5076     1EFA  00A7               	movwf	??___fpclassifyf+3
  5077     1EFB  3017               	movlw	23
  5078     1EFC                     u4075:
  5079     1EFC  1003               	clrc
  5080     1EFD  0CA7               	rrf	??___fpclassifyf+3,f
  5081     1EFE  0CA6               	rrf	??___fpclassifyf+2,f
  5082     1EFF  0CA5               	rrf	??___fpclassifyf+1,f
  5083     1F00  0CA4               	rrf	??___fpclassifyf,f
  5084     1F01                     u4070:
  5085     1F01  3EFF               	addlw	-1
  5086     1F02  1D03               	skipz
  5087     1F03  2EFC               	goto	u4075
  5088     1F04  30FF               	movlw	255
  5089     1F05  0524               	andwf	??___fpclassifyf,w
  5090     1F06  00AA               	movwf	___fpclassifyf@e
  5091     1F07  3000               	movlw	0
  5092     1F08  0525               	andwf	??___fpclassifyf+1,w
  5093     1F09  00AB               	movwf	___fpclassifyf@e+1
  5094     1F0A                     l2818:
  5095     1F0A  082A               	movf	___fpclassifyf@e,w
  5096     1F0B  042B               	iorwf	___fpclassifyf@e+1,w
  5097     1F0C  1D03               	btfss	3,2
  5098     1F0D  2F0F               	goto	u4081
  5099     1F0E  2F10               	goto	u4080
  5100     1F0F                     u4081:
  5101     1F0F  2F33               	goto	l2828
  5102     1F10                     u4080:
  5103     1F10                     l2820:
  5104     1F10  082C               	movf	___fpclassifyf@u,w
  5105     1F11  00A4               	movwf	??___fpclassifyf
  5106     1F12  082D               	movf	___fpclassifyf@u+1,w
  5107     1F13  00A5               	movwf	??___fpclassifyf+1
  5108     1F14  082E               	movf	___fpclassifyf@u+2,w
  5109     1F15  00A6               	movwf	??___fpclassifyf+2
  5110     1F16  082F               	movf	___fpclassifyf@u+3,w
  5111     1F17  00A7               	movwf	??___fpclassifyf+3
  5112     1F18  3001               	movlw	1
  5113     1F19                     u4095:
  5114     1F19  1003               	clrc
  5115     1F1A  0DA4               	rlf	??___fpclassifyf,f
  5116     1F1B  0DA5               	rlf	??___fpclassifyf+1,f
  5117     1F1C  0DA6               	rlf	??___fpclassifyf+2,f
  5118     1F1D  0DA7               	rlf	??___fpclassifyf+3,f
  5119     1F1E                     u4090:
  5120     1F1E  3EFF               	addlw	-1
  5121     1F1F  1D03               	skipz
  5122     1F20  2F19               	goto	u4095
  5123     1F21  0827               	movf	??___fpclassifyf+3,w
  5124     1F22  0426               	iorwf	??___fpclassifyf+2,w
  5125     1F23  0425               	iorwf	??___fpclassifyf+1,w
  5126     1F24  0424               	iorwf	??___fpclassifyf,w
  5127     1F25  1D03               	skipz
  5128     1F26  2F28               	goto	u4101
  5129     1F27  2F29               	goto	u4100
  5130     1F28                     u4101:
  5131     1F28  2F2E               	goto	l2824
  5132     1F29                     u4100:
  5133     1F29                     l2822:
  5134     1F29  3002               	movlw	2
  5135     1F2A  00A0               	movwf	?___fpclassifyf
  5136     1F2B  3000               	movlw	0
  5137     1F2C  00A1               	movwf	?___fpclassifyf+1
  5138     1F2D  2F5F               	goto	l848
  5139     1F2E                     l2824:
  5140     1F2E  3003               	movlw	3
  5141     1F2F  00A0               	movwf	?___fpclassifyf
  5142     1F30  3000               	movlw	0
  5143     1F31  00A1               	movwf	?___fpclassifyf+1
  5144     1F32  2F5F               	goto	l848
  5145     1F33                     l2828:
  5146     1F33  0A2A               	incf	___fpclassifyf@e,w
  5147     1F34  042B               	iorwf	___fpclassifyf@e+1,w
  5148     1F35  1D03               	btfss	3,2
  5149     1F36  2F38               	goto	u4111
  5150     1F37  2F39               	goto	u4110
  5151     1F38                     u4111:
  5152     1F38  2F5B               	goto	l2834
  5153     1F39                     u4110:
  5154     1F39                     l2830:
  5155     1F39  082C               	movf	___fpclassifyf@u,w
  5156     1F3A  00A4               	movwf	??___fpclassifyf
  5157     1F3B  082D               	movf	___fpclassifyf@u+1,w
  5158     1F3C  00A5               	movwf	??___fpclassifyf+1
  5159     1F3D  082E               	movf	___fpclassifyf@u+2,w
  5160     1F3E  00A6               	movwf	??___fpclassifyf+2
  5161     1F3F  082F               	movf	___fpclassifyf@u+3,w
  5162     1F40  00A7               	movwf	??___fpclassifyf+3
  5163     1F41  3009               	movlw	9
  5164     1F42                     u4125:
  5165     1F42  1003               	clrc
  5166     1F43  0DA4               	rlf	??___fpclassifyf,f
  5167     1F44  0DA5               	rlf	??___fpclassifyf+1,f
  5168     1F45  0DA6               	rlf	??___fpclassifyf+2,f
  5169     1F46  0DA7               	rlf	??___fpclassifyf+3,f
  5170     1F47                     u4120:
  5171     1F47  3EFF               	addlw	-1
  5172     1F48  1D03               	skipz
  5173     1F49  2F42               	goto	u4125
  5174     1F4A  0827               	movf	??___fpclassifyf+3,w
  5175     1F4B  0426               	iorwf	??___fpclassifyf+2,w
  5176     1F4C  0425               	iorwf	??___fpclassifyf+1,w
  5177     1F4D  0424               	iorwf	??___fpclassifyf,w
  5178     1F4E  1903               	skipnz
  5179     1F4F  2F51               	goto	u4131
  5180     1F50  2F53               	goto	u4130
  5181     1F51                     u4131:
  5182     1F51  3001               	movlw	1
  5183     1F52  2F54               	goto	u4140
  5184     1F53                     u4130:
  5185     1F53  3000               	movlw	0
  5186     1F54                     u4140:
  5187     1F54  00A8               	movwf	??___fpclassifyf+4
  5188     1F55  01A9               	clrf	??___fpclassifyf+5
  5189     1F56  0828               	movf	??___fpclassifyf+4,w
  5190     1F57  00A0               	movwf	?___fpclassifyf
  5191     1F58  0829               	movf	??___fpclassifyf+5,w
  5192     1F59  00A1               	movwf	?___fpclassifyf+1
  5193     1F5A  2F5F               	goto	l848
  5194     1F5B                     l2834:
  5195     1F5B  3004               	movlw	4
  5196     1F5C  00A0               	movwf	?___fpclassifyf
  5197     1F5D  3000               	movlw	0
  5198     1F5E  00A1               	movwf	?___fpclassifyf+1
  5199     1F5F                     l848:
  5200     1F5F  0008               	return
  5201     1F60                     __end_of___fpclassifyf:
  5202                           
  5203                           	psect	text16
  5204     1DDD                     __ptext16:	
  5205 ;; *************** function ___fltol *****************
  5206 ;; Defined at:
  5207 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  f1              4    0[BANK0 ] int 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  exp1            1    9[BANK0 ] unsigned char 
  5212 ;;  sign1           1    8[BANK0 ] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  4    0[BANK0 ] long 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5222 ;;      Params:         0       4       0       0       0
  5223 ;;      Locals:         0       2       0       0       0
  5224 ;;      Temps:          0       4       0       0       0
  5225 ;;      Totals:         0      10       0       0       0
  5226 ;;Total ram usage:       10 bytes
  5227 ;; Hardware stack levels used: 1
  5228 ;; Hardware stack levels required when called: 3
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_efgtoa
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236     1DDD                     ___fltol:	
  5237                           ;psect for function ___fltol
  5238                           
  5239     1DDD                     l2474:	
  5240                           ;incstack = 0
  5241                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5242                           
  5243     1DDD  1003               	clrc
  5244     1DDE  1283               	bcf	3,5	;RP0=0, select bank0
  5245     1DDF  1303               	bcf	3,6	;RP1=0, select bank0
  5246     1DE0  0D22               	rlf	___fltol@f1+2,w
  5247     1DE1  0D23               	rlf	___fltol@f1+3,w
  5248     1DE2  00A9               	movwf	___fltol@exp1
  5249     1DE3  0829               	movf	___fltol@exp1,w
  5250     1DE4  1D03               	btfss	3,2
  5251     1DE5  2DE7               	goto	u3291
  5252     1DE6  2DE8               	goto	u3290
  5253     1DE7                     u3291:
  5254     1DE7  2DF1               	goto	l2480
  5255     1DE8                     u3290:
  5256     1DE8                     l2476:
  5257     1DE8  3000               	movlw	0
  5258     1DE9  00A3               	movwf	?___fltol+3
  5259     1DEA  3000               	movlw	0
  5260     1DEB  00A2               	movwf	?___fltol+2
  5261     1DEC  3000               	movlw	0
  5262     1DED  00A1               	movwf	?___fltol+1
  5263     1DEE  3000               	movlw	0
  5264     1DEF  00A0               	movwf	?___fltol
  5265     1DF0  2E52               	goto	l451
  5266     1DF1                     l2480:
  5267     1DF1  0820               	movf	___fltol@f1,w
  5268     1DF2  00A4               	movwf	??___fltol
  5269     1DF3  0821               	movf	___fltol@f1+1,w
  5270     1DF4  00A5               	movwf	??___fltol+1
  5271     1DF5  0822               	movf	___fltol@f1+2,w
  5272     1DF6  00A6               	movwf	??___fltol+2
  5273     1DF7  0823               	movf	___fltol@f1+3,w
  5274     1DF8  00A7               	movwf	??___fltol+3
  5275     1DF9  301F               	movlw	31
  5276     1DFA                     u3305:
  5277     1DFA  1003               	clrc
  5278     1DFB  0CA7               	rrf	??___fltol+3,f
  5279     1DFC  0CA6               	rrf	??___fltol+2,f
  5280     1DFD  0CA5               	rrf	??___fltol+1,f
  5281     1DFE  0CA4               	rrf	??___fltol,f
  5282     1DFF                     u3300:
  5283     1DFF  3EFF               	addlw	-1
  5284     1E00  1D03               	skipz
  5285     1E01  2DFA               	goto	u3305
  5286     1E02  0824               	movf	??___fltol,w
  5287     1E03  00A8               	movwf	___fltol@sign1
  5288     1E04                     l2482:
  5289     1E04  17A2               	bsf	___fltol@f1+2,7
  5290     1E05                     l2484:
  5291     1E05  30FF               	movlw	255
  5292     1E06  05A0               	andwf	___fltol@f1,f
  5293     1E07  30FF               	movlw	255
  5294     1E08  05A1               	andwf	___fltol@f1+1,f
  5295     1E09  30FF               	movlw	255
  5296     1E0A  05A2               	andwf	___fltol@f1+2,f
  5297     1E0B  3000               	movlw	0
  5298     1E0C  05A3               	andwf	___fltol@f1+3,f
  5299     1E0D                     l2486:
  5300     1E0D  3096               	movlw	150
  5301     1E0E  02A9               	subwf	___fltol@exp1,f
  5302     1E0F                     l2488:
  5303     1E0F  1FA9               	btfss	___fltol@exp1,7
  5304     1E10  2E12               	goto	u3311
  5305     1E11  2E13               	goto	u3310
  5306     1E12                     u3311:
  5307     1E12  2E2B               	goto	l2498
  5308     1E13                     u3310:
  5309     1E13                     l2490:
  5310     1E13  0829               	movf	___fltol@exp1,w
  5311     1E14  3A80               	xorlw	128
  5312     1E15  3E97               	addlw	151
  5313     1E16  1803               	skipnc
  5314     1E17  2E19               	goto	u3321
  5315     1E18  2E1A               	goto	u3320
  5316     1E19                     u3321:
  5317     1E19  2E1B               	goto	l2496
  5318     1E1A                     u3320:
  5319     1E1A  2DE8               	goto	l2476
  5320     1E1B                     l2496:
  5321     1E1B  3001               	movlw	1
  5322     1E1C                     u3335:
  5323     1E1C  1003               	clrc
  5324     1E1D  0CA3               	rrf	___fltol@f1+3,f
  5325     1E1E  0CA2               	rrf	___fltol@f1+2,f
  5326     1E1F  0CA1               	rrf	___fltol@f1+1,f
  5327     1E20  0CA0               	rrf	___fltol@f1,f
  5328     1E21  3EFF               	addlw	-1
  5329     1E22  1D03               	skipz
  5330     1E23  2E1C               	goto	u3335
  5331     1E24  3001               	movlw	1
  5332     1E25  07A9               	addwf	___fltol@exp1,f
  5333     1E26  1D03               	btfss	3,2
  5334     1E27  2E29               	goto	u3341
  5335     1E28  2E2A               	goto	u3340
  5336     1E29                     u3341:
  5337     1E29  2E1B               	goto	l2496
  5338     1E2A                     u3340:
  5339     1E2A  2E42               	goto	l2506
  5340     1E2B                     l2498:
  5341     1E2B  3020               	movlw	32
  5342     1E2C  0229               	subwf	___fltol@exp1,w
  5343     1E2D  1C03               	skipc
  5344     1E2E  2E30               	goto	u3351
  5345     1E2F  2E31               	goto	u3350
  5346     1E30                     u3351:
  5347     1E30  2E3D               	goto	l458
  5348     1E31                     u3350:
  5349     1E31  2DE8               	goto	l2476
  5350     1E32                     l2504:
  5351     1E32  3001               	movlw	1
  5352     1E33  00A4               	movwf	??___fltol
  5353     1E34                     u3365:
  5354     1E34  1003               	clrc
  5355     1E35  0DA0               	rlf	___fltol@f1,f
  5356     1E36  0DA1               	rlf	___fltol@f1+1,f
  5357     1E37  0DA2               	rlf	___fltol@f1+2,f
  5358     1E38  0DA3               	rlf	___fltol@f1+3,f
  5359     1E39  0BA4               	decfsz	??___fltol,f
  5360     1E3A  2E34               	goto	u3365
  5361     1E3B  3001               	movlw	1
  5362     1E3C  02A9               	subwf	___fltol@exp1,f
  5363     1E3D                     l458:
  5364     1E3D  0829               	movf	___fltol@exp1,w
  5365     1E3E  1D03               	btfss	3,2
  5366     1E3F  2E41               	goto	u3371
  5367     1E40  2E42               	goto	u3370
  5368     1E41                     u3371:
  5369     1E41  2E32               	goto	l2504
  5370     1E42                     u3370:
  5371     1E42                     l2506:
  5372     1E42  0828               	movf	___fltol@sign1,w
  5373     1E43  1903               	btfsc	3,2
  5374     1E44  2E46               	goto	u3381
  5375     1E45  2E47               	goto	u3380
  5376     1E46                     u3381:
  5377     1E46  2E52               	goto	l461
  5378     1E47                     u3380:
  5379     1E47                     l2508:
  5380     1E47  09A0               	comf	___fltol@f1,f
  5381     1E48  09A1               	comf	___fltol@f1+1,f
  5382     1E49  09A2               	comf	___fltol@f1+2,f
  5383     1E4A  09A3               	comf	___fltol@f1+3,f
  5384     1E4B  0AA0               	incf	___fltol@f1,f
  5385     1E4C  1903               	skipnz
  5386     1E4D  0AA1               	incf	___fltol@f1+1,f
  5387     1E4E  1903               	skipnz
  5388     1E4F  0AA2               	incf	___fltol@f1+2,f
  5389     1E50  1903               	skipnz
  5390     1E51  0AA3               	incf	___fltol@f1+3,f
  5391     1E52                     l461:
  5392     1E52                     l451:
  5393     1E52  0008               	return
  5394     1E53                     __end_of___fltol:
  5395                           
  5396                           	psect	text17
  5397     1B58                     __ptext17:	
  5398 ;; *************** function ___flsub *****************
  5399 ;; Defined at:
  5400 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  a               4   40[BANK0 ] long 
  5403 ;;  b               4   44[BANK0 ] long 
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;		None
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  4   40[BANK0 ] long 
  5408 ;; Registers used:
  5409 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5415 ;;      Params:         0       8       0       0       0
  5416 ;;      Locals:         0       0       0       0       0
  5417 ;;      Temps:          0       0       0       0       0
  5418 ;;      Totals:         0       8       0       0       0
  5419 ;;Total ram usage:        8 bytes
  5420 ;; Hardware stack levels used: 1
  5421 ;; Hardware stack levels required when called: 4
  5422 ;; This function calls:
  5423 ;;		___fladd
  5424 ;; This function is called by:
  5425 ;;		_efgtoa
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429     1B58                     ___flsub:	
  5430                           ;psect for function ___flsub
  5431                           
  5432     1B58                     l3510:	
  5433                           ;incstack = 0
  5434 ;; hardware stack exceeded
  5435                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5436                           
  5437     1B58  3080               	movlw	128
  5438     1B59  1283               	bcf	3,5	;RP0=0, select bank0
  5439     1B5A  1303               	bcf	3,6	;RP1=0, select bank0
  5440     1B5B  06CB               	xorwf	___flsub@a+3,f
  5441     1B5C                     l3512:
  5442     1B5C  084F               	movf	___flsub@b+3,w
  5443     1B5D  00A3               	movwf	___fladd@b+3
  5444     1B5E  084E               	movf	___flsub@b+2,w
  5445     1B5F  00A2               	movwf	___fladd@b+2
  5446     1B60  084D               	movf	___flsub@b+1,w
  5447     1B61  00A1               	movwf	___fladd@b+1
  5448     1B62  084C               	movf	___flsub@b,w
  5449     1B63  00A0               	movwf	___fladd@b
  5450     1B64  084B               	movf	___flsub@a+3,w
  5451     1B65  00A7               	movwf	___fladd@a+3
  5452     1B66  084A               	movf	___flsub@a+2,w
  5453     1B67  00A6               	movwf	___fladd@a+2
  5454     1B68  0849               	movf	___flsub@a+1,w
  5455     1B69  00A5               	movwf	___fladd@a+1
  5456     1B6A  0848               	movf	___flsub@a,w
  5457     1B6B  00A4               	movwf	___fladd@a
  5458     1B6C  160A  118A  25B0  160A  158A  	fcall	___fladd
  5459     1B71  1283               	bcf	3,5	;RP0=0, select bank0
  5460     1B72  1303               	bcf	3,6	;RP1=0, select bank0
  5461     1B73  0823               	movf	?___fladd+3,w
  5462     1B74  00CB               	movwf	?___flsub+3
  5463     1B75  0822               	movf	?___fladd+2,w
  5464     1B76  00CA               	movwf	?___flsub+2
  5465     1B77  0821               	movf	?___fladd+1,w
  5466     1B78  00C9               	movwf	?___flsub+1
  5467     1B79  0820               	movf	?___fladd,w
  5468     1B7A  00C8               	movwf	?___flsub
  5469     1B7B                     l604:
  5470     1B7B  0008               	return
  5471     1B7C                     __end_of___flsub:
  5472                           
  5473                           	psect	text18
  5474     15B0                     __ptext18:	
  5475 ;; *************** function ___fladd *****************
  5476 ;; Defined at:
  5477 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  b               4    0[BANK0 ] long 
  5480 ;;  a               4    4[BANK0 ] long 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  grs             1   19[BANK0 ] unsigned char 
  5483 ;;  bexp            1   18[BANK0 ] unsigned char 
  5484 ;;  aexp            1   17[BANK0 ] unsigned char 
  5485 ;;  signs           1   16[BANK0 ] unsigned char 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  4    0[BANK0 ] unsigned char 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2, status,0, btemp+1
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5495 ;;      Params:         0       8       0       0       0
  5496 ;;      Locals:         0       4       0       0       0
  5497 ;;      Temps:          0       8       0       0       0
  5498 ;;      Totals:         0      20       0       0       0
  5499 ;;Total ram usage:       20 bytes
  5500 ;; Hardware stack levels used: 1
  5501 ;; Hardware stack levels required when called: 3
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		___flsub
  5506 ;;		_efgtoa
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510     15B0                     ___fladd:	
  5511                           ;psect for function ___fladd
  5512                           
  5513     15B0                     l2200:	
  5514                           ;incstack = 0
  5515 ;; hardware stack exceeded
  5516                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5517                           
  5518     15B0  1283               	bcf	3,5	;RP0=0, select bank0
  5519     15B1  1303               	bcf	3,6	;RP1=0, select bank0
  5520     15B2  0823               	movf	___fladd@b+3,w
  5521     15B3  00B0               	movwf	___fladd@signs
  5522     15B4                     l2202:
  5523     15B4  3080               	movlw	128
  5524     15B5  05B0               	andwf	___fladd@signs,f
  5525     15B6                     l2204:
  5526     15B6  0823               	movf	___fladd@b+3,w
  5527     15B7  00A8               	movwf	??___fladd
  5528     15B8  0728               	addwf	??___fladd,w
  5529     15B9  00B2               	movwf	___fladd@bexp
  5530     15BA                     l2206:
  5531     15BA  1FA2               	btfss	___fladd@b+2,7
  5532     15BB  2DBD               	goto	u2641
  5533     15BC  2DBE               	goto	u2640
  5534     15BD                     u2641:
  5535     15BD  2DBF               	goto	l2210
  5536     15BE                     u2640:
  5537     15BE                     l2208:
  5538     15BE  1432               	bsf	___fladd@bexp,0
  5539     15BF                     l2210:
  5540     15BF  0832               	movf	___fladd@bexp,w
  5541     15C0  1903               	btfsc	3,2
  5542     15C1  2DC3               	goto	u2651
  5543     15C2  2DC4               	goto	u2650
  5544     15C3                     u2651:
  5545     15C3  2DD4               	goto	l2220
  5546     15C4                     u2650:
  5547     15C4                     l2212:
  5548     15C4  0A32               	incf	___fladd@bexp,w
  5549     15C5  1D03               	btfss	3,2
  5550     15C6  2DC8               	goto	u2661
  5551     15C7  2DC9               	goto	u2660
  5552     15C8                     u2661:
  5553     15C8  2DD1               	goto	l2216
  5554     15C9                     u2660:
  5555     15C9                     l2214:
  5556     15C9  3000               	movlw	0
  5557     15CA  00A3               	movwf	___fladd@b+3
  5558     15CB  3000               	movlw	0
  5559     15CC  00A2               	movwf	___fladd@b+2
  5560     15CD  3000               	movlw	0
  5561     15CE  00A1               	movwf	___fladd@b+1
  5562     15CF  3000               	movlw	0
  5563     15D0  00A0               	movwf	___fladd@b
  5564     15D1                     l2216:
  5565     15D1  17A2               	bsf	___fladd@b+2,7
  5566     15D2                     l2218:
  5567     15D2  01A3               	clrf	___fladd@b+3
  5568     15D3  2DDC               	goto	l553
  5569     15D4                     l2220:
  5570     15D4  3000               	movlw	0
  5571     15D5  00A3               	movwf	___fladd@b+3
  5572     15D6  3000               	movlw	0
  5573     15D7  00A2               	movwf	___fladd@b+2
  5574     15D8  3000               	movlw	0
  5575     15D9  00A1               	movwf	___fladd@b+1
  5576     15DA  3000               	movlw	0
  5577     15DB  00A0               	movwf	___fladd@b
  5578     15DC                     l553:
  5579     15DC  0827               	movf	___fladd@a+3,w
  5580     15DD  00B1               	movwf	___fladd@aexp
  5581     15DE                     l2222:
  5582     15DE  3080               	movlw	128
  5583     15DF  05B1               	andwf	___fladd@aexp,f
  5584     15E0                     l2224:
  5585     15E0  0831               	movf	___fladd@aexp,w
  5586     15E1  0630               	xorwf	___fladd@signs,w
  5587     15E2  1903               	skipnz
  5588     15E3  2DE5               	goto	u2671
  5589     15E4  2DE6               	goto	u2670
  5590     15E5                     u2671:
  5591     15E5  2DE7               	goto	l2228
  5592     15E6                     u2670:
  5593     15E6                     l2226:
  5594     15E6  1730               	bsf	___fladd@signs,6
  5595     15E7                     l2228:
  5596     15E7  0827               	movf	___fladd@a+3,w
  5597     15E8  00A8               	movwf	??___fladd
  5598     15E9  0728               	addwf	??___fladd,w
  5599     15EA  00B1               	movwf	___fladd@aexp
  5600     15EB                     l2230:
  5601     15EB  1FA6               	btfss	___fladd@a+2,7
  5602     15EC  2DEE               	goto	u2681
  5603     15ED  2DEF               	goto	u2680
  5604     15EE                     u2681:
  5605     15EE  2DF0               	goto	l2234
  5606     15EF                     u2680:
  5607     15EF                     l2232:
  5608     15EF  1431               	bsf	___fladd@aexp,0
  5609     15F0                     l2234:
  5610     15F0  0831               	movf	___fladd@aexp,w
  5611     15F1  1903               	btfsc	3,2
  5612     15F2  2DF4               	goto	u2691
  5613     15F3  2DF5               	goto	u2690
  5614     15F4                     u2691:
  5615     15F4  2E05               	goto	l2244
  5616     15F5                     u2690:
  5617     15F5                     l2236:
  5618     15F5  0A31               	incf	___fladd@aexp,w
  5619     15F6  1D03               	btfss	3,2
  5620     15F7  2DF9               	goto	u2701
  5621     15F8  2DFA               	goto	u2700
  5622     15F9                     u2701:
  5623     15F9  2E02               	goto	l2240
  5624     15FA                     u2700:
  5625     15FA                     l2238:
  5626     15FA  3000               	movlw	0
  5627     15FB  00A7               	movwf	___fladd@a+3
  5628     15FC  3000               	movlw	0
  5629     15FD  00A6               	movwf	___fladd@a+2
  5630     15FE  3000               	movlw	0
  5631     15FF  00A5               	movwf	___fladd@a+1
  5632     1600  3000               	movlw	0
  5633     1601  00A4               	movwf	___fladd@a
  5634     1602                     l2240:
  5635     1602  17A6               	bsf	___fladd@a+2,7
  5636     1603                     l2242:
  5637     1603  01A7               	clrf	___fladd@a+3
  5638     1604  2E0D               	goto	l558
  5639     1605                     l2244:
  5640     1605  3000               	movlw	0
  5641     1606  00A7               	movwf	___fladd@a+3
  5642     1607  3000               	movlw	0
  5643     1608  00A6               	movwf	___fladd@a+2
  5644     1609  3000               	movlw	0
  5645     160A  00A5               	movwf	___fladd@a+1
  5646     160B  3000               	movlw	0
  5647     160C  00A4               	movwf	___fladd@a
  5648     160D                     l558:
  5649     160D  0832               	movf	___fladd@bexp,w
  5650     160E  0231               	subwf	___fladd@aexp,w
  5651     160F  1803               	skipnc
  5652     1610  2E12               	goto	u2711
  5653     1611  2E13               	goto	u2710
  5654     1612                     u2711:
  5655     1612  2E37               	goto	l2280
  5656     1613                     u2710:
  5657     1613                     l2246:
  5658     1613  1F30               	btfss	___fladd@signs,6
  5659     1614  2E16               	goto	u2721
  5660     1615  2E17               	goto	u2720
  5661     1616                     u2721:
  5662     1616  2E19               	goto	l2250
  5663     1617                     u2720:
  5664     1617                     l2248:
  5665     1617  3080               	movlw	128
  5666     1618  06B0               	xorwf	___fladd@signs,f
  5667     1619                     l2250:
  5668     1619  0832               	movf	___fladd@bexp,w
  5669     161A  00B3               	movwf	___fladd@grs
  5670     161B                     l2252:
  5671     161B  0831               	movf	___fladd@aexp,w
  5672     161C  00B2               	movwf	___fladd@bexp
  5673     161D                     l2254:
  5674     161D  0833               	movf	___fladd@grs,w
  5675     161E  00B1               	movwf	___fladd@aexp
  5676     161F                     l2256:
  5677     161F  0820               	movf	___fladd@b,w
  5678     1620  00B3               	movwf	___fladd@grs
  5679     1621                     l2258:
  5680     1621  0824               	movf	___fladd@a,w
  5681     1622  00A0               	movwf	___fladd@b
  5682     1623                     l2260:
  5683     1623  0833               	movf	___fladd@grs,w
  5684     1624  00A4               	movwf	___fladd@a
  5685     1625                     l2262:
  5686     1625  0821               	movf	___fladd@b+1,w
  5687     1626  00B3               	movwf	___fladd@grs
  5688     1627                     l2264:
  5689     1627  0825               	movf	___fladd@a+1,w
  5690     1628  00A1               	movwf	___fladd@b+1
  5691     1629                     l2266:
  5692     1629  0833               	movf	___fladd@grs,w
  5693     162A  00A5               	movwf	___fladd@a+1
  5694     162B                     l2268:
  5695     162B  0822               	movf	___fladd@b+2,w
  5696     162C  00B3               	movwf	___fladd@grs
  5697     162D                     l2270:
  5698     162D  0826               	movf	___fladd@a+2,w
  5699     162E  00A2               	movwf	___fladd@b+2
  5700     162F                     l2272:
  5701     162F  0833               	movf	___fladd@grs,w
  5702     1630  00A6               	movwf	___fladd@a+2
  5703     1631                     l2274:
  5704     1631  0823               	movf	___fladd@b+3,w
  5705     1632  00B3               	movwf	___fladd@grs
  5706     1633                     l2276:
  5707     1633  0827               	movf	___fladd@a+3,w
  5708     1634  00A3               	movwf	___fladd@b+3
  5709     1635                     l2278:
  5710     1635  0833               	movf	___fladd@grs,w
  5711     1636  00A7               	movwf	___fladd@a+3
  5712     1637                     l2280:
  5713     1637  01B3               	clrf	___fladd@grs
  5714     1638                     l2282:
  5715     1638  0831               	movf	___fladd@aexp,w
  5716     1639  00A8               	movwf	??___fladd
  5717     163A  01A9               	clrf	??___fladd+1
  5718     163B  0829               	movf	??___fladd+1,w
  5719     163C  00AB               	movwf	??___fladd+3
  5720     163D  0832               	movf	___fladd@bexp,w
  5721     163E  0228               	subwf	??___fladd,w
  5722     163F  00AA               	movwf	??___fladd+2
  5723     1640  1C03               	skipc
  5724     1641  03AB               	decf	??___fladd+3,f
  5725     1642  082B               	movf	??___fladd+3,w
  5726     1643  3A80               	xorlw	128
  5727     1644  00FF               	movwf	btemp+1
  5728     1645  3080               	movlw	128
  5729     1646  027F               	subwf	btemp+1,w
  5730     1647  1D03               	skipz
  5731     1648  2E4B               	goto	u2735
  5732     1649  301A               	movlw	26
  5733     164A  022A               	subwf	??___fladd+2,w
  5734     164B                     u2735:
  5735     164B  1C03               	skipc
  5736     164C  2E4E               	goto	u2731
  5737     164D  2E4F               	goto	u2730
  5738     164E                     u2731:
  5739     164E  2E84               	goto	l2298
  5740     164F                     u2730:
  5741     164F                     l2284:
  5742     164F  1283               	bcf	3,5	;RP0=0, select bank0
  5743     1650  1303               	bcf	3,6	;RP1=0, select bank0
  5744     1651  0823               	movf	___fladd@b+3,w
  5745     1652  0422               	iorwf	___fladd@b+2,w
  5746     1653  0421               	iorwf	___fladd@b+1,w
  5747     1654  0420               	iorwf	___fladd@b,w
  5748     1655  1D03               	skipz
  5749     1656  2E58               	goto	u2741
  5750     1657  2E5A               	goto	u2740
  5751     1658                     u2741:
  5752     1658  3001               	movlw	1
  5753     1659  2E5B               	goto	u2750
  5754     165A                     u2740:
  5755     165A  3000               	movlw	0
  5756     165B                     u2750:
  5757     165B  00B3               	movwf	___fladd@grs
  5758     165C  3000               	movlw	0
  5759     165D  00A3               	movwf	___fladd@b+3
  5760     165E  3000               	movlw	0
  5761     165F  00A2               	movwf	___fladd@b+2
  5762     1660  3000               	movlw	0
  5763     1661  00A1               	movwf	___fladd@b+1
  5764     1662  3000               	movlw	0
  5765     1663  00A0               	movwf	___fladd@b
  5766     1664  0831               	movf	___fladd@aexp,w
  5767     1665  00B2               	movwf	___fladd@bexp
  5768     1666  2E8C               	goto	l562
  5769     1667                     l564:
  5770     1667  1C33               	btfss	___fladd@grs,0
  5771     1668  2E6A               	goto	u2761
  5772     1669  2E6B               	goto	u2760
  5773     166A                     u2761:
  5774     166A  2E72               	goto	l2288
  5775     166B                     u2760:
  5776     166B                     l2286:
  5777     166B  0833               	movf	___fladd@grs,w
  5778     166C  00A8               	movwf	??___fladd
  5779     166D  1003               	clrc
  5780     166E  0C28               	rrf	??___fladd,w
  5781     166F  3801               	iorlw	1
  5782     1670  00B3               	movwf	___fladd@grs
  5783     1671  2E74               	goto	l2290
  5784     1672                     l2288:
  5785     1672  1003               	clrc
  5786     1673  0CB3               	rrf	___fladd@grs,f
  5787     1674                     l2290:
  5788     1674  1C20               	btfss	___fladd@b,0
  5789     1675  2E77               	goto	u2771
  5790     1676  2E78               	goto	u2770
  5791     1677                     u2771:
  5792     1677  2E79               	goto	l2294
  5793     1678                     u2770:
  5794     1678                     l2292:
  5795     1678  17B3               	bsf	___fladd@grs,7
  5796     1679                     l2294:
  5797     1679  3001               	movlw	1
  5798     167A  00A8               	movwf	??___fladd
  5799     167B                     u2785:
  5800     167B  0D23               	rlf	___fladd@b+3,w
  5801     167C  0CA3               	rrf	___fladd@b+3,f
  5802     167D  0CA2               	rrf	___fladd@b+2,f
  5803     167E  0CA1               	rrf	___fladd@b+1,f
  5804     167F  0CA0               	rrf	___fladd@b,f
  5805     1680  0BA8               	decfsz	??___fladd& (0+127),f
  5806     1681  2E7B               	goto	u2785
  5807     1682                     l2296:
  5808     1682  3001               	movlw	1
  5809     1683  07B2               	addwf	___fladd@bexp,f
  5810     1684                     l2298:
  5811     1684  1283               	bcf	3,5	;RP0=0, select bank0
  5812     1685  1303               	bcf	3,6	;RP1=0, select bank0
  5813     1686  0831               	movf	___fladd@aexp,w
  5814     1687  0232               	subwf	___fladd@bexp,w
  5815     1688  1C03               	skipc
  5816     1689  2E8B               	goto	u2791
  5817     168A  2E8C               	goto	u2790
  5818     168B                     u2791:
  5819     168B  2E67               	goto	l564
  5820     168C                     u2790:
  5821     168C                     l562:
  5822     168C  1B30               	btfsc	___fladd@signs,6
  5823     168D  2E8F               	goto	u2801
  5824     168E  2E90               	goto	u2800
  5825     168F                     u2801:
  5826     168F  2ED7               	goto	l2324
  5827     1690                     u2800:
  5828     1690                     l2300:
  5829     1690  0832               	movf	___fladd@bexp,w
  5830     1691  1D03               	btfss	3,2
  5831     1692  2E94               	goto	u2811
  5832     1693  2E95               	goto	u2810
  5833     1694                     u2811:
  5834     1694  2E9E               	goto	l2306
  5835     1695                     u2810:
  5836     1695                     l2302:
  5837     1695  3000               	movlw	0
  5838     1696  00A3               	movwf	?___fladd+3
  5839     1697  3000               	movlw	0
  5840     1698  00A2               	movwf	?___fladd+2
  5841     1699  3000               	movlw	0
  5842     169A  00A1               	movwf	?___fladd+1
  5843     169B  3000               	movlw	0
  5844     169C  00A0               	movwf	?___fladd
  5845     169D  2FFF               	goto	l571
  5846     169E                     l2306:
  5847     169E  0824               	movf	___fladd@a,w
  5848     169F  07A0               	addwf	___fladd@b,f
  5849     16A0  0825               	movf	___fladd@a+1,w
  5850     16A1  1103               	clrz
  5851     16A2  1803               	skipnc
  5852     16A3  3E01               	addlw	1
  5853     16A4  1903               	skipnz
  5854     16A5  2EA7               	goto	u2821
  5855     16A6  07A1               	addwf	___fladd@b+1,f
  5856     16A7                     u2821:
  5857     16A7  0826               	movf	___fladd@a+2,w
  5858     16A8  1103               	clrz
  5859     16A9  1803               	skipnc
  5860     16AA  3E01               	addlw	1
  5861     16AB  1903               	skipnz
  5862     16AC  2EAE               	goto	u2822
  5863     16AD  07A2               	addwf	___fladd@b+2,f
  5864     16AE                     u2822:
  5865     16AE  0827               	movf	___fladd@a+3,w
  5866     16AF  1103               	clrz
  5867     16B0  1803               	skipnc
  5868     16B1  3E01               	addlw	1
  5869     16B2  1903               	skipnz
  5870     16B3  2EB5               	goto	u2823
  5871     16B4  07A3               	addwf	___fladd@b+3,f
  5872     16B5                     u2823:
  5873     16B5                     l2308:
  5874     16B5  1C23               	btfss	___fladd@b+3,0
  5875     16B6  2EB8               	goto	u2831
  5876     16B7  2EB9               	goto	u2830
  5877     16B8                     u2831:
  5878     16B8  2F8B               	goto	l2360
  5879     16B9                     u2830:
  5880     16B9                     l2310:
  5881     16B9  1C33               	btfss	___fladd@grs,0
  5882     16BA  2EBC               	goto	u2841
  5883     16BB  2EBD               	goto	u2840
  5884     16BC                     u2841:
  5885     16BC  2EC4               	goto	l2314
  5886     16BD                     u2840:
  5887     16BD                     l2312:
  5888     16BD  0833               	movf	___fladd@grs,w
  5889     16BE  00A8               	movwf	??___fladd
  5890     16BF  1003               	clrc
  5891     16C0  0C28               	rrf	??___fladd,w
  5892     16C1  3801               	iorlw	1
  5893     16C2  00B3               	movwf	___fladd@grs
  5894     16C3  2EC6               	goto	l2316
  5895     16C4                     l2314:
  5896     16C4  1003               	clrc
  5897     16C5  0CB3               	rrf	___fladd@grs,f
  5898     16C6                     l2316:
  5899     16C6  1C20               	btfss	___fladd@b,0
  5900     16C7  2EC9               	goto	u2851
  5901     16C8  2ECA               	goto	u2850
  5902     16C9                     u2851:
  5903     16C9  2ECB               	goto	l2320
  5904     16CA                     u2850:
  5905     16CA                     l2318:
  5906     16CA  17B3               	bsf	___fladd@grs,7
  5907     16CB                     l2320:
  5908     16CB  3001               	movlw	1
  5909     16CC  00A8               	movwf	??___fladd
  5910     16CD                     u2865:
  5911     16CD  0D23               	rlf	___fladd@b+3,w
  5912     16CE  0CA3               	rrf	___fladd@b+3,f
  5913     16CF  0CA2               	rrf	___fladd@b+2,f
  5914     16D0  0CA1               	rrf	___fladd@b+1,f
  5915     16D1  0CA0               	rrf	___fladd@b,f
  5916     16D2  0BA8               	decfsz	??___fladd& (0+127),f
  5917     16D3  2ECD               	goto	u2865
  5918     16D4                     l2322:
  5919     16D4  3001               	movlw	1
  5920     16D5  07B2               	addwf	___fladd@bexp,f
  5921     16D6  2F8B               	goto	l2360
  5922     16D7                     l2324:
  5923     16D7  0823               	movf	___fladd@b+3,w
  5924     16D8  3A80               	xorlw	128
  5925     16D9  00FF               	movwf	btemp+1
  5926     16DA  0827               	movf	___fladd@a+3,w
  5927     16DB  3A80               	xorlw	128
  5928     16DC  027F               	subwf	btemp+1,w
  5929     16DD  1D03               	skipz
  5930     16DE  2EE9               	goto	u2873
  5931     16DF  0826               	movf	___fladd@a+2,w
  5932     16E0  0222               	subwf	___fladd@b+2,w
  5933     16E1  1D03               	skipz
  5934     16E2  2EE9               	goto	u2873
  5935     16E3  0825               	movf	___fladd@a+1,w
  5936     16E4  0221               	subwf	___fladd@b+1,w
  5937     16E5  1D03               	skipz
  5938     16E6  2EE9               	goto	u2873
  5939     16E7  0824               	movf	___fladd@a,w
  5940     16E8  0220               	subwf	___fladd@b,w
  5941     16E9                     u2873:
  5942     16E9  1803               	skipnc
  5943     16EA  2EEC               	goto	u2871
  5944     16EB  2EED               	goto	u2870
  5945     16EC                     u2871:
  5946     16EC  2F44               	goto	l2336
  5947     16ED                     u2870:
  5948     16ED                     l2326:
  5949     16ED  30FF               	movlw	255
  5950     16EE  00A8               	movwf	??___fladd
  5951     16EF  30FF               	movlw	255
  5952     16F0  00A9               	movwf	??___fladd+1
  5953     16F1  30FF               	movlw	255
  5954     16F2  00AA               	movwf	??___fladd+2
  5955     16F3  30FF               	movlw	255
  5956     16F4  00AB               	movwf	??___fladd+3
  5957     16F5  0824               	movf	___fladd@a,w
  5958     16F6  00AC               	movwf	??___fladd+4
  5959     16F7  0825               	movf	___fladd@a+1,w
  5960     16F8  00AD               	movwf	??___fladd+5
  5961     16F9  0826               	movf	___fladd@a+2,w
  5962     16FA  00AE               	movwf	??___fladd+6
  5963     16FB  0827               	movf	___fladd@a+3,w
  5964     16FC  00AF               	movwf	??___fladd+7
  5965     16FD  0820               	movf	___fladd@b,w
  5966     16FE  02AC               	subwf	??___fladd+4,f
  5967     16FF  0821               	movf	___fladd@b+1,w
  5968     1700  1C03               	skipc
  5969     1701  0F21               	incfsz	___fladd@b+1,w
  5970     1702  2F04               	goto	u2881
  5971     1703  2F05               	goto	u2882
  5972     1704                     u2881:
  5973     1704  02AD               	subwf	??___fladd+5,f
  5974     1705                     u2882:
  5975     1705  0822               	movf	___fladd@b+2,w
  5976     1706  1C03               	skipc
  5977     1707  0F22               	incfsz	___fladd@b+2,w
  5978     1708  2F0A               	goto	u2883
  5979     1709  2F0B               	goto	u2884
  5980     170A                     u2883:
  5981     170A  02AE               	subwf	??___fladd+6,f
  5982     170B                     u2884:
  5983     170B  0823               	movf	___fladd@b+3,w
  5984     170C  1C03               	skipc
  5985     170D  0F23               	incfsz	___fladd@b+3,w
  5986     170E  2F10               	goto	u2885
  5987     170F  2F11               	goto	u2886
  5988     1710                     u2885:
  5989     1710  02AF               	subwf	??___fladd+7,f
  5990     1711                     u2886:
  5991     1711  082C               	movf	??___fladd+4,w
  5992     1712  07A8               	addwf	??___fladd,f
  5993     1713  082D               	movf	??___fladd+5,w
  5994     1714  1803               	skipnc
  5995     1715  0F2D               	incfsz	??___fladd+5,w
  5996     1716  2F18               	goto	u2890
  5997     1717  2F19               	goto	u2891
  5998     1718                     u2890:
  5999     1718  07A9               	addwf	??___fladd+1,f
  6000     1719                     u2891:
  6001     1719  082E               	movf	??___fladd+6,w
  6002     171A  1803               	skipnc
  6003     171B  0F2E               	incfsz	??___fladd+6,w
  6004     171C  2F1E               	goto	u2892
  6005     171D  2F1F               	goto	u2893
  6006     171E                     u2892:
  6007     171E  07AA               	addwf	??___fladd+2,f
  6008     171F                     u2893:
  6009     171F  082F               	movf	??___fladd+7,w
  6010     1720  1803               	skipnc
  6011     1721  0A2F               	incf	??___fladd+7,w
  6012     1722  07AB               	addwf	??___fladd+3,f
  6013     1723  082B               	movf	??___fladd+3,w
  6014     1724  00A3               	movwf	___fladd@b+3
  6015     1725  082A               	movf	??___fladd+2,w
  6016     1726  00A2               	movwf	___fladd@b+2
  6017     1727  0829               	movf	??___fladd+1,w
  6018     1728  00A1               	movwf	___fladd@b+1
  6019     1729  0828               	movf	??___fladd,w
  6020     172A  00A0               	movwf	___fladd@b
  6021     172B                     l2328:
  6022     172B  3080               	movlw	128
  6023     172C  06B0               	xorwf	___fladd@signs,f
  6024     172D                     l2330:
  6025     172D  0333               	decf	___fladd@grs,w
  6026     172E  3AFF               	xorlw	255
  6027     172F  00B3               	movwf	___fladd@grs
  6028     1730                     l2332:
  6029     1730  0833               	movf	___fladd@grs,w
  6030     1731  1D03               	btfss	3,2
  6031     1732  2F34               	goto	u2901
  6032     1733  2F35               	goto	u2900
  6033     1734                     u2901:
  6034     1734  2F52               	goto	l579
  6035     1735                     u2900:
  6036     1735                     l2334:
  6037     1735  3001               	movlw	1
  6038     1736  07A0               	addwf	___fladd@b,f
  6039     1737  3000               	movlw	0
  6040     1738  1803               	skipnc
  6041     1739  3001               	movlw	1
  6042     173A  07A1               	addwf	___fladd@b+1,f
  6043     173B  3000               	movlw	0
  6044     173C  1803               	skipnc
  6045     173D  3001               	movlw	1
  6046     173E  07A2               	addwf	___fladd@b+2,f
  6047     173F  3000               	movlw	0
  6048     1740  1803               	skipnc
  6049     1741  3001               	movlw	1
  6050     1742  07A3               	addwf	___fladd@b+3,f
  6051     1743  2F52               	goto	l579
  6052     1744                     l2336:
  6053     1744  0824               	movf	___fladd@a,w
  6054     1745  02A0               	subwf	___fladd@b,f
  6055     1746  0825               	movf	___fladd@a+1,w
  6056     1747  1C03               	skipc
  6057     1748  0F25               	incfsz	___fladd@a+1,w
  6058     1749  02A1               	subwf	___fladd@b+1,f
  6059     174A  0826               	movf	___fladd@a+2,w
  6060     174B  1C03               	skipc
  6061     174C  0F26               	incfsz	___fladd@a+2,w
  6062     174D  02A2               	subwf	___fladd@b+2,f
  6063     174E  0827               	movf	___fladd@a+3,w
  6064     174F  1C03               	skipc
  6065     1750  0F27               	incfsz	___fladd@a+3,w
  6066     1751  02A3               	subwf	___fladd@b+3,f
  6067     1752                     l579:
  6068     1752  0823               	movf	___fladd@b+3,w
  6069     1753  0422               	iorwf	___fladd@b+2,w
  6070     1754  0421               	iorwf	___fladd@b+1,w
  6071     1755  0420               	iorwf	___fladd@b,w
  6072     1756  1D03               	skipz
  6073     1757  2F59               	goto	u2911
  6074     1758  2F5A               	goto	u2910
  6075     1759                     u2911:
  6076     1759  2F87               	goto	l2358
  6077     175A                     u2910:
  6078     175A                     l2338:
  6079     175A  0833               	movf	___fladd@grs,w
  6080     175B  1D03               	btfss	3,2
  6081     175C  2F5E               	goto	u2921
  6082     175D  2F5F               	goto	u2920
  6083     175E                     u2921:
  6084     175E  2F87               	goto	l2358
  6085     175F                     u2920:
  6086     175F                     l2340:
  6087     175F  3000               	movlw	0
  6088     1760  00A3               	movwf	?___fladd+3
  6089     1761  3000               	movlw	0
  6090     1762  00A2               	movwf	?___fladd+2
  6091     1763  3000               	movlw	0
  6092     1764  00A1               	movwf	?___fladd+1
  6093     1765  3000               	movlw	0
  6094     1766  00A0               	movwf	?___fladd
  6095     1767  2FFF               	goto	l571
  6096     1768                     l2344:
  6097     1768  3001               	movlw	1
  6098     1769  00A8               	movwf	??___fladd
  6099     176A                     u2935:
  6100     176A  1003               	clrc
  6101     176B  0DA0               	rlf	___fladd@b,f
  6102     176C  0DA1               	rlf	___fladd@b+1,f
  6103     176D  0DA2               	rlf	___fladd@b+2,f
  6104     176E  0DA3               	rlf	___fladd@b+3,f
  6105     176F  0BA8               	decfsz	??___fladd,f
  6106     1770  2F6A               	goto	u2935
  6107     1771                     l2346:
  6108     1771  1FB3               	btfss	___fladd@grs,7
  6109     1772  2F74               	goto	u2941
  6110     1773  2F75               	goto	u2940
  6111     1774                     u2941:
  6112     1774  2F76               	goto	l583
  6113     1775                     u2940:
  6114     1775                     l2348:
  6115     1775  1420               	bsf	___fladd@b,0
  6116     1776                     l583:
  6117     1776  1C33               	btfss	___fladd@grs,0
  6118     1777  2F79               	goto	u2951
  6119     1778  2F7A               	goto	u2950
  6120     1779                     u2951:
  6121     1779  2F7E               	goto	l2352
  6122     177A                     u2950:
  6123     177A                     l2350:
  6124     177A  1403               	setc
  6125     177B  0D33               	rlf	___fladd@grs,w
  6126     177C  00B3               	movwf	___fladd@grs
  6127     177D  2F80               	goto	l2354
  6128     177E                     l2352:
  6129     177E  1003               	clrc
  6130     177F  0DB3               	rlf	___fladd@grs,f
  6131     1780                     l2354:
  6132     1780  0832               	movf	___fladd@bexp,w
  6133     1781  1903               	btfsc	3,2
  6134     1782  2F84               	goto	u2961
  6135     1783  2F85               	goto	u2960
  6136     1784                     u2961:
  6137     1784  2F87               	goto	l2358
  6138     1785                     u2960:
  6139     1785                     l2356:
  6140     1785  3001               	movlw	1
  6141     1786  02B2               	subwf	___fladd@bexp,f
  6142     1787                     l2358:
  6143     1787  1FA2               	btfss	___fladd@b+2,7
  6144     1788  2F8A               	goto	u2971
  6145     1789  2F8B               	goto	u2970
  6146     178A                     u2971:
  6147     178A  2F68               	goto	l2344
  6148     178B                     u2970:
  6149     178B                     l2360:
  6150     178B  01B1               	clrf	___fladd@aexp
  6151     178C                     l2362:
  6152     178C  1FB3               	btfss	___fladd@grs,7
  6153     178D  2F8F               	goto	u2981
  6154     178E  2F90               	goto	u2980
  6155     178F                     u2981:
  6156     178F  2F9E               	goto	l2370
  6157     1790                     u2980:
  6158     1790                     l2364:
  6159     1790  0833               	movf	___fladd@grs,w
  6160     1791  397F               	andlw	127
  6161     1792  1903               	btfsc	3,2
  6162     1793  2F95               	goto	u2991
  6163     1794  2F96               	goto	u2990
  6164     1795                     u2991:
  6165     1795  2F99               	goto	l589
  6166     1796                     u2990:
  6167     1796                     l2366:
  6168     1796  3001               	movlw	1
  6169     1797  00B1               	movwf	___fladd@aexp
  6170     1798  2F9E               	goto	l2370
  6171     1799                     l589:
  6172     1799  1C20               	btfss	___fladd@b,0
  6173     179A  2F9C               	goto	u3001
  6174     179B  2F9D               	goto	u3000
  6175     179C                     u3001:
  6176     179C  2F9E               	goto	l2370
  6177     179D                     u3000:
  6178     179D  2F96               	goto	l2366
  6179     179E                     l2370:
  6180     179E  0831               	movf	___fladd@aexp,w
  6181     179F  1903               	btfsc	3,2
  6182     17A0  2FA2               	goto	u3011
  6183     17A1  2FA3               	goto	u3010
  6184     17A2                     u3011:
  6185     17A2  2FD5               	goto	l592
  6186     17A3                     u3010:
  6187     17A3                     l2372:
  6188     17A3  3001               	movlw	1
  6189     17A4  07A0               	addwf	___fladd@b,f
  6190     17A5  3000               	movlw	0
  6191     17A6  1803               	skipnc
  6192     17A7  3001               	movlw	1
  6193     17A8  07A1               	addwf	___fladd@b+1,f
  6194     17A9  3000               	movlw	0
  6195     17AA  1803               	skipnc
  6196     17AB  3001               	movlw	1
  6197     17AC  07A2               	addwf	___fladd@b+2,f
  6198     17AD  3000               	movlw	0
  6199     17AE  1803               	skipnc
  6200     17AF  3001               	movlw	1
  6201     17B0  07A3               	addwf	___fladd@b+3,f
  6202     17B1                     l2374:
  6203     17B1  1C23               	btfss	___fladd@b+3,0
  6204     17B2  2FB4               	goto	u3021
  6205     17B3  2FB5               	goto	u3020
  6206     17B4                     u3021:
  6207     17B4  2FD5               	goto	l592
  6208     17B5                     u3020:
  6209     17B5                     l2376:
  6210     17B5  0820               	movf	___fladd@b,w
  6211     17B6  00A8               	movwf	??___fladd
  6212     17B7  0821               	movf	___fladd@b+1,w
  6213     17B8  00A9               	movwf	??___fladd+1
  6214     17B9  0822               	movf	___fladd@b+2,w
  6215     17BA  00AA               	movwf	??___fladd+2
  6216     17BB  0823               	movf	___fladd@b+3,w
  6217     17BC  00AB               	movwf	??___fladd+3
  6218     17BD  3001               	movlw	1
  6219     17BE  00AC               	movwf	??___fladd+4
  6220     17BF                     u3035:
  6221     17BF  0D2B               	rlf	??___fladd+3,w
  6222     17C0  0CAB               	rrf	??___fladd+3,f
  6223     17C1  0CAA               	rrf	??___fladd+2,f
  6224     17C2  0CA9               	rrf	??___fladd+1,f
  6225     17C3  0CA8               	rrf	??___fladd,f
  6226     17C4                     u3030:
  6227     17C4  0BAC               	decfsz	??___fladd+4,f
  6228     17C5  2FBF               	goto	u3035
  6229     17C6  082B               	movf	??___fladd+3,w
  6230     17C7  00A3               	movwf	___fladd@b+3
  6231     17C8  082A               	movf	??___fladd+2,w
  6232     17C9  00A2               	movwf	___fladd@b+2
  6233     17CA  0829               	movf	??___fladd+1,w
  6234     17CB  00A1               	movwf	___fladd@b+1
  6235     17CC  0828               	movf	??___fladd,w
  6236     17CD  00A0               	movwf	___fladd@b
  6237     17CE  0A32               	incf	___fladd@bexp,w
  6238     17CF  1903               	btfsc	3,2
  6239     17D0  2FD2               	goto	u3041
  6240     17D1  2FD3               	goto	u3040
  6241     17D2                     u3041:
  6242     17D2  2FD5               	goto	l592
  6243     17D3                     u3040:
  6244     17D3                     l2378:
  6245     17D3  3001               	movlw	1
  6246     17D4  07B2               	addwf	___fladd@bexp,f
  6247     17D5                     l592:
  6248     17D5  0A32               	incf	___fladd@bexp,w
  6249     17D6  1903               	btfsc	3,2
  6250     17D7  2FD9               	goto	u3051
  6251     17D8  2FDA               	goto	u3050
  6252     17D9                     u3051:
  6253     17D9  2FDF               	goto	l2382
  6254     17DA                     u3050:
  6255     17DA                     l2380:
  6256     17DA  0832               	movf	___fladd@bexp,w
  6257     17DB  1D03               	btfss	3,2
  6258     17DC  2FDE               	goto	u3061
  6259     17DD  2FDF               	goto	u3060
  6260     17DE                     u3061:
  6261     17DE  2FED               	goto	l2388
  6262     17DF                     u3060:
  6263     17DF                     l2382:
  6264     17DF  3000               	movlw	0
  6265     17E0  00A3               	movwf	___fladd@b+3
  6266     17E1  3000               	movlw	0
  6267     17E2  00A2               	movwf	___fladd@b+2
  6268     17E3  3000               	movlw	0
  6269     17E4  00A1               	movwf	___fladd@b+1
  6270     17E5  3000               	movlw	0
  6271     17E6  00A0               	movwf	___fladd@b
  6272     17E7                     l2384:
  6273     17E7  0832               	movf	___fladd@bexp,w
  6274     17E8  1D03               	btfss	3,2
  6275     17E9  2FEB               	goto	u3071
  6276     17EA  2FEC               	goto	u3070
  6277     17EB                     u3071:
  6278     17EB  2FED               	goto	l2388
  6279     17EC                     u3070:
  6280     17EC                     l2386:
  6281     17EC  01B0               	clrf	___fladd@signs
  6282     17ED                     l2388:
  6283     17ED  1C32               	btfss	___fladd@bexp,0
  6284     17EE  2FF0               	goto	u3081
  6285     17EF  2FF1               	goto	u3080
  6286     17F0                     u3081:
  6287     17F0  2FF3               	goto	l2392
  6288     17F1                     u3080:
  6289     17F1                     l2390:
  6290     17F1  17A2               	bsf	___fladd@b+2,7
  6291     17F2  2FF5               	goto	l600
  6292     17F3                     l2392:
  6293     17F3  307F               	movlw	127
  6294     17F4  05A2               	andwf	___fladd@b+2,f
  6295     17F5                     l600:
  6296     17F5  0832               	movf	___fladd@bexp,w
  6297     17F6  00A8               	movwf	??___fladd
  6298     17F7  1003               	clrc
  6299     17F8  0C28               	rrf	??___fladd,w
  6300     17F9  00A3               	movwf	___fladd@b+3
  6301     17FA                     l2394:
  6302     17FA  1FB0               	btfss	___fladd@signs,7
  6303     17FB  2FFD               	goto	u3091
  6304     17FC  2FFE               	goto	u3090
  6305     17FD                     u3091:
  6306     17FD  2FFF               	goto	l601
  6307     17FE                     u3090:
  6308     17FE                     l2396:
  6309     17FE  17A3               	bsf	___fladd@b+3,7
  6310     17FF                     l601:
  6311     17FF                     l571:
  6312     17FF  0008               	return
  6313     1800                     __end_of___fladd:
  6314                           
  6315                           	psect	text19
  6316     0801                     __ptext19:	
  6317 ;; *************** function ___flneg *****************
  6318 ;; Defined at:
  6319 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;  f1              4    0[BANK0 ] unsigned char 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  4    0[BANK0 ] unsigned char 
  6326 ;; Registers used:
  6327 ;;		wreg
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6333 ;;      Params:         0       4       0       0       0
  6334 ;;      Locals:         0       0       0       0       0
  6335 ;;      Temps:          0       0       0       0       0
  6336 ;;      Totals:         0       4       0       0       0
  6337 ;;Total ram usage:        4 bytes
  6338 ;; Hardware stack levels used: 1
  6339 ;; Hardware stack levels required when called: 3
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_efgtoa
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347     0801                     ___flneg:	
  6348                           ;psect for function ___flneg
  6349                           
  6350     0801                     l3502:	
  6351                           ;incstack = 0
  6352                           ; Regs used in ___flneg: [wreg]
  6353                           
  6354     0801  1283               	bcf	3,5	;RP0=0, select bank0
  6355     0802  1303               	bcf	3,6	;RP1=0, select bank0
  6356     0803  0823               	movf	___flneg@f1+3,w
  6357     0804  0422               	iorwf	___flneg@f1+2,w
  6358     0805  0421               	iorwf	___flneg@f1+1,w
  6359     0806  0420               	iorwf	___flneg@f1,w
  6360     0807  1903               	skipnz
  6361     0808  280A               	goto	u5271
  6362     0809  280B               	goto	u5270
  6363     080A                     u5271:
  6364     080A  280D               	goto	l3506
  6365     080B                     u5270:
  6366     080B                     l3504:
  6367     080B  3080               	movlw	128
  6368     080C  06A3               	xorwf	___flneg@f1+3,f
  6369     080D                     l3506:
  6370     080D                     l447:
  6371     080D  0008               	return
  6372     080E                     __end_of___flneg:
  6373                           
  6374                           	psect	text20
  6375     1CE3                     __ptext20:	
  6376 ;; *************** function ___fleq *****************
  6377 ;; Defined at:
  6378 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  ff1             4    0[BANK0 ] unsigned char 
  6381 ;;  ff2             4    4[BANK0 ] unsigned char 
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;		None
  6384 ;; Return value:  Size  Location     Type
  6385 ;;		None               void
  6386 ;; Registers used:
  6387 ;;		wreg, status,2, status,0
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6393 ;;      Params:         0       8       0       0       0
  6394 ;;      Locals:         0       0       0       0       0
  6395 ;;      Temps:          0       4       0       0       0
  6396 ;;      Totals:         0      12       0       0       0
  6397 ;;Total ram usage:       12 bytes
  6398 ;; Hardware stack levels used: 1
  6399 ;; Hardware stack levels required when called: 3
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		_efgtoa
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407     1CE3                     ___fleq:	
  6408                           ;psect for function ___fleq
  6409                           
  6410     1CE3                     l2434:	
  6411                           ;incstack = 0
  6412                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6413                           
  6414     1CE3  3000               	movlw	0
  6415     1CE4  1283               	bcf	3,5	;RP0=0, select bank0
  6416     1CE5  1303               	bcf	3,6	;RP1=0, select bank0
  6417     1CE6  0520               	andwf	___fleq@ff1,w
  6418     1CE7  00A8               	movwf	??___fleq
  6419     1CE8  3000               	movlw	0
  6420     1CE9  0521               	andwf	___fleq@ff1+1,w
  6421     1CEA  00A9               	movwf	??___fleq+1
  6422     1CEB  3080               	movlw	128
  6423     1CEC  0522               	andwf	___fleq@ff1+2,w
  6424     1CED  00AA               	movwf	??___fleq+2
  6425     1CEE  307F               	movlw	127
  6426     1CEF  0523               	andwf	___fleq@ff1+3,w
  6427     1CF0  00AB               	movwf	??___fleq+3
  6428     1CF1  082B               	movf	??___fleq+3,w
  6429     1CF2  042A               	iorwf	??___fleq+2,w
  6430     1CF3  0429               	iorwf	??___fleq+1,w
  6431     1CF4  0428               	iorwf	??___fleq,w
  6432     1CF5  1D03               	skipz
  6433     1CF6  2CF8               	goto	u3181
  6434     1CF7  2CF9               	goto	u3180
  6435     1CF8                     u3181:
  6436     1CF8  2D01               	goto	l426
  6437     1CF9                     u3180:
  6438     1CF9                     l2436:
  6439     1CF9  3000               	movlw	0
  6440     1CFA  00A3               	movwf	___fleq@ff1+3
  6441     1CFB  3000               	movlw	0
  6442     1CFC  00A2               	movwf	___fleq@ff1+2
  6443     1CFD  3000               	movlw	0
  6444     1CFE  00A1               	movwf	___fleq@ff1+1
  6445     1CFF  3000               	movlw	0
  6446     1D00  00A0               	movwf	___fleq@ff1
  6447     1D01                     l426:
  6448     1D01  3000               	movlw	0
  6449     1D02  0524               	andwf	___fleq@ff2,w
  6450     1D03  00A8               	movwf	??___fleq
  6451     1D04  3000               	movlw	0
  6452     1D05  0525               	andwf	___fleq@ff2+1,w
  6453     1D06  00A9               	movwf	??___fleq+1
  6454     1D07  3080               	movlw	128
  6455     1D08  0526               	andwf	___fleq@ff2+2,w
  6456     1D09  00AA               	movwf	??___fleq+2
  6457     1D0A  307F               	movlw	127
  6458     1D0B  0527               	andwf	___fleq@ff2+3,w
  6459     1D0C  00AB               	movwf	??___fleq+3
  6460     1D0D  082B               	movf	??___fleq+3,w
  6461     1D0E  042A               	iorwf	??___fleq+2,w
  6462     1D0F  0429               	iorwf	??___fleq+1,w
  6463     1D10  0428               	iorwf	??___fleq,w
  6464     1D11  1D03               	skipz
  6465     1D12  2D14               	goto	u3191
  6466     1D13  2D15               	goto	u3190
  6467     1D14                     u3191:
  6468     1D14  2D1D               	goto	l427
  6469     1D15                     u3190:
  6470     1D15                     l2438:
  6471     1D15  3000               	movlw	0
  6472     1D16  00A7               	movwf	___fleq@ff2+3
  6473     1D17  3000               	movlw	0
  6474     1D18  00A6               	movwf	___fleq@ff2+2
  6475     1D19  3000               	movlw	0
  6476     1D1A  00A5               	movwf	___fleq@ff2+1
  6477     1D1B  3000               	movlw	0
  6478     1D1C  00A4               	movwf	___fleq@ff2
  6479     1D1D                     l427:
  6480     1D1D  0827               	movf	___fleq@ff2+3,w
  6481     1D1E  0623               	xorwf	___fleq@ff1+3,w
  6482     1D1F  1D03               	skipz
  6483     1D20  2D2B               	goto	u3205
  6484     1D21  0826               	movf	___fleq@ff2+2,w
  6485     1D22  0622               	xorwf	___fleq@ff1+2,w
  6486     1D23  1D03               	skipz
  6487     1D24  2D2B               	goto	u3205
  6488     1D25  0825               	movf	___fleq@ff2+1,w
  6489     1D26  0621               	xorwf	___fleq@ff1+1,w
  6490     1D27  1D03               	skipz
  6491     1D28  2D2B               	goto	u3205
  6492     1D29  0824               	movf	___fleq@ff2,w
  6493     1D2A  0620               	xorwf	___fleq@ff1,w
  6494     1D2B                     u3205:
  6495     1D2B  1903               	skipnz
  6496     1D2C  2D2E               	goto	u3201
  6497     1D2D  2D2F               	goto	u3200
  6498     1D2E                     u3201:
  6499     1D2E  2D31               	goto	l2442
  6500     1D2F                     u3200:
  6501     1D2F                     l2440:
  6502     1D2F  1003               	clrc
  6503     1D30  2D32               	goto	l432
  6504     1D31                     l2442:
  6505     1D31  1403               	setc
  6506     1D32                     l432:
  6507     1D32  0008               	return
  6508     1D33                     __end_of___fleq:
  6509                           
  6510                           	psect	text21
  6511     1BC9                     __ptext21:	
  6512 ;; *************** function _UART_Write_String *****************
  6513 ;; Defined at:
  6514 ;;		line 53 in file "main.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;  str             2    1[BANK0 ] PTR const unsigned char 
  6517 ;;		 -> STR_11(5), STR_10(5), main@tempStr(20), STR_8(5), 
  6518 ;;		 -> STR_7(5), STR_6(18), STR_5(29), STR_4(33), 
  6519 ;;		 -> STR_3(26), STR_2(17), STR_1(16), 
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;		None
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  1    wreg      void 
  6524 ;; Registers used:
  6525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6531 ;;      Params:         0       2       0       0       0
  6532 ;;      Locals:         0       0       0       0       0
  6533 ;;      Temps:          0       0       0       0       0
  6534 ;;      Totals:         0       2       0       0       0
  6535 ;;Total ram usage:        2 bytes
  6536 ;; Hardware stack levels used: 1
  6537 ;; Hardware stack levels required when called: 4
  6538 ;; This function calls:
  6539 ;;		_UART_Write
  6540 ;; This function is called by:
  6541 ;;		_main
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545     1BC9                     _UART_Write_String:	
  6546                           ;psect for function _UART_Write_String
  6547                           
  6548     1BC9                     l3852:	
  6549                           ;incstack = 0
  6550                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6551                           
  6552                           
  6553                           ;main.c: 54:     while(*str) {
  6554     1BC9  2BE0               	goto	l3858
  6555     1BCA                     l3854:
  6556                           
  6557                           ;main.c: 55:         UART_Write(*str++);
  6558     1BCA  0822               	movf	UART_Write_String@str+1,w
  6559     1BCB  00FF               	movwf	btemp+1
  6560     1BCC  0821               	movf	UART_Write_String@str,w
  6561     1BCD  0084               	movwf	4
  6562     1BCE  160A  118A  2000  160A  158A  	fcall	stringtab
  6563     1BD3  160A  158A  2299  160A  158A  	fcall	_UART_Write
  6564     1BD8                     l3856:
  6565     1BD8  3001               	movlw	1
  6566     1BD9  1283               	bcf	3,5	;RP0=0, select bank0
  6567     1BDA  1303               	bcf	3,6	;RP1=0, select bank0
  6568     1BDB  07A1               	addwf	UART_Write_String@str,f
  6569     1BDC  1803               	skipnc
  6570     1BDD  0AA2               	incf	UART_Write_String@str+1,f
  6571     1BDE  3000               	movlw	0
  6572     1BDF  07A2               	addwf	UART_Write_String@str+1,f
  6573     1BE0                     l3858:
  6574                           
  6575                           ;main.c: 54:     while(*str) {
  6576     1BE0  1283               	bcf	3,5	;RP0=0, select bank0
  6577     1BE1  1303               	bcf	3,6	;RP1=0, select bank0
  6578     1BE2  0822               	movf	UART_Write_String@str+1,w
  6579     1BE3  00FF               	movwf	btemp+1
  6580     1BE4  0821               	movf	UART_Write_String@str,w
  6581     1BE5  0084               	movwf	4
  6582     1BE6  160A  118A  2000  160A  158A  	fcall	stringtab
  6583     1BEB  3A00               	xorlw	0
  6584     1BEC  1D03               	skipz
  6585     1BED  2BEF               	goto	u5751
  6586     1BEE  2BF0               	goto	u5750
  6587     1BEF                     u5751:
  6588     1BEF  2BCA               	goto	l3854
  6589     1BF0                     u5750:
  6590     1BF0                     l93:
  6591     1BF0  0008               	return
  6592     1BF1                     __end_of_UART_Write_String:
  6593                           
  6594                           	psect	text22
  6595     1A99                     __ptext22:	
  6596 ;; *************** function _UART_Write *****************
  6597 ;; Defined at:
  6598 ;;		line 47 in file "main.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;  data            1    wreg     unsigned char 
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;  data            1    0[BANK0 ] unsigned char 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  1    wreg      void 
  6605 ;; Registers used:
  6606 ;;		wreg
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6612 ;;      Params:         0       0       0       0       0
  6613 ;;      Locals:         0       1       0       0       0
  6614 ;;      Temps:          0       0       0       0       0
  6615 ;;      Totals:         0       1       0       0       0
  6616 ;;Total ram usage:        1 bytes
  6617 ;; Hardware stack levels used: 1
  6618 ;; Hardware stack levels required when called: 3
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_UART_Write_String
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626     1A99                     _UART_Write:	
  6627                           ;psect for function _UART_Write
  6628                           
  6629                           
  6630                           ;incstack = 0
  6631                           ; Regs used in _UART_Write: [wreg]
  6632                           ;UART_Write@data stored from wreg
  6633     1A99  1283               	bcf	3,5	;RP0=0, select bank0
  6634     1A9A  1303               	bcf	3,6	;RP1=0, select bank0
  6635     1A9B  00A0               	movwf	UART_Write@data
  6636     1A9C                     l3836:
  6637     1A9C                     l84:	
  6638                           ;main.c: 48:     while(!TXIF);
  6639                           
  6640     1A9C  1E0C               	btfss	12,4	;volatile
  6641     1A9D  2A9F               	goto	u5731
  6642     1A9E  2AA0               	goto	u5730
  6643     1A9F                     u5731:
  6644     1A9F  2A9C               	goto	l84
  6645     1AA0                     u5730:
  6646     1AA0                     l3838:
  6647                           
  6648                           ;main.c: 49:     TXREG = data;
  6649     1AA0  0820               	movf	UART_Write@data,w
  6650     1AA1  0099               	movwf	25	;volatile
  6651     1AA2                     l87:
  6652     1AA2  0008               	return
  6653     1AA3                     __end_of_UART_Write:
  6654                           
  6655                           	psect	text23
  6656     1AAF                     __ptext23:	
  6657 ;; *************** function _UART_Init *****************
  6658 ;; Defined at:
  6659 ;;		line 37 in file "main.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;		None
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;		None
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  1    wreg      void 
  6666 ;; Registers used:
  6667 ;;		None
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6673 ;;      Params:         0       0       0       0       0
  6674 ;;      Locals:         0       0       0       0       0
  6675 ;;      Temps:          0       0       0       0       0
  6676 ;;      Totals:         0       0       0       0       0
  6677 ;;Total ram usage:        0 bytes
  6678 ;; Hardware stack levels used: 1
  6679 ;; Hardware stack levels required when called: 3
  6680 ;; This function calls:
  6681 ;;		Nothing
  6682 ;; This function is called by:
  6683 ;;		_main
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687     1AAF                     _UART_Init:	
  6688                           ;psect for function _UART_Init
  6689                           
  6690     1AAF                     l3850:	
  6691                           ;incstack = 0
  6692                           ; Regs used in _UART_Init: []
  6693                           
  6694                           
  6695                           ;main.c: 38:     TRISC7 = 1;
  6696     1AAF  1683               	bsf	3,5	;RP0=1, select bank1
  6697     1AB0  1303               	bcf	3,6	;RP1=0, select bank1
  6698     1AB1  1787               	bsf	7,7	;volatile
  6699                           
  6700                           ;main.c: 39:     TRISC6 = 0;
  6701     1AB2  1307               	bcf	7,6	;volatile
  6702                           
  6703                           ;main.c: 41:     SPBRG = 31;
  6704     1AB3  301F               	movlw	31
  6705     1AB4  0099               	movwf	25	;volatile
  6706                           
  6707                           ;main.c: 42:     TXSTA = 0x24;
  6708     1AB5  3024               	movlw	36
  6709     1AB6  0098               	movwf	24	;volatile
  6710                           
  6711                           ;main.c: 43:     RCSTA = 0x90;
  6712     1AB7  3090               	movlw	144
  6713     1AB8  1283               	bcf	3,5	;RP0=0, select bank0
  6714     1AB9  1303               	bcf	3,6	;RP1=0, select bank0
  6715     1ABA  0098               	movwf	24	;volatile
  6716     1ABB                     l81:
  6717     1ABB  0008               	return
  6718     1ABC                     __end_of_UART_Init:
  6719                           
  6720                           	psect	text24
  6721     1ABC                     __ptext24:	
  6722 ;; *************** function _Toggle_Lock_State *****************
  6723 ;; Defined at:
  6724 ;;		line 126 in file "main.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;		None
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;		None
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  1    wreg      void 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6738 ;;      Params:         0       0       0       0       0
  6739 ;;      Locals:         0       0       0       0       0
  6740 ;;      Temps:          0       0       0       0       0
  6741 ;;      Totals:         0       0       0       0       0
  6742 ;;Total ram usage:        0 bytes
  6743 ;; Hardware stack levels used: 1
  6744 ;; Hardware stack levels required when called: 3
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_main
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752     1ABC                     _Toggle_Lock_State:	
  6753                           ;psect for function _Toggle_Lock_State
  6754                           
  6755     1ABC                     l3872:	
  6756                           ;incstack = 0
  6757                           ; Regs used in _Toggle_Lock_State: [wreg+status,2+status,0]
  6758                           
  6759                           
  6760                           ;main.c: 127:     if(currentState == CERRADO) {
  6761     1ABC  1683               	bsf	3,5	;RP0=1, select bank3
  6762     1ABD  1703               	bsf	3,6	;RP1=1, select bank3
  6763     1ABE  084C               	movf	_currentState^(0+384),w
  6764     1ABF  1D03               	btfss	3,2
  6765     1AC0  2AC2               	goto	u5771
  6766     1AC1  2AC3               	goto	u5770
  6767     1AC2                     u5771:
  6768     1AC2  2AC8               	goto	l3876
  6769     1AC3                     u5770:
  6770     1AC3                     l3874:
  6771                           
  6772                           ;main.c: 128:         currentState = ABIERTO;
  6773     1AC3  3001               	movlw	1
  6774     1AC4  00CC               	movwf	_currentState^(0+384)
  6775                           
  6776                           ;main.c: 129:         servo_needs_update = 1;
  6777     1AC5  3001               	movlw	1
  6778     1AC6  00CD               	movwf	_servo_needs_update^(0+384)	;volatile
  6779                           
  6780                           ;main.c: 130:     } else {
  6781     1AC7  2ACB               	goto	l128
  6782     1AC8                     l3876:
  6783                           
  6784                           ;main.c: 131:         currentState = CERRADO;
  6785     1AC8  01CC               	clrf	_currentState^(0+384)
  6786     1AC9                     l3878:
  6787                           
  6788                           ;main.c: 132:         servo_needs_update = 1;
  6789     1AC9  3001               	movlw	1
  6790     1ACA  00CD               	movwf	_servo_needs_update^(0+384)	;volatile
  6791     1ACB                     l128:
  6792     1ACB  0008               	return
  6793     1ACC                     __end_of_Toggle_Lock_State:
  6794                           
  6795                           	psect	text25
  6796     1A80                     __ptext25:	
  6797 ;; *************** function _Servo_Init *****************
  6798 ;; Defined at:
  6799 ;;		line 120 in file "main.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;		None
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;		None
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  1    wreg      void 
  6806 ;; Registers used:
  6807 ;;		None
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6813 ;;      Params:         0       0       0       0       0
  6814 ;;      Locals:         0       0       0       0       0
  6815 ;;      Temps:          0       0       0       0       0
  6816 ;;      Totals:         0       0       0       0       0
  6817 ;;Total ram usage:        0 bytes
  6818 ;; Hardware stack levels used: 1
  6819 ;; Hardware stack levels required when called: 3
  6820 ;; This function calls:
  6821 ;;		Nothing
  6822 ;; This function is called by:
  6823 ;;		_main
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827     1A80                     _Servo_Init:	
  6828                           ;psect for function _Servo_Init
  6829                           
  6830     1A80                     l3870:	
  6831                           ;incstack = 0
  6832                           ; Regs used in _Servo_Init: []
  6833                           
  6834                           
  6835                           ;main.c: 121:     TRISC2 = 0;
  6836     1A80  1683               	bsf	3,5	;RP0=1, select bank1
  6837     1A81  1303               	bcf	3,6	;RP1=0, select bank1
  6838     1A82  1107               	bcf	7,2	;volatile
  6839                           
  6840                           ;main.c: 122:     RC2 = 0;
  6841     1A83  1283               	bcf	3,5	;RP0=0, select bank0
  6842     1A84  1303               	bcf	3,6	;RP1=0, select bank0
  6843     1A85  1107               	bcf	7,2	;volatile
  6844     1A86                     l123:
  6845     1A86  0008               	return
  6846     1A87                     __end_of_Servo_Init:
  6847                           
  6848                           	psect	text26
  6849     1E53                     __ptext26:	
  6850 ;; *************** function _Read_Temperature *****************
  6851 ;; Defined at:
  6852 ;;		line 67 in file "main.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;		None
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  adcValue        2   76[BANK0 ] int 
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  4   66[BANK0 ] float 
  6859 ;; Registers used:
  6860 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6866 ;;      Params:         0       4       0       0       0
  6867 ;;      Locals:         0       6       0       0       0
  6868 ;;      Temps:          0       2       0       0       0
  6869 ;;      Totals:         0      12       0       0       0
  6870 ;;Total ram usage:       12 bytes
  6871 ;; Hardware stack levels used: 1
  6872 ;; Hardware stack levels required when called: 5
  6873 ;; This function calls:
  6874 ;;		___fldiv
  6875 ;;		___flmul
  6876 ;;		___xxtofl
  6877 ;; This function is called by:
  6878 ;;		_main
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882     1E53                     _Read_Temperature:	
  6883                           ;psect for function _Read_Temperature
  6884                           
  6885     1E53                     l3272:	
  6886                           ;incstack = 0
  6887                           ; Regs used in _Read_Temperature: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6888                           
  6889                           
  6890                           ;main.c: 68:     _delay((unsigned long)((2)*(20000000/4000.0)));
  6891     1E53  300D               	movlw	13
  6892     1E54  1283               	bcf	3,5	;RP0=0, select bank0
  6893     1E55  1303               	bcf	3,6	;RP1=0, select bank0
  6894     1E56  00E7               	movwf	??_Read_Temperature+1
  6895     1E57  30FB               	movlw	251
  6896     1E58  00E6               	movwf	??_Read_Temperature
  6897     1E59                     u5997:
  6898     1E59  0BE6               	decfsz	??_Read_Temperature,f
  6899     1E5A  2E59               	goto	u5997
  6900     1E5B  0BE7               	decfsz	??_Read_Temperature+1,f
  6901     1E5C  2E59               	goto	u5997
  6902     1E5D                     l3274:
  6903                           
  6904                           ;main.c: 69:     GO_nDONE = 1;
  6905     1E5D  1283               	bcf	3,5	;RP0=0, select bank0
  6906     1E5E  1303               	bcf	3,6	;RP1=0, select bank0
  6907     1E5F  151F               	bsf	31,2	;volatile
  6908     1E60                     l99:	
  6909                           ;main.c: 70:     while(GO_nDONE);
  6910                           
  6911     1E60  191F               	btfsc	31,2	;volatile
  6912     1E61  2E63               	goto	u4901
  6913     1E62  2E64               	goto	u4900
  6914     1E63                     u4901:
  6915     1E63  2E60               	goto	l99
  6916     1E64                     u4900:
  6917     1E64                     l3276:
  6918                           
  6919                           ;main.c: 73:     int adcValue = (ADRESH << 8) + ADRESL;
  6920     1E64  081E               	movf	30,w	;volatile
  6921     1E65  00ED               	movwf	Read_Temperature@adcValue+1
  6922     1E66  1683               	bsf	3,5	;RP0=1, select bank1
  6923     1E67  1303               	bcf	3,6	;RP1=0, select bank1
  6924     1E68  081E               	movf	30,w	;volatile
  6925     1E69  1283               	bcf	3,5	;RP0=0, select bank0
  6926     1E6A  1303               	bcf	3,6	;RP1=0, select bank0
  6927     1E6B  00EC               	movwf	Read_Temperature@adcValue
  6928     1E6C                     l3278:
  6929                           
  6930                           ;main.c: 76:     return (adcValue * 5.0 * 100.0) / 1024.0;
  6931     1E6C  3040               	movlw	64
  6932     1E6D  00B1               	movwf	___flmul@b+3
  6933     1E6E  30A0               	movlw	160
  6934     1E6F  00B0               	movwf	___flmul@b+2
  6935     1E70  3000               	movlw	0
  6936     1E71  00AF               	movwf	___flmul@b+1
  6937     1E72  3000               	movlw	0
  6938     1E73  00AE               	movwf	___flmul@b
  6939     1E74  086C               	movf	Read_Temperature@adcValue,w
  6940     1E75  00A0               	movwf	___xxtofl@val
  6941     1E76  086D               	movf	Read_Temperature@adcValue+1,w
  6942     1E77  00A1               	movwf	___xxtofl@val+1
  6943     1E78  3000               	movlw	0
  6944     1E79  1BA1               	btfsc	___xxtofl@val+1,7
  6945     1E7A  30FF               	movlw	255
  6946     1E7B  00A2               	movwf	___xxtofl@val+2
  6947     1E7C  00A3               	movwf	___xxtofl@val+3
  6948     1E7D  3001               	movlw	1
  6949     1E7E  160A  118A  218D  160A  158A  	fcall	___xxtofl
  6950     1E83  1283               	bcf	3,5	;RP0=0, select bank0
  6951     1E84  1303               	bcf	3,6	;RP1=0, select bank0
  6952     1E85  0823               	movf	?___xxtofl+3,w
  6953     1E86  00B5               	movwf	___flmul@a+3
  6954     1E87  0822               	movf	?___xxtofl+2,w
  6955     1E88  00B4               	movwf	___flmul@a+2
  6956     1E89  0821               	movf	?___xxtofl+1,w
  6957     1E8A  00B3               	movwf	___flmul@a+1
  6958     1E8B  0820               	movf	?___xxtofl,w
  6959     1E8C  00B2               	movwf	___flmul@a
  6960     1E8D  120A  158A  214E  160A  158A  	fcall	___flmul
  6961     1E92  1283               	bcf	3,5	;RP0=0, select bank0
  6962     1E93  1303               	bcf	3,6	;RP1=0, select bank0
  6963     1E94  0831               	movf	?___flmul+3,w
  6964     1E95  00EB               	movwf	_Read_Temperature$1034+3
  6965     1E96  0830               	movf	?___flmul+2,w
  6966     1E97  00EA               	movwf	_Read_Temperature$1034+2
  6967     1E98  082F               	movf	?___flmul+1,w
  6968     1E99  00E9               	movwf	_Read_Temperature$1034+1
  6969     1E9A  082E               	movf	?___flmul,w
  6970     1E9B  00E8               	movwf	_Read_Temperature$1034
  6971     1E9C                     l3280:
  6972                           
  6973                           ;main.c: 76:     return (adcValue * 5.0 * 100.0) / 1024.0;
  6974     1E9C  3044               	movlw	68
  6975     1E9D  00CB               	movwf	___fldiv@a+3
  6976     1E9E  3080               	movlw	128
  6977     1E9F  00CA               	movwf	___fldiv@a+2
  6978     1EA0  3000               	movlw	0
  6979     1EA1  00C9               	movwf	___fldiv@a+1
  6980     1EA2  3000               	movlw	0
  6981     1EA3  00C8               	movwf	___fldiv@a
  6982     1EA4  3042               	movlw	66
  6983     1EA5  00B1               	movwf	___flmul@b+3
  6984     1EA6  30C8               	movlw	200
  6985     1EA7  00B0               	movwf	___flmul@b+2
  6986     1EA8  3000               	movlw	0
  6987     1EA9  00AF               	movwf	___flmul@b+1
  6988     1EAA  3000               	movlw	0
  6989     1EAB  00AE               	movwf	___flmul@b
  6990     1EAC  086B               	movf	_Read_Temperature$1034+3,w
  6991     1EAD  00B5               	movwf	___flmul@a+3
  6992     1EAE  086A               	movf	_Read_Temperature$1034+2,w
  6993     1EAF  00B4               	movwf	___flmul@a+2
  6994     1EB0  0869               	movf	_Read_Temperature$1034+1,w
  6995     1EB1  00B3               	movwf	___flmul@a+1
  6996     1EB2  0868               	movf	_Read_Temperature$1034,w
  6997     1EB3  00B2               	movwf	___flmul@a
  6998     1EB4  120A  158A  214E  160A  158A  	fcall	___flmul
  6999     1EB9  1283               	bcf	3,5	;RP0=0, select bank0
  7000     1EBA  1303               	bcf	3,6	;RP1=0, select bank0
  7001     1EBB  0831               	movf	?___flmul+3,w
  7002     1EBC  00CF               	movwf	___fldiv@b+3
  7003     1EBD  0830               	movf	?___flmul+2,w
  7004     1EBE  00CE               	movwf	___fldiv@b+2
  7005     1EBF  082F               	movf	?___flmul+1,w
  7006     1EC0  00CD               	movwf	___fldiv@b+1
  7007     1EC1  082E               	movf	?___flmul,w
  7008     1EC2  00CC               	movwf	___fldiv@b
  7009     1EC3  160A  118A  23E6  160A  158A  	fcall	___fldiv
  7010     1EC8  1283               	bcf	3,5	;RP0=0, select bank0
  7011     1EC9  1303               	bcf	3,6	;RP1=0, select bank0
  7012     1ECA  084B               	movf	?___fldiv+3,w
  7013     1ECB  00E5               	movwf	?_Read_Temperature+3
  7014     1ECC  084A               	movf	?___fldiv+2,w
  7015     1ECD  00E4               	movwf	?_Read_Temperature+2
  7016     1ECE  0849               	movf	?___fldiv+1,w
  7017     1ECF  00E3               	movwf	?_Read_Temperature+1
  7018     1ED0  0848               	movf	?___fldiv,w
  7019     1ED1  00E2               	movwf	?_Read_Temperature
  7020     1ED2                     l102:
  7021     1ED2  0008               	return
  7022     1ED3                     __end_of_Read_Temperature:
  7023                           
  7024                           	psect	text27
  7025     118D                     __ptext27:	
  7026 ;; *************** function ___xxtofl *****************
  7027 ;; Defined at:
  7028 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;  sign            1    wreg     unsigned char 
  7031 ;;  val             4    0[BANK0 ] long 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;  sign            1    8[BANK0 ] unsigned char 
  7034 ;;  arg             4   10[BANK0 ] unsigned long 
  7035 ;;  exp             1    9[BANK0 ] unsigned char 
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  4    0[BANK0 ] unsigned char 
  7038 ;; Registers used:
  7039 ;;		wreg, status,2, status,0
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7045 ;;      Params:         0       4       0       0       0
  7046 ;;      Locals:         0       6       0       0       0
  7047 ;;      Temps:          0       4       0       0       0
  7048 ;;      Totals:         0      14       0       0       0
  7049 ;;Total ram usage:       14 bytes
  7050 ;; Hardware stack levels used: 1
  7051 ;; Hardware stack levels required when called: 3
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_Read_Temperature
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059     118D                     ___xxtofl:	
  7060                           ;psect for function ___xxtofl
  7061                           
  7062                           
  7063                           ;incstack = 0
  7064                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7065                           ;___xxtofl@sign stored from wreg
  7066     118D  1283               	bcf	3,5	;RP0=0, select bank0
  7067     118E  1303               	bcf	3,6	;RP1=0, select bank0
  7068     118F  00A8               	movwf	___xxtofl@sign
  7069     1190                     l3204:
  7070     1190  0828               	movf	___xxtofl@sign,w
  7071     1191  1903               	btfsc	3,2
  7072     1192  2994               	goto	u4731
  7073     1193  2995               	goto	u4730
  7074     1194                     u4731:
  7075     1194  29A9               	goto	l3210
  7076     1195                     u4730:
  7077     1195                     l3206:
  7078     1195  1FA3               	btfss	___xxtofl@val+3,7
  7079     1196  2998               	goto	u4741
  7080     1197  2999               	goto	u4740
  7081     1198                     u4741:
  7082     1198  29A9               	goto	l3210
  7083     1199                     u4740:
  7084     1199                     l3208:
  7085     1199  0920               	comf	___xxtofl@val,w
  7086     119A  00AA               	movwf	___xxtofl@arg
  7087     119B  0921               	comf	___xxtofl@val+1,w
  7088     119C  00AB               	movwf	___xxtofl@arg+1
  7089     119D  0922               	comf	___xxtofl@val+2,w
  7090     119E  00AC               	movwf	___xxtofl@arg+2
  7091     119F  0923               	comf	___xxtofl@val+3,w
  7092     11A0  00AD               	movwf	___xxtofl@arg+3
  7093     11A1  0AAA               	incf	___xxtofl@arg,f
  7094     11A2  1903               	skipnz
  7095     11A3  0AAB               	incf	___xxtofl@arg+1,f
  7096     11A4  1903               	skipnz
  7097     11A5  0AAC               	incf	___xxtofl@arg+2,f
  7098     11A6  1903               	skipnz
  7099     11A7  0AAD               	incf	___xxtofl@arg+3,f
  7100     11A8  29B1               	goto	l698
  7101     11A9                     l3210:
  7102     11A9  0823               	movf	___xxtofl@val+3,w
  7103     11AA  00AD               	movwf	___xxtofl@arg+3
  7104     11AB  0822               	movf	___xxtofl@val+2,w
  7105     11AC  00AC               	movwf	___xxtofl@arg+2
  7106     11AD  0821               	movf	___xxtofl@val+1,w
  7107     11AE  00AB               	movwf	___xxtofl@arg+1
  7108     11AF  0820               	movf	___xxtofl@val,w
  7109     11B0  00AA               	movwf	___xxtofl@arg
  7110     11B1                     l698:
  7111     11B1  0823               	movf	___xxtofl@val+3,w
  7112     11B2  0422               	iorwf	___xxtofl@val+2,w
  7113     11B3  0421               	iorwf	___xxtofl@val+1,w
  7114     11B4  0420               	iorwf	___xxtofl@val,w
  7115     11B5  1D03               	skipz
  7116     11B6  29B8               	goto	u4751
  7117     11B7  29B9               	goto	u4750
  7118     11B8                     u4751:
  7119     11B8  29C2               	goto	l699
  7120     11B9                     u4750:
  7121     11B9                     l3212:
  7122     11B9  3000               	movlw	0
  7123     11BA  00A3               	movwf	?___xxtofl+3
  7124     11BB  3000               	movlw	0
  7125     11BC  00A2               	movwf	?___xxtofl+2
  7126     11BD  3000               	movlw	0
  7127     11BE  00A1               	movwf	?___xxtofl+1
  7128     11BF  3000               	movlw	0
  7129     11C0  00A0               	movwf	?___xxtofl
  7130     11C1  2A42               	goto	l700
  7131     11C2                     l699:
  7132     11C2  3096               	movlw	150
  7133     11C3  00A9               	movwf	___xxtofl@exp
  7134     11C4  29D0               	goto	l3218
  7135     11C5                     l3216:
  7136     11C5  3001               	movlw	1
  7137     11C6  07A9               	addwf	___xxtofl@exp,f
  7138     11C7  3001               	movlw	1
  7139     11C8                     u4765:
  7140     11C8  1003               	clrc
  7141     11C9  0CAD               	rrf	___xxtofl@arg+3,f
  7142     11CA  0CAC               	rrf	___xxtofl@arg+2,f
  7143     11CB  0CAB               	rrf	___xxtofl@arg+1,f
  7144     11CC  0CAA               	rrf	___xxtofl@arg,f
  7145     11CD  3EFF               	addlw	-1
  7146     11CE  1D03               	skipz
  7147     11CF  29C8               	goto	u4765
  7148     11D0                     l3218:
  7149     11D0  30FE               	movlw	254
  7150     11D1  052D               	andwf	___xxtofl@arg+3,w
  7151     11D2  1D03               	btfss	3,2
  7152     11D3  29D5               	goto	u4771
  7153     11D4  29D6               	goto	u4770
  7154     11D5                     u4771:
  7155     11D5  29C5               	goto	l3216
  7156     11D6                     u4770:
  7157     11D6  29F0               	goto	l704
  7158     11D7                     l3220:
  7159     11D7  3001               	movlw	1
  7160     11D8  07A9               	addwf	___xxtofl@exp,f
  7161     11D9                     l3222:
  7162     11D9  3001               	movlw	1
  7163     11DA  07AA               	addwf	___xxtofl@arg,f
  7164     11DB  3000               	movlw	0
  7165     11DC  1803               	skipnc
  7166     11DD  3001               	movlw	1
  7167     11DE  07AB               	addwf	___xxtofl@arg+1,f
  7168     11DF  3000               	movlw	0
  7169     11E0  1803               	skipnc
  7170     11E1  3001               	movlw	1
  7171     11E2  07AC               	addwf	___xxtofl@arg+2,f
  7172     11E3  3000               	movlw	0
  7173     11E4  1803               	skipnc
  7174     11E5  3001               	movlw	1
  7175     11E6  07AD               	addwf	___xxtofl@arg+3,f
  7176     11E7                     l3224:
  7177     11E7  3001               	movlw	1
  7178     11E8                     u4785:
  7179     11E8  1003               	clrc
  7180     11E9  0CAD               	rrf	___xxtofl@arg+3,f
  7181     11EA  0CAC               	rrf	___xxtofl@arg+2,f
  7182     11EB  0CAB               	rrf	___xxtofl@arg+1,f
  7183     11EC  0CAA               	rrf	___xxtofl@arg,f
  7184     11ED  3EFF               	addlw	-1
  7185     11EE  1D03               	skipz
  7186     11EF  29E8               	goto	u4785
  7187     11F0                     l704:
  7188     11F0  30FF               	movlw	255
  7189     11F1  052D               	andwf	___xxtofl@arg+3,w
  7190     11F2  1D03               	btfss	3,2
  7191     11F3  29F5               	goto	u4791
  7192     11F4  29F6               	goto	u4790
  7193     11F5                     u4791:
  7194     11F5  29D7               	goto	l3220
  7195     11F6                     u4790:
  7196     11F6  2A02               	goto	l3228
  7197     11F7                     l3226:
  7198     11F7  3001               	movlw	1
  7199     11F8  02A9               	subwf	___xxtofl@exp,f
  7200     11F9  3001               	movlw	1
  7201     11FA  00A4               	movwf	??___xxtofl
  7202     11FB                     u4805:
  7203     11FB  1003               	clrc
  7204     11FC  0DAA               	rlf	___xxtofl@arg,f
  7205     11FD  0DAB               	rlf	___xxtofl@arg+1,f
  7206     11FE  0DAC               	rlf	___xxtofl@arg+2,f
  7207     11FF  0DAD               	rlf	___xxtofl@arg+3,f
  7208     1200  0BA4               	decfsz	??___xxtofl,f
  7209     1201  29FB               	goto	u4805
  7210     1202                     l3228:
  7211     1202  1BAC               	btfsc	___xxtofl@arg+2,7
  7212     1203  2A05               	goto	u4811
  7213     1204  2A06               	goto	u4810
  7214     1205                     u4811:
  7215     1205  2A0C               	goto	l711
  7216     1206                     u4810:
  7217     1206                     l3230:
  7218     1206  3002               	movlw	2
  7219     1207  0229               	subwf	___xxtofl@exp,w
  7220     1208  1803               	skipnc
  7221     1209  2A0B               	goto	u4821
  7222     120A  2A0C               	goto	u4820
  7223     120B                     u4821:
  7224     120B  29F7               	goto	l3226
  7225     120C                     u4820:
  7226     120C                     l711:
  7227     120C  1829               	btfsc	___xxtofl@exp,0
  7228     120D  2A0F               	goto	u4831
  7229     120E  2A10               	goto	u4830
  7230     120F                     u4831:
  7231     120F  2A18               	goto	l712
  7232     1210                     u4830:
  7233     1210                     l3232:
  7234     1210  30FF               	movlw	255
  7235     1211  05AA               	andwf	___xxtofl@arg,f
  7236     1212  30FF               	movlw	255
  7237     1213  05AB               	andwf	___xxtofl@arg+1,f
  7238     1214  307F               	movlw	127
  7239     1215  05AC               	andwf	___xxtofl@arg+2,f
  7240     1216  30FF               	movlw	255
  7241     1217  05AD               	andwf	___xxtofl@arg+3,f
  7242     1218                     l712:
  7243     1218  1003               	clrc
  7244     1219  0CA9               	rrf	___xxtofl@exp,f
  7245     121A                     l3234:
  7246     121A  0829               	movf	___xxtofl@exp,w
  7247     121B  00A4               	movwf	??___xxtofl
  7248     121C  01A5               	clrf	??___xxtofl+1
  7249     121D  01A6               	clrf	??___xxtofl+2
  7250     121E  01A7               	clrf	??___xxtofl+3
  7251     121F  3018               	movlw	24
  7252     1220                     u4845:
  7253     1220  1003               	clrc
  7254     1221  0DA4               	rlf	??___xxtofl,f
  7255     1222  0DA5               	rlf	??___xxtofl+1,f
  7256     1223  0DA6               	rlf	??___xxtofl+2,f
  7257     1224  0DA7               	rlf	??___xxtofl+3,f
  7258     1225                     u4840:
  7259     1225  3EFF               	addlw	-1
  7260     1226  1D03               	skipz
  7261     1227  2A20               	goto	u4845
  7262     1228  0824               	movf	??___xxtofl,w
  7263     1229  04AA               	iorwf	___xxtofl@arg,f
  7264     122A  0825               	movf	??___xxtofl+1,w
  7265     122B  04AB               	iorwf	___xxtofl@arg+1,f
  7266     122C  0826               	movf	??___xxtofl+2,w
  7267     122D  04AC               	iorwf	___xxtofl@arg+2,f
  7268     122E  0827               	movf	??___xxtofl+3,w
  7269     122F  04AD               	iorwf	___xxtofl@arg+3,f
  7270     1230                     l3236:
  7271     1230  0828               	movf	___xxtofl@sign,w
  7272     1231  1903               	btfsc	3,2
  7273     1232  2A34               	goto	u4851
  7274     1233  2A35               	goto	u4850
  7275     1234                     u4851:
  7276     1234  2A3A               	goto	l3242
  7277     1235                     u4850:
  7278     1235                     l3238:
  7279     1235  1FA3               	btfss	___xxtofl@val+3,7
  7280     1236  2A38               	goto	u4861
  7281     1237  2A39               	goto	u4860
  7282     1238                     u4861:
  7283     1238  2A3A               	goto	l3242
  7284     1239                     u4860:
  7285     1239                     l3240:
  7286     1239  17AD               	bsf	___xxtofl@arg+3,7
  7287     123A                     l3242:
  7288     123A  082D               	movf	___xxtofl@arg+3,w
  7289     123B  00A3               	movwf	?___xxtofl+3
  7290     123C  082C               	movf	___xxtofl@arg+2,w
  7291     123D  00A2               	movwf	?___xxtofl+2
  7292     123E  082B               	movf	___xxtofl@arg+1,w
  7293     123F  00A1               	movwf	?___xxtofl+1
  7294     1240  082A               	movf	___xxtofl@arg,w
  7295     1241  00A0               	movwf	?___xxtofl
  7296     1242                     l700:
  7297     1242  0008               	return
  7298     1243                     __end_of___xxtofl:
  7299                           
  7300                           	psect	text28
  7301     094E                     __ptext28:	
  7302 ;; *************** function ___flmul *****************
  7303 ;; Defined at:
  7304 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  b               4   14[BANK0 ] unsigned char 
  7307 ;;  a               4   18[BANK0 ] unsigned char 
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;  prod            4   34[BANK0 ] struct .
  7310 ;;  grs             4   28[BANK0 ] unsigned long 
  7311 ;;  temp            2   38[BANK0 ] struct .
  7312 ;;  bexp            1   33[BANK0 ] unsigned char 
  7313 ;;  aexp            1   32[BANK0 ] unsigned char 
  7314 ;;  sign            1   27[BANK0 ] unsigned char 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  4   14[BANK0 ] unsigned char 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7324 ;;      Params:         0       8       0       0       0
  7325 ;;      Locals:         0      13       0       0       0
  7326 ;;      Temps:          0       5       0       0       0
  7327 ;;      Totals:         0      26       0       0       0
  7328 ;;Total ram usage:       26 bytes
  7329 ;; Hardware stack levels used: 1
  7330 ;; Hardware stack levels required when called: 4
  7331 ;; This function calls:
  7332 ;;		__Umul8_16
  7333 ;; This function is called by:
  7334 ;;		_Read_Temperature
  7335 ;;		_efgtoa
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339     094E                     ___flmul:	
  7340                           ;psect for function ___flmul
  7341                           
  7342     094E                     l2660:	
  7343                           ;incstack = 0
  7344 ;; hardware stack exceeded
  7345                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7346                           
  7347     094E  1283               	bcf	3,5	;RP0=0, select bank0
  7348     094F  1303               	bcf	3,6	;RP1=0, select bank0
  7349     0950  0831               	movf	___flmul@b+3,w
  7350     0951  00BB               	movwf	___flmul@sign
  7351     0952                     l2662:
  7352     0952  3080               	movlw	128
  7353     0953  05BB               	andwf	___flmul@sign,f
  7354     0954                     l2664:
  7355     0954  0831               	movf	___flmul@b+3,w
  7356     0955  00B6               	movwf	??___flmul
  7357     0956  0736               	addwf	??___flmul,w
  7358     0957  00C1               	movwf	___flmul@bexp
  7359     0958                     l2666:
  7360     0958  1FB0               	btfss	___flmul@b+2,7
  7361     0959  295B               	goto	u3681
  7362     095A  295C               	goto	u3680
  7363     095B                     u3681:
  7364     095B  295D               	goto	l2670
  7365     095C                     u3680:
  7366     095C                     l2668:
  7367     095C  1441               	bsf	___flmul@bexp,0
  7368     095D                     l2670:
  7369     095D  0841               	movf	___flmul@bexp,w
  7370     095E  1903               	btfsc	3,2
  7371     095F  2961               	goto	u3691
  7372     0960  2962               	goto	u3690
  7373     0961                     u3691:
  7374     0961  2971               	goto	l2678
  7375     0962                     u3690:
  7376     0962                     l2672:
  7377     0962  0A41               	incf	___flmul@bexp,w
  7378     0963  1D03               	btfss	3,2
  7379     0964  2966               	goto	u3701
  7380     0965  2967               	goto	u3700
  7381     0966                     u3701:
  7382     0966  296F               	goto	l2676
  7383     0967                     u3700:
  7384     0967                     l2674:
  7385     0967  3000               	movlw	0
  7386     0968  00B1               	movwf	___flmul@b+3
  7387     0969  3000               	movlw	0
  7388     096A  00B0               	movwf	___flmul@b+2
  7389     096B  3000               	movlw	0
  7390     096C  00AF               	movwf	___flmul@b+1
  7391     096D  3000               	movlw	0
  7392     096E  00AE               	movwf	___flmul@b
  7393     096F                     l2676:
  7394     096F  17B0               	bsf	___flmul@b+2,7
  7395     0970  2979               	goto	l2680
  7396     0971                     l2678:
  7397     0971  3000               	movlw	0
  7398     0972  00B1               	movwf	___flmul@b+3
  7399     0973  3000               	movlw	0
  7400     0974  00B0               	movwf	___flmul@b+2
  7401     0975  3000               	movlw	0
  7402     0976  00AF               	movwf	___flmul@b+1
  7403     0977  3000               	movlw	0
  7404     0978  00AE               	movwf	___flmul@b
  7405     0979                     l2680:
  7406     0979  0835               	movf	___flmul@a+3,w
  7407     097A  3980               	andlw	128
  7408     097B  06BB               	xorwf	___flmul@sign,f
  7409     097C                     l2682:
  7410     097C  0835               	movf	___flmul@a+3,w
  7411     097D  00B6               	movwf	??___flmul
  7412     097E  0736               	addwf	??___flmul,w
  7413     097F  00C0               	movwf	___flmul@aexp
  7414     0980                     l2684:
  7415     0980  1FB4               	btfss	___flmul@a+2,7
  7416     0981  2983               	goto	u3711
  7417     0982  2984               	goto	u3710
  7418     0983                     u3711:
  7419     0983  2985               	goto	l2688
  7420     0984                     u3710:
  7421     0984                     l2686:
  7422     0984  1440               	bsf	___flmul@aexp,0
  7423     0985                     l2688:
  7424     0985  0840               	movf	___flmul@aexp,w
  7425     0986  1903               	btfsc	3,2
  7426     0987  2989               	goto	u3721
  7427     0988  298A               	goto	u3720
  7428     0989                     u3721:
  7429     0989  2999               	goto	l2696
  7430     098A                     u3720:
  7431     098A                     l2690:
  7432     098A  0A40               	incf	___flmul@aexp,w
  7433     098B  1D03               	btfss	3,2
  7434     098C  298E               	goto	u3731
  7435     098D  298F               	goto	u3730
  7436     098E                     u3731:
  7437     098E  2997               	goto	l2694
  7438     098F                     u3730:
  7439     098F                     l2692:
  7440     098F  3000               	movlw	0
  7441     0990  00B5               	movwf	___flmul@a+3
  7442     0991  3000               	movlw	0
  7443     0992  00B4               	movwf	___flmul@a+2
  7444     0993  3000               	movlw	0
  7445     0994  00B3               	movwf	___flmul@a+1
  7446     0995  3000               	movlw	0
  7447     0996  00B2               	movwf	___flmul@a
  7448     0997                     l2694:
  7449     0997  17B4               	bsf	___flmul@a+2,7
  7450     0998  29A1               	goto	l2698
  7451     0999                     l2696:
  7452     0999  3000               	movlw	0
  7453     099A  00B5               	movwf	___flmul@a+3
  7454     099B  3000               	movlw	0
  7455     099C  00B4               	movwf	___flmul@a+2
  7456     099D  3000               	movlw	0
  7457     099E  00B3               	movwf	___flmul@a+1
  7458     099F  3000               	movlw	0
  7459     09A0  00B2               	movwf	___flmul@a
  7460     09A1                     l2698:
  7461     09A1  0840               	movf	___flmul@aexp,w
  7462     09A2  1903               	btfsc	3,2
  7463     09A3  29A5               	goto	u3741
  7464     09A4  29A6               	goto	u3740
  7465     09A5                     u3741:
  7466     09A5  29AB               	goto	l2702
  7467     09A6                     u3740:
  7468     09A6                     l2700:
  7469     09A6  0841               	movf	___flmul@bexp,w
  7470     09A7  1D03               	btfss	3,2
  7471     09A8  29AA               	goto	u3751
  7472     09A9  29AB               	goto	u3750
  7473     09AA                     u3751:
  7474     09AA  29B4               	goto	l2706
  7475     09AB                     u3750:
  7476     09AB                     l2702:
  7477     09AB  3000               	movlw	0
  7478     09AC  00B1               	movwf	?___flmul+3
  7479     09AD  3000               	movlw	0
  7480     09AE  00B0               	movwf	?___flmul+2
  7481     09AF  3000               	movlw	0
  7482     09B0  00AF               	movwf	?___flmul+1
  7483     09B1  3000               	movlw	0
  7484     09B2  00AE               	movwf	?___flmul
  7485     09B3  2C8F               	goto	l654
  7486     09B4                     l2706:
  7487     09B4  082E               	movf	___flmul@b,w
  7488     09B5  00A0               	movwf	__Umul8_16@multiplicand
  7489     09B6  0834               	movf	___flmul@a+2,w
  7490     09B7  160A  118A  20C0  120A  158A  	fcall	__Umul8_16
  7491     09BC  1283               	bcf	3,5	;RP0=0, select bank0
  7492     09BD  1303               	bcf	3,6	;RP1=0, select bank0
  7493     09BE  0821               	movf	?__Umul8_16+1,w
  7494     09BF  00C7               	movwf	___flmul@temp+1
  7495     09C0  0820               	movf	?__Umul8_16,w
  7496     09C1  00C6               	movwf	___flmul@temp
  7497     09C2                     l2708:
  7498     09C2  0846               	movf	___flmul@temp,w
  7499     09C3  00B6               	movwf	??___flmul
  7500     09C4  01B7               	clrf	??___flmul+1
  7501     09C5  01B8               	clrf	??___flmul+2
  7502     09C6  01B9               	clrf	??___flmul+3
  7503     09C7  0839               	movf	??___flmul+3,w
  7504     09C8  00BF               	movwf	___flmul@grs+3
  7505     09C9  0838               	movf	??___flmul+2,w
  7506     09CA  00BE               	movwf	___flmul@grs+2
  7507     09CB  0837               	movf	??___flmul+1,w
  7508     09CC  00BD               	movwf	___flmul@grs+1
  7509     09CD  0836               	movf	??___flmul,w
  7510     09CE  00BC               	movwf	___flmul@grs
  7511     09CF                     l2710:
  7512     09CF  0847               	movf	___flmul@temp+1,w
  7513     09D0  00B6               	movwf	??___flmul
  7514     09D1  01B7               	clrf	??___flmul+1
  7515     09D2  01B8               	clrf	??___flmul+2
  7516     09D3  01B9               	clrf	??___flmul+3
  7517     09D4  0839               	movf	??___flmul+3,w
  7518     09D5  00C5               	movwf	___flmul@prod+3
  7519     09D6  0838               	movf	??___flmul+2,w
  7520     09D7  00C4               	movwf	___flmul@prod+2
  7521     09D8  0837               	movf	??___flmul+1,w
  7522     09D9  00C3               	movwf	___flmul@prod+1
  7523     09DA  0836               	movf	??___flmul,w
  7524     09DB  00C2               	movwf	___flmul@prod
  7525     09DC  082F               	movf	___flmul@b+1,w
  7526     09DD  00A0               	movwf	__Umul8_16@multiplicand
  7527     09DE  0833               	movf	___flmul@a+1,w
  7528     09DF  160A  118A  20C0  120A  158A  	fcall	__Umul8_16
  7529     09E4  1283               	bcf	3,5	;RP0=0, select bank0
  7530     09E5  1303               	bcf	3,6	;RP1=0, select bank0
  7531     09E6  0821               	movf	?__Umul8_16+1,w
  7532     09E7  00C7               	movwf	___flmul@temp+1
  7533     09E8  0820               	movf	?__Umul8_16,w
  7534     09E9  00C6               	movwf	___flmul@temp
  7535     09EA                     l2712:
  7536     09EA  0846               	movf	___flmul@temp,w
  7537     09EB  00B6               	movwf	??___flmul
  7538     09EC  01B7               	clrf	??___flmul+1
  7539     09ED  01B8               	clrf	??___flmul+2
  7540     09EE  01B9               	clrf	??___flmul+3
  7541     09EF  0836               	movf	??___flmul,w
  7542     09F0  07BC               	addwf	___flmul@grs,f
  7543     09F1  0837               	movf	??___flmul+1,w
  7544     09F2  1103               	clrz
  7545     09F3  1803               	skipnc
  7546     09F4  3E01               	addlw	1
  7547     09F5  1903               	skipnz
  7548     09F6  29F8               	goto	u3761
  7549     09F7  07BD               	addwf	___flmul@grs+1,f
  7550     09F8                     u3761:
  7551     09F8  0838               	movf	??___flmul+2,w
  7552     09F9  1103               	clrz
  7553     09FA  1803               	skipnc
  7554     09FB  3E01               	addlw	1
  7555     09FC  1903               	skipnz
  7556     09FD  29FF               	goto	u3762
  7557     09FE  07BE               	addwf	___flmul@grs+2,f
  7558     09FF                     u3762:
  7559     09FF  0839               	movf	??___flmul+3,w
  7560     0A00  1103               	clrz
  7561     0A01  1803               	skipnc
  7562     0A02  3E01               	addlw	1
  7563     0A03  1903               	skipnz
  7564     0A04  2A06               	goto	u3763
  7565     0A05  07BF               	addwf	___flmul@grs+3,f
  7566     0A06                     u3763:
  7567     0A06                     l2714:
  7568     0A06  0847               	movf	___flmul@temp+1,w
  7569     0A07  00B6               	movwf	??___flmul
  7570     0A08  01B7               	clrf	??___flmul+1
  7571     0A09  01B8               	clrf	??___flmul+2
  7572     0A0A  01B9               	clrf	??___flmul+3
  7573     0A0B  0836               	movf	??___flmul,w
  7574     0A0C  07C2               	addwf	___flmul@prod,f
  7575     0A0D  0837               	movf	??___flmul+1,w
  7576     0A0E  1103               	clrz
  7577     0A0F  1803               	skipnc
  7578     0A10  3E01               	addlw	1
  7579     0A11  1903               	skipnz
  7580     0A12  2A14               	goto	u3771
  7581     0A13  07C3               	addwf	___flmul@prod+1,f
  7582     0A14                     u3771:
  7583     0A14  0838               	movf	??___flmul+2,w
  7584     0A15  1103               	clrz
  7585     0A16  1803               	skipnc
  7586     0A17  3E01               	addlw	1
  7587     0A18  1903               	skipnz
  7588     0A19  2A1B               	goto	u3772
  7589     0A1A  07C4               	addwf	___flmul@prod+2,f
  7590     0A1B                     u3772:
  7591     0A1B  0839               	movf	??___flmul+3,w
  7592     0A1C  1103               	clrz
  7593     0A1D  1803               	skipnc
  7594     0A1E  3E01               	addlw	1
  7595     0A1F  1903               	skipnz
  7596     0A20  2A22               	goto	u3773
  7597     0A21  07C5               	addwf	___flmul@prod+3,f
  7598     0A22                     u3773:
  7599     0A22  0830               	movf	___flmul@b+2,w
  7600     0A23  00A0               	movwf	__Umul8_16@multiplicand
  7601     0A24  0832               	movf	___flmul@a,w
  7602     0A25  160A  118A  20C0  120A  158A  	fcall	__Umul8_16
  7603     0A2A  1283               	bcf	3,5	;RP0=0, select bank0
  7604     0A2B  1303               	bcf	3,6	;RP1=0, select bank0
  7605     0A2C  0821               	movf	?__Umul8_16+1,w
  7606     0A2D  00C7               	movwf	___flmul@temp+1
  7607     0A2E  0820               	movf	?__Umul8_16,w
  7608     0A2F  00C6               	movwf	___flmul@temp
  7609     0A30                     l2716:
  7610     0A30  0846               	movf	___flmul@temp,w
  7611     0A31  00B6               	movwf	??___flmul
  7612     0A32  01B7               	clrf	??___flmul+1
  7613     0A33  01B8               	clrf	??___flmul+2
  7614     0A34  01B9               	clrf	??___flmul+3
  7615     0A35  0836               	movf	??___flmul,w
  7616     0A36  07BC               	addwf	___flmul@grs,f
  7617     0A37  0837               	movf	??___flmul+1,w
  7618     0A38  1103               	clrz
  7619     0A39  1803               	skipnc
  7620     0A3A  3E01               	addlw	1
  7621     0A3B  1903               	skipnz
  7622     0A3C  2A3E               	goto	u3781
  7623     0A3D  07BD               	addwf	___flmul@grs+1,f
  7624     0A3E                     u3781:
  7625     0A3E  0838               	movf	??___flmul+2,w
  7626     0A3F  1103               	clrz
  7627     0A40  1803               	skipnc
  7628     0A41  3E01               	addlw	1
  7629     0A42  1903               	skipnz
  7630     0A43  2A45               	goto	u3782
  7631     0A44  07BE               	addwf	___flmul@grs+2,f
  7632     0A45                     u3782:
  7633     0A45  0839               	movf	??___flmul+3,w
  7634     0A46  1103               	clrz
  7635     0A47  1803               	skipnc
  7636     0A48  3E01               	addlw	1
  7637     0A49  1903               	skipnz
  7638     0A4A  2A4C               	goto	u3783
  7639     0A4B  07BF               	addwf	___flmul@grs+3,f
  7640     0A4C                     u3783:
  7641     0A4C                     l2718:
  7642     0A4C  0847               	movf	___flmul@temp+1,w
  7643     0A4D  00B6               	movwf	??___flmul
  7644     0A4E  01B7               	clrf	??___flmul+1
  7645     0A4F  01B8               	clrf	??___flmul+2
  7646     0A50  01B9               	clrf	??___flmul+3
  7647     0A51  0836               	movf	??___flmul,w
  7648     0A52  07C2               	addwf	___flmul@prod,f
  7649     0A53  0837               	movf	??___flmul+1,w
  7650     0A54  1103               	clrz
  7651     0A55  1803               	skipnc
  7652     0A56  3E01               	addlw	1
  7653     0A57  1903               	skipnz
  7654     0A58  2A5A               	goto	u3791
  7655     0A59  07C3               	addwf	___flmul@prod+1,f
  7656     0A5A                     u3791:
  7657     0A5A  0838               	movf	??___flmul+2,w
  7658     0A5B  1103               	clrz
  7659     0A5C  1803               	skipnc
  7660     0A5D  3E01               	addlw	1
  7661     0A5E  1903               	skipnz
  7662     0A5F  2A61               	goto	u3792
  7663     0A60  07C4               	addwf	___flmul@prod+2,f
  7664     0A61                     u3792:
  7665     0A61  0839               	movf	??___flmul+3,w
  7666     0A62  1103               	clrz
  7667     0A63  1803               	skipnc
  7668     0A64  3E01               	addlw	1
  7669     0A65  1903               	skipnz
  7670     0A66  2A68               	goto	u3793
  7671     0A67  07C5               	addwf	___flmul@prod+3,f
  7672     0A68                     u3793:
  7673     0A68                     l2720:
  7674     0A68  3008               	movlw	8
  7675     0A69  00B6               	movwf	??___flmul
  7676     0A6A                     u3805:
  7677     0A6A  1003               	clrc
  7678     0A6B  0DBC               	rlf	___flmul@grs,f
  7679     0A6C  0DBD               	rlf	___flmul@grs+1,f
  7680     0A6D  0DBE               	rlf	___flmul@grs+2,f
  7681     0A6E  0DBF               	rlf	___flmul@grs+3,f
  7682     0A6F  0BB6               	decfsz	??___flmul,f
  7683     0A70  2A6A               	goto	u3805
  7684     0A71                     l2722:
  7685     0A71  082F               	movf	___flmul@b+1,w
  7686     0A72  00A0               	movwf	__Umul8_16@multiplicand
  7687     0A73  0832               	movf	___flmul@a,w
  7688     0A74  160A  118A  20C0  120A  158A  	fcall	__Umul8_16
  7689     0A79  1283               	bcf	3,5	;RP0=0, select bank0
  7690     0A7A  1303               	bcf	3,6	;RP1=0, select bank0
  7691     0A7B  0821               	movf	?__Umul8_16+1,w
  7692     0A7C  00C7               	movwf	___flmul@temp+1
  7693     0A7D  0820               	movf	?__Umul8_16,w
  7694     0A7E  00C6               	movwf	___flmul@temp
  7695     0A7F                     l2724:
  7696     0A7F  0846               	movf	___flmul@temp,w
  7697     0A80  00B6               	movwf	??___flmul
  7698     0A81  0847               	movf	___flmul@temp+1,w
  7699     0A82  00B7               	movwf	??___flmul+1
  7700     0A83  01B8               	clrf	??___flmul+2
  7701     0A84  01B9               	clrf	??___flmul+3
  7702     0A85  0836               	movf	??___flmul,w
  7703     0A86  07BC               	addwf	___flmul@grs,f
  7704     0A87  0837               	movf	??___flmul+1,w
  7705     0A88  1103               	clrz
  7706     0A89  1803               	skipnc
  7707     0A8A  3E01               	addlw	1
  7708     0A8B  1903               	skipnz
  7709     0A8C  2A8E               	goto	u3811
  7710     0A8D  07BD               	addwf	___flmul@grs+1,f
  7711     0A8E                     u3811:
  7712     0A8E  0838               	movf	??___flmul+2,w
  7713     0A8F  1103               	clrz
  7714     0A90  1803               	skipnc
  7715     0A91  3E01               	addlw	1
  7716     0A92  1903               	skipnz
  7717     0A93  2A95               	goto	u3812
  7718     0A94  07BE               	addwf	___flmul@grs+2,f
  7719     0A95                     u3812:
  7720     0A95  0839               	movf	??___flmul+3,w
  7721     0A96  1103               	clrz
  7722     0A97  1803               	skipnc
  7723     0A98  3E01               	addlw	1
  7724     0A99  1903               	skipnz
  7725     0A9A  2A9C               	goto	u3813
  7726     0A9B  07BF               	addwf	___flmul@grs+3,f
  7727     0A9C                     u3813:
  7728     0A9C                     l2726:
  7729     0A9C  082E               	movf	___flmul@b,w
  7730     0A9D  00A0               	movwf	__Umul8_16@multiplicand
  7731     0A9E  0833               	movf	___flmul@a+1,w
  7732     0A9F  160A  118A  20C0  120A  158A  	fcall	__Umul8_16
  7733     0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  7734     0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  7735     0AA6  0821               	movf	?__Umul8_16+1,w
  7736     0AA7  00C7               	movwf	___flmul@temp+1
  7737     0AA8  0820               	movf	?__Umul8_16,w
  7738     0AA9  00C6               	movwf	___flmul@temp
  7739     0AAA                     l2728:
  7740     0AAA  0846               	movf	___flmul@temp,w
  7741     0AAB  00B6               	movwf	??___flmul
  7742     0AAC  0847               	movf	___flmul@temp+1,w
  7743     0AAD  00B7               	movwf	??___flmul+1
  7744     0AAE  01B8               	clrf	??___flmul+2
  7745     0AAF  01B9               	clrf	??___flmul+3
  7746     0AB0  0836               	movf	??___flmul,w
  7747     0AB1  07BC               	addwf	___flmul@grs,f
  7748     0AB2  0837               	movf	??___flmul+1,w
  7749     0AB3  1103               	clrz
  7750     0AB4  1803               	skipnc
  7751     0AB5  3E01               	addlw	1
  7752     0AB6  1903               	skipnz
  7753     0AB7  2AB9               	goto	u3821
  7754     0AB8  07BD               	addwf	___flmul@grs+1,f
  7755     0AB9                     u3821:
  7756     0AB9  0838               	movf	??___flmul+2,w
  7757     0ABA  1103               	clrz
  7758     0ABB  1803               	skipnc
  7759     0ABC  3E01               	addlw	1
  7760     0ABD  1903               	skipnz
  7761     0ABE  2AC0               	goto	u3822
  7762     0ABF  07BE               	addwf	___flmul@grs+2,f
  7763     0AC0                     u3822:
  7764     0AC0  0839               	movf	??___flmul+3,w
  7765     0AC1  1103               	clrz
  7766     0AC2  1803               	skipnc
  7767     0AC3  3E01               	addlw	1
  7768     0AC4  1903               	skipnz
  7769     0AC5  2AC7               	goto	u3823
  7770     0AC6  07BF               	addwf	___flmul@grs+3,f
  7771     0AC7                     u3823:
  7772     0AC7                     l2730:
  7773     0AC7  3008               	movlw	8
  7774     0AC8  00B6               	movwf	??___flmul
  7775     0AC9                     u3835:
  7776     0AC9  1003               	clrc
  7777     0ACA  0DBC               	rlf	___flmul@grs,f
  7778     0ACB  0DBD               	rlf	___flmul@grs+1,f
  7779     0ACC  0DBE               	rlf	___flmul@grs+2,f
  7780     0ACD  0DBF               	rlf	___flmul@grs+3,f
  7781     0ACE  0BB6               	decfsz	??___flmul,f
  7782     0ACF  2AC9               	goto	u3835
  7783     0AD0  082E               	movf	___flmul@b,w
  7784     0AD1  00A0               	movwf	__Umul8_16@multiplicand
  7785     0AD2  0832               	movf	___flmul@a,w
  7786     0AD3  160A  118A  20C0  120A  158A  	fcall	__Umul8_16
  7787     0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  7788     0AD9  1303               	bcf	3,6	;RP1=0, select bank0
  7789     0ADA  0821               	movf	?__Umul8_16+1,w
  7790     0ADB  00C7               	movwf	___flmul@temp+1
  7791     0ADC  0820               	movf	?__Umul8_16,w
  7792     0ADD  00C6               	movwf	___flmul@temp
  7793     0ADE                     l2732:
  7794     0ADE  0846               	movf	___flmul@temp,w
  7795     0ADF  00B6               	movwf	??___flmul
  7796     0AE0  0847               	movf	___flmul@temp+1,w
  7797     0AE1  00B7               	movwf	??___flmul+1
  7798     0AE2  01B8               	clrf	??___flmul+2
  7799     0AE3  01B9               	clrf	??___flmul+3
  7800     0AE4  0836               	movf	??___flmul,w
  7801     0AE5  07BC               	addwf	___flmul@grs,f
  7802     0AE6  0837               	movf	??___flmul+1,w
  7803     0AE7  1103               	clrz
  7804     0AE8  1803               	skipnc
  7805     0AE9  3E01               	addlw	1
  7806     0AEA  1903               	skipnz
  7807     0AEB  2AED               	goto	u3841
  7808     0AEC  07BD               	addwf	___flmul@grs+1,f
  7809     0AED                     u3841:
  7810     0AED  0838               	movf	??___flmul+2,w
  7811     0AEE  1103               	clrz
  7812     0AEF  1803               	skipnc
  7813     0AF0  3E01               	addlw	1
  7814     0AF1  1903               	skipnz
  7815     0AF2  2AF4               	goto	u3842
  7816     0AF3  07BE               	addwf	___flmul@grs+2,f
  7817     0AF4                     u3842:
  7818     0AF4  0839               	movf	??___flmul+3,w
  7819     0AF5  1103               	clrz
  7820     0AF6  1803               	skipnc
  7821     0AF7  3E01               	addlw	1
  7822     0AF8  1903               	skipnz
  7823     0AF9  2AFB               	goto	u3843
  7824     0AFA  07BF               	addwf	___flmul@grs+3,f
  7825     0AFB                     u3843:
  7826     0AFB                     l2734:
  7827     0AFB  082F               	movf	___flmul@b+1,w
  7828     0AFC  00A0               	movwf	__Umul8_16@multiplicand
  7829     0AFD  0834               	movf	___flmul@a+2,w
  7830     0AFE  160A  118A  20C0  120A  158A  	fcall	__Umul8_16
  7831     0B03  1283               	bcf	3,5	;RP0=0, select bank0
  7832     0B04  1303               	bcf	3,6	;RP1=0, select bank0
  7833     0B05  0821               	movf	?__Umul8_16+1,w
  7834     0B06  00C7               	movwf	___flmul@temp+1
  7835     0B07  0820               	movf	?__Umul8_16,w
  7836     0B08  00C6               	movwf	___flmul@temp
  7837     0B09  0846               	movf	___flmul@temp,w
  7838     0B0A  00B6               	movwf	??___flmul
  7839     0B0B  0847               	movf	___flmul@temp+1,w
  7840     0B0C  00B7               	movwf	??___flmul+1
  7841     0B0D  01B8               	clrf	??___flmul+2
  7842     0B0E  01B9               	clrf	??___flmul+3
  7843     0B0F  0836               	movf	??___flmul,w
  7844     0B10  07C2               	addwf	___flmul@prod,f
  7845     0B11  0837               	movf	??___flmul+1,w
  7846     0B12  1103               	clrz
  7847     0B13  1803               	skipnc
  7848     0B14  3E01               	addlw	1
  7849     0B15  1903               	skipnz
  7850     0B16  2B18               	goto	u3851
  7851     0B17  07C3               	addwf	___flmul@prod+1,f
  7852     0B18                     u3851:
  7853     0B18  0838               	movf	??___flmul+2,w
  7854     0B19  1103               	clrz
  7855     0B1A  1803               	skipnc
  7856     0B1B  3E01               	addlw	1
  7857     0B1C  1903               	skipnz
  7858     0B1D  2B1F               	goto	u3852
  7859     0B1E  07C4               	addwf	___flmul@prod+2,f
  7860     0B1F                     u3852:
  7861     0B1F  0839               	movf	??___flmul+3,w
  7862     0B20  1103               	clrz
  7863     0B21  1803               	skipnc
  7864     0B22  3E01               	addlw	1
  7865     0B23  1903               	skipnz
  7866     0B24  2B26               	goto	u3853
  7867     0B25  07C5               	addwf	___flmul@prod+3,f
  7868     0B26                     u3853:
  7869     0B26                     l2736:
  7870     0B26  0830               	movf	___flmul@b+2,w
  7871     0B27  00A0               	movwf	__Umul8_16@multiplicand
  7872     0B28  0833               	movf	___flmul@a+1,w
  7873     0B29  160A  118A  20C0  120A  158A  	fcall	__Umul8_16
  7874     0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  7875     0B2F  1303               	bcf	3,6	;RP1=0, select bank0
  7876     0B30  0821               	movf	?__Umul8_16+1,w
  7877     0B31  00C7               	movwf	___flmul@temp+1
  7878     0B32  0820               	movf	?__Umul8_16,w
  7879     0B33  00C6               	movwf	___flmul@temp
  7880     0B34                     l2738:
  7881     0B34  0846               	movf	___flmul@temp,w
  7882     0B35  00B6               	movwf	??___flmul
  7883     0B36  0847               	movf	___flmul@temp+1,w
  7884     0B37  00B7               	movwf	??___flmul+1
  7885     0B38  01B8               	clrf	??___flmul+2
  7886     0B39  01B9               	clrf	??___flmul+3
  7887     0B3A  0836               	movf	??___flmul,w
  7888     0B3B  07C2               	addwf	___flmul@prod,f
  7889     0B3C  0837               	movf	??___flmul+1,w
  7890     0B3D  1103               	clrz
  7891     0B3E  1803               	skipnc
  7892     0B3F  3E01               	addlw	1
  7893     0B40  1903               	skipnz
  7894     0B41  2B43               	goto	u3861
  7895     0B42  07C3               	addwf	___flmul@prod+1,f
  7896     0B43                     u3861:
  7897     0B43  0838               	movf	??___flmul+2,w
  7898     0B44  1103               	clrz
  7899     0B45  1803               	skipnc
  7900     0B46  3E01               	addlw	1
  7901     0B47  1903               	skipnz
  7902     0B48  2B4A               	goto	u3862
  7903     0B49  07C4               	addwf	___flmul@prod+2,f
  7904     0B4A                     u3862:
  7905     0B4A  0839               	movf	??___flmul+3,w
  7906     0B4B  1103               	clrz
  7907     0B4C  1803               	skipnc
  7908     0B4D  3E01               	addlw	1
  7909     0B4E  1903               	skipnz
  7910     0B4F  2B51               	goto	u3863
  7911     0B50  07C5               	addwf	___flmul@prod+3,f
  7912     0B51                     u3863:
  7913     0B51  0830               	movf	___flmul@b+2,w
  7914     0B52  00A0               	movwf	__Umul8_16@multiplicand
  7915     0B53  0834               	movf	___flmul@a+2,w
  7916     0B54  160A  118A  20C0  120A  158A  	fcall	__Umul8_16
  7917     0B59  1283               	bcf	3,5	;RP0=0, select bank0
  7918     0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  7919     0B5B  0821               	movf	?__Umul8_16+1,w
  7920     0B5C  00C7               	movwf	___flmul@temp+1
  7921     0B5D  0820               	movf	?__Umul8_16,w
  7922     0B5E  00C6               	movwf	___flmul@temp
  7923     0B5F                     l2740:
  7924     0B5F  0846               	movf	___flmul@temp,w
  7925     0B60  00B6               	movwf	??___flmul
  7926     0B61  0847               	movf	___flmul@temp+1,w
  7927     0B62  00B7               	movwf	??___flmul+1
  7928     0B63  01B8               	clrf	??___flmul+2
  7929     0B64  01B9               	clrf	??___flmul+3
  7930     0B65  3008               	movlw	8
  7931     0B66                     u3875:
  7932     0B66  1003               	clrc
  7933     0B67  0DB6               	rlf	??___flmul,f
  7934     0B68  0DB7               	rlf	??___flmul+1,f
  7935     0B69  0DB8               	rlf	??___flmul+2,f
  7936     0B6A  0DB9               	rlf	??___flmul+3,f
  7937     0B6B                     u3870:
  7938     0B6B  3EFF               	addlw	-1
  7939     0B6C  1D03               	skipz
  7940     0B6D  2B66               	goto	u3875
  7941     0B6E  0836               	movf	??___flmul,w
  7942     0B6F  07C2               	addwf	___flmul@prod,f
  7943     0B70  0837               	movf	??___flmul+1,w
  7944     0B71  1103               	clrz
  7945     0B72  1803               	skipnc
  7946     0B73  3E01               	addlw	1
  7947     0B74  1903               	skipnz
  7948     0B75  2B77               	goto	u3881
  7949     0B76  07C3               	addwf	___flmul@prod+1,f
  7950     0B77                     u3881:
  7951     0B77  0838               	movf	??___flmul+2,w
  7952     0B78  1103               	clrz
  7953     0B79  1803               	skipnc
  7954     0B7A  3E01               	addlw	1
  7955     0B7B  1903               	skipnz
  7956     0B7C  2B7E               	goto	u3882
  7957     0B7D  07C4               	addwf	___flmul@prod+2,f
  7958     0B7E                     u3882:
  7959     0B7E  0839               	movf	??___flmul+3,w
  7960     0B7F  1103               	clrz
  7961     0B80  1803               	skipnc
  7962     0B81  3E01               	addlw	1
  7963     0B82  1903               	skipnz
  7964     0B83  2B85               	goto	u3883
  7965     0B84  07C5               	addwf	___flmul@prod+3,f
  7966     0B85                     u3883:
  7967     0B85                     l2742:
  7968     0B85  083C               	movf	___flmul@grs,w
  7969     0B86  00B6               	movwf	??___flmul
  7970     0B87  083D               	movf	___flmul@grs+1,w
  7971     0B88  00B7               	movwf	??___flmul+1
  7972     0B89  083E               	movf	___flmul@grs+2,w
  7973     0B8A  00B8               	movwf	??___flmul+2
  7974     0B8B  083F               	movf	___flmul@grs+3,w
  7975     0B8C  00B9               	movwf	??___flmul+3
  7976     0B8D  3018               	movlw	24
  7977     0B8E                     u3895:
  7978     0B8E  1003               	clrc
  7979     0B8F  0CB9               	rrf	??___flmul+3,f
  7980     0B90  0CB8               	rrf	??___flmul+2,f
  7981     0B91  0CB7               	rrf	??___flmul+1,f
  7982     0B92  0CB6               	rrf	??___flmul,f
  7983     0B93                     u3890:
  7984     0B93  3EFF               	addlw	-1
  7985     0B94  1D03               	skipz
  7986     0B95  2B8E               	goto	u3895
  7987     0B96  0836               	movf	??___flmul,w
  7988     0B97  07C2               	addwf	___flmul@prod,f
  7989     0B98  0837               	movf	??___flmul+1,w
  7990     0B99  1103               	clrz
  7991     0B9A  1803               	skipnc
  7992     0B9B  3E01               	addlw	1
  7993     0B9C  1903               	skipnz
  7994     0B9D  2B9F               	goto	u3901
  7995     0B9E  07C3               	addwf	___flmul@prod+1,f
  7996     0B9F                     u3901:
  7997     0B9F  0838               	movf	??___flmul+2,w
  7998     0BA0  1103               	clrz
  7999     0BA1  1803               	skipnc
  8000     0BA2  3E01               	addlw	1
  8001     0BA3  1903               	skipnz
  8002     0BA4  2BA6               	goto	u3902
  8003     0BA5  07C4               	addwf	___flmul@prod+2,f
  8004     0BA6                     u3902:
  8005     0BA6  0839               	movf	??___flmul+3,w
  8006     0BA7  1103               	clrz
  8007     0BA8  1803               	skipnc
  8008     0BA9  3E01               	addlw	1
  8009     0BAA  1903               	skipnz
  8010     0BAB  2BAD               	goto	u3903
  8011     0BAC  07C5               	addwf	___flmul@prod+3,f
  8012     0BAD                     u3903:
  8013     0BAD                     l2744:
  8014     0BAD  3008               	movlw	8
  8015     0BAE  00B6               	movwf	??___flmul
  8016     0BAF                     u3915:
  8017     0BAF  1003               	clrc
  8018     0BB0  0DBC               	rlf	___flmul@grs,f
  8019     0BB1  0DBD               	rlf	___flmul@grs+1,f
  8020     0BB2  0DBE               	rlf	___flmul@grs+2,f
  8021     0BB3  0DBF               	rlf	___flmul@grs+3,f
  8022     0BB4  0BB6               	decfsz	??___flmul,f
  8023     0BB5  2BAF               	goto	u3915
  8024     0BB6                     l2746:
  8025     0BB6  0841               	movf	___flmul@bexp,w
  8026     0BB7  0740               	addwf	___flmul@aexp,w
  8027     0BB8  00B6               	movwf	??___flmul
  8028     0BB9  01B7               	clrf	??___flmul+1
  8029     0BBA  0DB7               	rlf	??___flmul+1,f
  8030     0BBB  0836               	movf	??___flmul,w
  8031     0BBC  3E82               	addlw	130
  8032     0BBD  00C6               	movwf	___flmul@temp
  8033     0BBE  0837               	movf	??___flmul+1,w
  8034     0BBF  1803               	skipnc
  8035     0BC0  3E01               	addlw	1
  8036     0BC1  3EFF               	addlw	255
  8037     0BC2  00C7               	movwf	___flmul@temp+1
  8038     0BC3  2BE1               	goto	l2758
  8039     0BC4                     l2748:
  8040     0BC4  3001               	movlw	1
  8041     0BC5  00B6               	movwf	??___flmul
  8042     0BC6                     u3925:
  8043     0BC6  1003               	clrc
  8044     0BC7  0DC2               	rlf	___flmul@prod,f
  8045     0BC8  0DC3               	rlf	___flmul@prod+1,f
  8046     0BC9  0DC4               	rlf	___flmul@prod+2,f
  8047     0BCA  0DC5               	rlf	___flmul@prod+3,f
  8048     0BCB  0BB6               	decfsz	??___flmul,f
  8049     0BCC  2BC6               	goto	u3925
  8050     0BCD                     l2750:
  8051     0BCD  1FBF               	btfss	___flmul@grs+3,7
  8052     0BCE  2BD0               	goto	u3931
  8053     0BCF  2BD1               	goto	u3930
  8054     0BD0                     u3931:
  8055     0BD0  2BD2               	goto	l2754
  8056     0BD1                     u3930:
  8057     0BD1                     l2752:
  8058     0BD1  1442               	bsf	___flmul@prod,0
  8059     0BD2                     l2754:
  8060     0BD2  3001               	movlw	1
  8061     0BD3  00B6               	movwf	??___flmul
  8062     0BD4                     u3945:
  8063     0BD4  1003               	clrc
  8064     0BD5  0DBC               	rlf	___flmul@grs,f
  8065     0BD6  0DBD               	rlf	___flmul@grs+1,f
  8066     0BD7  0DBE               	rlf	___flmul@grs+2,f
  8067     0BD8  0DBF               	rlf	___flmul@grs+3,f
  8068     0BD9  0BB6               	decfsz	??___flmul,f
  8069     0BDA  2BD4               	goto	u3945
  8070     0BDB                     l2756:
  8071     0BDB  30FF               	movlw	255
  8072     0BDC  07C6               	addwf	___flmul@temp,f
  8073     0BDD  1803               	skipnc
  8074     0BDE  0AC7               	incf	___flmul@temp+1,f
  8075     0BDF  30FF               	movlw	255
  8076     0BE0  07C7               	addwf	___flmul@temp+1,f
  8077     0BE1                     l2758:
  8078     0BE1  1FC4               	btfss	___flmul@prod+2,7
  8079     0BE2  2BE4               	goto	u3951
  8080     0BE3  2BE5               	goto	u3950
  8081     0BE4                     u3951:
  8082     0BE4  2BC4               	goto	l2748
  8083     0BE5                     u3950:
  8084     0BE5                     l2760:
  8085     0BE5  01C0               	clrf	___flmul@aexp
  8086     0BE6                     l2762:
  8087     0BE6  1FBF               	btfss	___flmul@grs+3,7
  8088     0BE7  2BE9               	goto	u3961
  8089     0BE8  2BEA               	goto	u3960
  8090     0BE9                     u3961:
  8091     0BE9  2C06               	goto	l2770
  8092     0BEA                     u3960:
  8093     0BEA                     l2764:
  8094     0BEA  30FF               	movlw	255
  8095     0BEB  053C               	andwf	___flmul@grs,w
  8096     0BEC  00B6               	movwf	??___flmul
  8097     0BED  30FF               	movlw	255
  8098     0BEE  053D               	andwf	___flmul@grs+1,w
  8099     0BEF  00B7               	movwf	??___flmul+1
  8100     0BF0  30FF               	movlw	255
  8101     0BF1  053E               	andwf	___flmul@grs+2,w
  8102     0BF2  00B8               	movwf	??___flmul+2
  8103     0BF3  307F               	movlw	127
  8104     0BF4  053F               	andwf	___flmul@grs+3,w
  8105     0BF5  00B9               	movwf	??___flmul+3
  8106     0BF6  0839               	movf	??___flmul+3,w
  8107     0BF7  0438               	iorwf	??___flmul+2,w
  8108     0BF8  0437               	iorwf	??___flmul+1,w
  8109     0BF9  0436               	iorwf	??___flmul,w
  8110     0BFA  1903               	skipnz
  8111     0BFB  2BFD               	goto	u3971
  8112     0BFC  2BFE               	goto	u3970
  8113     0BFD                     u3971:
  8114     0BFD  2C01               	goto	l660
  8115     0BFE                     u3970:
  8116     0BFE                     l2766:
  8117     0BFE  3001               	movlw	1
  8118     0BFF  00C0               	movwf	___flmul@aexp
  8119     0C00  2C06               	goto	l2770
  8120     0C01                     l660:
  8121     0C01  1C42               	btfss	___flmul@prod,0
  8122     0C02  2C04               	goto	u3981
  8123     0C03  2C05               	goto	u3980
  8124     0C04                     u3981:
  8125     0C04  2C06               	goto	l2770
  8126     0C05                     u3980:
  8127     0C05  2BFE               	goto	l2766
  8128     0C06                     l2770:
  8129     0C06  0840               	movf	___flmul@aexp,w
  8130     0C07  1903               	btfsc	3,2
  8131     0C08  2C0A               	goto	u3991
  8132     0C09  2C0B               	goto	u3990
  8133     0C0A                     u3991:
  8134     0C0A  2C3C               	goto	l2780
  8135     0C0B                     u3990:
  8136     0C0B                     l2772:
  8137     0C0B  3001               	movlw	1
  8138     0C0C  07C2               	addwf	___flmul@prod,f
  8139     0C0D  3000               	movlw	0
  8140     0C0E  1803               	skipnc
  8141     0C0F  3001               	movlw	1
  8142     0C10  07C3               	addwf	___flmul@prod+1,f
  8143     0C11  3000               	movlw	0
  8144     0C12  1803               	skipnc
  8145     0C13  3001               	movlw	1
  8146     0C14  07C4               	addwf	___flmul@prod+2,f
  8147     0C15  3000               	movlw	0
  8148     0C16  1803               	skipnc
  8149     0C17  3001               	movlw	1
  8150     0C18  07C5               	addwf	___flmul@prod+3,f
  8151     0C19                     l2774:
  8152     0C19  1C45               	btfss	___flmul@prod+3,0
  8153     0C1A  2C1C               	goto	u4001
  8154     0C1B  2C1D               	goto	u4000
  8155     0C1C                     u4001:
  8156     0C1C  2C3C               	goto	l2780
  8157     0C1D                     u4000:
  8158     0C1D                     l2776:
  8159     0C1D  0842               	movf	___flmul@prod,w
  8160     0C1E  00B6               	movwf	??___flmul
  8161     0C1F  0843               	movf	___flmul@prod+1,w
  8162     0C20  00B7               	movwf	??___flmul+1
  8163     0C21  0844               	movf	___flmul@prod+2,w
  8164     0C22  00B8               	movwf	??___flmul+2
  8165     0C23  0845               	movf	___flmul@prod+3,w
  8166     0C24  00B9               	movwf	??___flmul+3
  8167     0C25  3001               	movlw	1
  8168     0C26  00BA               	movwf	??___flmul+4
  8169     0C27                     u4015:
  8170     0C27  0D39               	rlf	??___flmul+3,w
  8171     0C28  0CB9               	rrf	??___flmul+3,f
  8172     0C29  0CB8               	rrf	??___flmul+2,f
  8173     0C2A  0CB7               	rrf	??___flmul+1,f
  8174     0C2B  0CB6               	rrf	??___flmul,f
  8175     0C2C                     u4010:
  8176     0C2C  0BBA               	decfsz	??___flmul+4,f
  8177     0C2D  2C27               	goto	u4015
  8178     0C2E  0839               	movf	??___flmul+3,w
  8179     0C2F  00C5               	movwf	___flmul@prod+3
  8180     0C30  0838               	movf	??___flmul+2,w
  8181     0C31  00C4               	movwf	___flmul@prod+2
  8182     0C32  0837               	movf	??___flmul+1,w
  8183     0C33  00C3               	movwf	___flmul@prod+1
  8184     0C34  0836               	movf	??___flmul,w
  8185     0C35  00C2               	movwf	___flmul@prod
  8186     0C36                     l2778:
  8187     0C36  3001               	movlw	1
  8188     0C37  07C6               	addwf	___flmul@temp,f
  8189     0C38  1803               	skipnc
  8190     0C39  0AC7               	incf	___flmul@temp+1,f
  8191     0C3A  3000               	movlw	0
  8192     0C3B  07C7               	addwf	___flmul@temp+1,f
  8193     0C3C                     l2780:
  8194     0C3C  0847               	movf	___flmul@temp+1,w
  8195     0C3D  3A80               	xorlw	128
  8196     0C3E  00FF               	movwf	btemp+1
  8197     0C3F  3080               	movlw	128
  8198     0C40  027F               	subwf	btemp+1,w
  8199     0C41  1D03               	skipz
  8200     0C42  2C45               	goto	u4025
  8201     0C43  30FF               	movlw	255
  8202     0C44  0246               	subwf	___flmul@temp,w
  8203     0C45                     u4025:
  8204     0C45  1C03               	skipc
  8205     0C46  2C48               	goto	u4021
  8206     0C47  2C49               	goto	u4020
  8207     0C48                     u4021:
  8208     0C48  2C54               	goto	l2784
  8209     0C49                     u4020:
  8210     0C49                     l2782:
  8211     0C49  307F               	movlw	127
  8212     0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  8213     0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  8214     0C4C  00C5               	movwf	___flmul@prod+3
  8215     0C4D  3080               	movlw	128
  8216     0C4E  00C4               	movwf	___flmul@prod+2
  8217     0C4F  3000               	movlw	0
  8218     0C50  00C3               	movwf	___flmul@prod+1
  8219     0C51  3000               	movlw	0
  8220     0C52  00C2               	movwf	___flmul@prod
  8221     0C53  2C85               	goto	l666
  8222     0C54                     l2784:
  8223     0C54  1283               	bcf	3,5	;RP0=0, select bank0
  8224     0C55  1303               	bcf	3,6	;RP1=0, select bank0
  8225     0C56  0847               	movf	___flmul@temp+1,w
  8226     0C57  3A80               	xorlw	128
  8227     0C58  00FF               	movwf	btemp+1
  8228     0C59  3080               	movlw	128
  8229     0C5A  027F               	subwf	btemp+1,w
  8230     0C5B  1D03               	skipz
  8231     0C5C  2C5F               	goto	u4035
  8232     0C5D  3001               	movlw	1
  8233     0C5E  0246               	subwf	___flmul@temp,w
  8234     0C5F                     u4035:
  8235     0C5F  1803               	skipnc
  8236     0C60  2C62               	goto	u4031
  8237     0C61  2C63               	goto	u4030
  8238     0C62                     u4031:
  8239     0C62  2C6F               	goto	l2790
  8240     0C63                     u4030:
  8241     0C63                     l2786:
  8242     0C63  3000               	movlw	0
  8243     0C64  1283               	bcf	3,5	;RP0=0, select bank0
  8244     0C65  1303               	bcf	3,6	;RP1=0, select bank0
  8245     0C66  00C5               	movwf	___flmul@prod+3
  8246     0C67  3000               	movlw	0
  8247     0C68  00C4               	movwf	___flmul@prod+2
  8248     0C69  3000               	movlw	0
  8249     0C6A  00C3               	movwf	___flmul@prod+1
  8250     0C6B  3000               	movlw	0
  8251     0C6C  00C2               	movwf	___flmul@prod
  8252     0C6D                     l2788:
  8253     0C6D  01BB               	clrf	___flmul@sign
  8254     0C6E  2C85               	goto	l666
  8255     0C6F                     l2790:
  8256     0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  8257     0C70  1303               	bcf	3,6	;RP1=0, select bank0
  8258     0C71  0846               	movf	___flmul@temp,w
  8259     0C72  00C1               	movwf	___flmul@bexp
  8260     0C73  30FF               	movlw	255
  8261     0C74  05C2               	andwf	___flmul@prod,f
  8262     0C75  30FF               	movlw	255
  8263     0C76  05C3               	andwf	___flmul@prod+1,f
  8264     0C77  307F               	movlw	127
  8265     0C78  05C4               	andwf	___flmul@prod+2,f
  8266     0C79  3000               	movlw	0
  8267     0C7A  05C5               	andwf	___flmul@prod+3,f
  8268     0C7B                     l2792:
  8269     0C7B  1C41               	btfss	___flmul@bexp,0
  8270     0C7C  2C7E               	goto	u4041
  8271     0C7D  2C7F               	goto	u4040
  8272     0C7E                     u4041:
  8273     0C7E  2C80               	goto	l2796
  8274     0C7F                     u4040:
  8275     0C7F                     l2794:
  8276     0C7F  17C4               	bsf	___flmul@prod+2,7
  8277     0C80                     l2796:
  8278     0C80  0841               	movf	___flmul@bexp,w
  8279     0C81  00B6               	movwf	??___flmul
  8280     0C82  1003               	clrc
  8281     0C83  0C36               	rrf	??___flmul,w
  8282     0C84  00C5               	movwf	___flmul@prod+3
  8283     0C85                     l666:
  8284     0C85  083B               	movf	___flmul@sign,w
  8285     0C86  04C5               	iorwf	___flmul@prod+3,f
  8286     0C87                     l2798:
  8287     0C87  0845               	movf	___flmul@prod+3,w
  8288     0C88  00B1               	movwf	?___flmul+3
  8289     0C89  0844               	movf	___flmul@prod+2,w
  8290     0C8A  00B0               	movwf	?___flmul+2
  8291     0C8B  0843               	movf	___flmul@prod+1,w
  8292     0C8C  00AF               	movwf	?___flmul+1
  8293     0C8D  0842               	movf	___flmul@prod,w
  8294     0C8E  00AE               	movwf	?___flmul
  8295     0C8F                     l654:
  8296     0C8F  0008               	return
  8297     0C90                     __end_of___flmul:
  8298                           
  8299                           	psect	text29
  8300     10C0                     __ptext29:	
  8301 ;; *************** function __Umul8_16 *****************
  8302 ;; Defined at:
  8303 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;  multiplier      1    wreg     unsigned char 
  8306 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8309 ;;  word_mpld       2    6[BANK0 ] unsigned short 
  8310 ;;  product         2    4[BANK0 ] unsigned short 
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  2    0[BANK0 ] unsigned int 
  8313 ;; Registers used:
  8314 ;;		wreg, status,2, status,0
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8320 ;;      Params:         0       2       0       0       0
  8321 ;;      Locals:         0       5       0       0       0
  8322 ;;      Temps:          0       2       0       0       0
  8323 ;;      Totals:         0       9       0       0       0
  8324 ;;Total ram usage:        9 bytes
  8325 ;; Hardware stack levels used: 1
  8326 ;; Hardware stack levels required when called: 3
  8327 ;; This function calls:
  8328 ;;		Nothing
  8329 ;; This function is called by:
  8330 ;;		___flmul
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334     10C0                     __Umul8_16:	
  8335                           ;psect for function __Umul8_16
  8336                           
  8337                           
  8338                           ;incstack = 0
  8339 ;; hardware stack exceeded
  8340                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8341                           ;__Umul8_16@multiplier stored from wreg
  8342     10C0  1283               	bcf	3,5	;RP0=0, select bank0
  8343     10C1  1303               	bcf	3,6	;RP1=0, select bank0
  8344     10C2  00A8               	movwf	__Umul8_16@multiplier
  8345     10C3                     l2398:
  8346     10C3  01A4               	clrf	__Umul8_16@product
  8347     10C4  01A5               	clrf	__Umul8_16@product+1
  8348     10C5                     l2400:
  8349     10C5  0820               	movf	__Umul8_16@multiplicand,w
  8350     10C6  00A2               	movwf	??__Umul8_16
  8351     10C7  01A3               	clrf	??__Umul8_16+1
  8352     10C8  0822               	movf	??__Umul8_16,w
  8353     10C9  00A6               	movwf	__Umul8_16@word_mpld
  8354     10CA  0823               	movf	??__Umul8_16+1,w
  8355     10CB  00A7               	movwf	__Umul8_16@word_mpld+1
  8356     10CC                     l2402:
  8357     10CC  1C28               	btfss	__Umul8_16@multiplier,0
  8358     10CD  28CF               	goto	u3101
  8359     10CE  28D0               	goto	u3100
  8360     10CF                     u3101:
  8361     10CF  28D6               	goto	l673
  8362     10D0                     u3100:
  8363     10D0                     l2404:
  8364     10D0  0826               	movf	__Umul8_16@word_mpld,w
  8365     10D1  07A4               	addwf	__Umul8_16@product,f
  8366     10D2  1803               	skipnc
  8367     10D3  0AA5               	incf	__Umul8_16@product+1,f
  8368     10D4  0827               	movf	__Umul8_16@word_mpld+1,w
  8369     10D5  07A5               	addwf	__Umul8_16@product+1,f
  8370     10D6                     l673:
  8371     10D6  3001               	movlw	1
  8372     10D7                     u3115:
  8373     10D7  1003               	clrc
  8374     10D8  0DA6               	rlf	__Umul8_16@word_mpld,f
  8375     10D9  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8376     10DA  3EFF               	addlw	-1
  8377     10DB  1D03               	skipz
  8378     10DC  28D7               	goto	u3115
  8379     10DD  1003               	clrc
  8380     10DE  0CA8               	rrf	__Umul8_16@multiplier,f
  8381     10DF                     l2406:
  8382     10DF  0828               	movf	__Umul8_16@multiplier,w
  8383     10E0  1D03               	btfss	3,2
  8384     10E1  28E3               	goto	u3121
  8385     10E2  28E4               	goto	u3120
  8386     10E3                     u3121:
  8387     10E3  28CC               	goto	l2402
  8388     10E4                     u3120:
  8389     10E4                     l2408:
  8390     10E4  0825               	movf	__Umul8_16@product+1,w
  8391     10E5  00A1               	movwf	?__Umul8_16+1
  8392     10E6  0824               	movf	__Umul8_16@product,w
  8393     10E7  00A0               	movwf	?__Umul8_16
  8394     10E8                     l675:
  8395     10E8  0008               	return
  8396     10E9                     __end_of__Umul8_16:
  8397                           
  8398                           	psect	text30
  8399     13E6                     __ptext30:	
  8400 ;; *************** function ___fldiv *****************
  8401 ;; Defined at:
  8402 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;  a               4   40[BANK0 ] unsigned int 
  8405 ;;  b               4   44[BANK0 ] unsigned int 
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;  grs             4   60[BANK0 ] unsigned long 
  8408 ;;  rem             4   53[BANK0 ] unsigned long 
  8409 ;;  new_exp         2   58[BANK0 ] short 
  8410 ;;  aexp            1   65[BANK0 ] unsigned char 
  8411 ;;  bexp            1   64[BANK0 ] unsigned char 
  8412 ;;  sign            1   57[BANK0 ] unsigned char 
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  4   40[BANK0 ] unsigned char 
  8415 ;; Registers used:
  8416 ;;		wreg, status,2, status,0, btemp+1
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8422 ;;      Params:         0       8       0       0       0
  8423 ;;      Locals:         0      13       0       0       0
  8424 ;;      Temps:          0       5       0       0       0
  8425 ;;      Totals:         0      26       0       0       0
  8426 ;;Total ram usage:       26 bytes
  8427 ;; Hardware stack levels used: 1
  8428 ;; Hardware stack levels required when called: 3
  8429 ;; This function calls:
  8430 ;;		Nothing
  8431 ;; This function is called by:
  8432 ;;		_Read_Temperature
  8433 ;;		_efgtoa
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437     13E6                     ___fldiv:	
  8438                           ;psect for function ___fldiv
  8439                           
  8440     13E6                     l2516:	
  8441                           ;incstack = 0
  8442                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8443                           
  8444     13E6  1283               	bcf	3,5	;RP0=0, select bank0
  8445     13E7  1303               	bcf	3,6	;RP1=0, select bank0
  8446     13E8  084F               	movf	___fldiv@b+3,w
  8447     13E9  00D9               	movwf	___fldiv@sign
  8448     13EA                     l2518:
  8449     13EA  3080               	movlw	128
  8450     13EB  05D9               	andwf	___fldiv@sign,f
  8451     13EC                     l2520:
  8452     13EC  084F               	movf	___fldiv@b+3,w
  8453     13ED  00D0               	movwf	??___fldiv
  8454     13EE  0750               	addwf	??___fldiv,w
  8455     13EF  00E0               	movwf	___fldiv@bexp
  8456     13F0                     l2522:
  8457     13F0  1FCE               	btfss	___fldiv@b+2,7
  8458     13F1  2BF3               	goto	u3391
  8459     13F2  2BF4               	goto	u3390
  8460     13F3                     u3391:
  8461     13F3  2BF5               	goto	l2526
  8462     13F4                     u3390:
  8463     13F4                     l2524:
  8464     13F4  1460               	bsf	___fldiv@bexp,0
  8465     13F5                     l2526:
  8466     13F5  0860               	movf	___fldiv@bexp,w
  8467     13F6  1903               	btfsc	3,2
  8468     13F7  2BF9               	goto	u3401
  8469     13F8  2BFA               	goto	u3400
  8470     13F9                     u3401:
  8471     13F9  2C0A               	goto	l2536
  8472     13FA                     u3400:
  8473     13FA                     l2528:
  8474     13FA  0A60               	incf	___fldiv@bexp,w
  8475     13FB  1D03               	btfss	3,2
  8476     13FC  2BFE               	goto	u3411
  8477     13FD  2BFF               	goto	u3410
  8478     13FE                     u3411:
  8479     13FE  2C07               	goto	l2532
  8480     13FF                     u3410:
  8481     13FF                     l2530:
  8482     13FF  3000               	movlw	0
  8483     1400  00CF               	movwf	___fldiv@b+3
  8484     1401  3000               	movlw	0
  8485     1402  00CE               	movwf	___fldiv@b+2
  8486     1403  3000               	movlw	0
  8487     1404  00CD               	movwf	___fldiv@b+1
  8488     1405  3000               	movlw	0
  8489     1406  00CC               	movwf	___fldiv@b
  8490     1407                     l2532:
  8491     1407  17CE               	bsf	___fldiv@b+2,7
  8492     1408                     l2534:
  8493     1408  01CF               	clrf	___fldiv@b+3
  8494     1409  2C12               	goto	l2538
  8495     140A                     l2536:
  8496     140A  3000               	movlw	0
  8497     140B  00CF               	movwf	___fldiv@b+3
  8498     140C  3000               	movlw	0
  8499     140D  00CE               	movwf	___fldiv@b+2
  8500     140E  3000               	movlw	0
  8501     140F  00CD               	movwf	___fldiv@b+1
  8502     1410  3000               	movlw	0
  8503     1411  00CC               	movwf	___fldiv@b
  8504     1412                     l2538:
  8505     1412  084B               	movf	___fldiv@a+3,w
  8506     1413  3980               	andlw	128
  8507     1414  06D9               	xorwf	___fldiv@sign,f
  8508     1415                     l2540:
  8509     1415  084B               	movf	___fldiv@a+3,w
  8510     1416  00D0               	movwf	??___fldiv
  8511     1417  0750               	addwf	??___fldiv,w
  8512     1418  00E1               	movwf	___fldiv@aexp
  8513     1419                     l2542:
  8514     1419  1FCA               	btfss	___fldiv@a+2,7
  8515     141A  2C1C               	goto	u3421
  8516     141B  2C1D               	goto	u3420
  8517     141C                     u3421:
  8518     141C  2C1E               	goto	l2546
  8519     141D                     u3420:
  8520     141D                     l2544:
  8521     141D  1461               	bsf	___fldiv@aexp,0
  8522     141E                     l2546:
  8523     141E  0861               	movf	___fldiv@aexp,w
  8524     141F  1903               	btfsc	3,2
  8525     1420  2C22               	goto	u3431
  8526     1421  2C23               	goto	u3430
  8527     1422                     u3431:
  8528     1422  2C33               	goto	l2556
  8529     1423                     u3430:
  8530     1423                     l2548:
  8531     1423  0A61               	incf	___fldiv@aexp,w
  8532     1424  1D03               	btfss	3,2
  8533     1425  2C27               	goto	u3441
  8534     1426  2C28               	goto	u3440
  8535     1427                     u3441:
  8536     1427  2C30               	goto	l2552
  8537     1428                     u3440:
  8538     1428                     l2550:
  8539     1428  3000               	movlw	0
  8540     1429  00CB               	movwf	___fldiv@a+3
  8541     142A  3000               	movlw	0
  8542     142B  00CA               	movwf	___fldiv@a+2
  8543     142C  3000               	movlw	0
  8544     142D  00C9               	movwf	___fldiv@a+1
  8545     142E  3000               	movlw	0
  8546     142F  00C8               	movwf	___fldiv@a
  8547     1430                     l2552:
  8548     1430  17CA               	bsf	___fldiv@a+2,7
  8549     1431                     l2554:
  8550     1431  01CB               	clrf	___fldiv@a+3
  8551     1432  2C3B               	goto	l614
  8552     1433                     l2556:
  8553     1433  3000               	movlw	0
  8554     1434  00CB               	movwf	___fldiv@a+3
  8555     1435  3000               	movlw	0
  8556     1436  00CA               	movwf	___fldiv@a+2
  8557     1437  3000               	movlw	0
  8558     1438  00C9               	movwf	___fldiv@a+1
  8559     1439  3000               	movlw	0
  8560     143A  00C8               	movwf	___fldiv@a
  8561     143B                     l614:
  8562     143B  084B               	movf	___fldiv@a+3,w
  8563     143C  044A               	iorwf	___fldiv@a+2,w
  8564     143D  0449               	iorwf	___fldiv@a+1,w
  8565     143E  0448               	iorwf	___fldiv@a,w
  8566     143F  1D03               	skipz
  8567     1440  2C42               	goto	u3451
  8568     1441  2C43               	goto	u3450
  8569     1442                     u3451:
  8570     1442  2C5A               	goto	l2566
  8571     1443                     u3450:
  8572     1443                     l2558:
  8573     1443  3000               	movlw	0
  8574     1444  00CF               	movwf	___fldiv@b+3
  8575     1445  3000               	movlw	0
  8576     1446  00CE               	movwf	___fldiv@b+2
  8577     1447  3000               	movlw	0
  8578     1448  00CD               	movwf	___fldiv@b+1
  8579     1449  3000               	movlw	0
  8580     144A  00CC               	movwf	___fldiv@b
  8581     144B  3080               	movlw	128
  8582     144C  04CE               	iorwf	___fldiv@b+2,f
  8583     144D  307F               	movlw	127
  8584     144E  04CF               	iorwf	___fldiv@b+3,f
  8585     144F                     l2560:
  8586     144F  0859               	movf	___fldiv@sign,w
  8587     1450  04CF               	iorwf	___fldiv@b+3,f
  8588     1451                     l2562:
  8589     1451  084F               	movf	___fldiv@b+3,w
  8590     1452  00CB               	movwf	?___fldiv+3
  8591     1453  084E               	movf	___fldiv@b+2,w
  8592     1454  00CA               	movwf	?___fldiv+2
  8593     1455  084D               	movf	___fldiv@b+1,w
  8594     1456  00C9               	movwf	?___fldiv+1
  8595     1457  084C               	movf	___fldiv@b,w
  8596     1458  00C8               	movwf	?___fldiv
  8597     1459  2DAF               	goto	l616
  8598     145A                     l2566:
  8599     145A  0860               	movf	___fldiv@bexp,w
  8600     145B  1D03               	btfss	3,2
  8601     145C  2C5E               	goto	u3461
  8602     145D  2C5F               	goto	u3460
  8603     145E                     u3461:
  8604     145E  2C68               	goto	l2572
  8605     145F                     u3460:
  8606     145F                     l2568:
  8607     145F  3000               	movlw	0
  8608     1460  00CB               	movwf	?___fldiv+3
  8609     1461  3000               	movlw	0
  8610     1462  00CA               	movwf	?___fldiv+2
  8611     1463  3000               	movlw	0
  8612     1464  00C9               	movwf	?___fldiv+1
  8613     1465  3000               	movlw	0
  8614     1466  00C8               	movwf	?___fldiv
  8615     1467  2DAF               	goto	l616
  8616     1468                     l2572:
  8617     1468  0860               	movf	___fldiv@bexp,w
  8618     1469  00D0               	movwf	??___fldiv
  8619     146A  01D1               	clrf	??___fldiv+1
  8620     146B  0851               	movf	??___fldiv+1,w
  8621     146C  00D3               	movwf	??___fldiv+3
  8622     146D  0861               	movf	___fldiv@aexp,w
  8623     146E  0250               	subwf	??___fldiv,w
  8624     146F  00D2               	movwf	??___fldiv+2
  8625     1470  1C03               	skipc
  8626     1471  03D3               	decf	??___fldiv+3,f
  8627     1472  0852               	movf	??___fldiv+2,w
  8628     1473  3E7F               	addlw	127
  8629     1474  00DA               	movwf	___fldiv@new_exp
  8630     1475  0853               	movf	??___fldiv+3,w
  8631     1476  1803               	skipnc
  8632     1477  3E01               	addlw	1
  8633     1478  3E00               	addlw	0
  8634     1479  00DB               	movwf	___fldiv@new_exp+1
  8635     147A                     l2574:
  8636     147A  084F               	movf	___fldiv@b+3,w
  8637     147B  00D8               	movwf	___fldiv@rem+3
  8638     147C  084E               	movf	___fldiv@b+2,w
  8639     147D  00D7               	movwf	___fldiv@rem+2
  8640     147E  084D               	movf	___fldiv@b+1,w
  8641     147F  00D6               	movwf	___fldiv@rem+1
  8642     1480  084C               	movf	___fldiv@b,w
  8643     1481  00D5               	movwf	___fldiv@rem
  8644     1482                     l2576:
  8645     1482  3000               	movlw	0
  8646     1483  00CF               	movwf	___fldiv@b+3
  8647     1484  3000               	movlw	0
  8648     1485  00CE               	movwf	___fldiv@b+2
  8649     1486  3000               	movlw	0
  8650     1487  00CD               	movwf	___fldiv@b+1
  8651     1488  3000               	movlw	0
  8652     1489  00CC               	movwf	___fldiv@b
  8653     148A                     l2578:
  8654     148A  3000               	movlw	0
  8655     148B  00DF               	movwf	___fldiv@grs+3
  8656     148C  3000               	movlw	0
  8657     148D  00DE               	movwf	___fldiv@grs+2
  8658     148E  3000               	movlw	0
  8659     148F  00DD               	movwf	___fldiv@grs+1
  8660     1490  3000               	movlw	0
  8661     1491  00DC               	movwf	___fldiv@grs
  8662     1492                     l2580:
  8663     1492  01E1               	clrf	___fldiv@aexp
  8664     1493  2CDC               	goto	l2600
  8665     1494                     l2582:
  8666     1494  0861               	movf	___fldiv@aexp,w
  8667     1495  1903               	btfsc	3,2
  8668     1496  2C98               	goto	u3471
  8669     1497  2C99               	goto	u3470
  8670     1498                     u3471:
  8671     1498  2CB9               	goto	l2592
  8672     1499                     u3470:
  8673     1499                     l2584:
  8674     1499  3001               	movlw	1
  8675     149A  00D0               	movwf	??___fldiv
  8676     149B                     u3485:
  8677     149B  1003               	clrc
  8678     149C  0DD5               	rlf	___fldiv@rem,f
  8679     149D  0DD6               	rlf	___fldiv@rem+1,f
  8680     149E  0DD7               	rlf	___fldiv@rem+2,f
  8681     149F  0DD8               	rlf	___fldiv@rem+3,f
  8682     14A0  0BD0               	decfsz	??___fldiv,f
  8683     14A1  2C9B               	goto	u3485
  8684     14A2  3001               	movlw	1
  8685     14A3  00D0               	movwf	??___fldiv
  8686     14A4                     u3495:
  8687     14A4  1003               	clrc
  8688     14A5  0DCC               	rlf	___fldiv@b,f
  8689     14A6  0DCD               	rlf	___fldiv@b+1,f
  8690     14A7  0DCE               	rlf	___fldiv@b+2,f
  8691     14A8  0DCF               	rlf	___fldiv@b+3,f
  8692     14A9  0BD0               	decfsz	??___fldiv,f
  8693     14AA  2CA4               	goto	u3495
  8694     14AB                     l2586:
  8695     14AB  1FDF               	btfss	___fldiv@grs+3,7
  8696     14AC  2CAE               	goto	u3501
  8697     14AD  2CAF               	goto	u3500
  8698     14AE                     u3501:
  8699     14AE  2CB0               	goto	l2590
  8700     14AF                     u3500:
  8701     14AF                     l2588:
  8702     14AF  144C               	bsf	___fldiv@b,0
  8703     14B0                     l2590:
  8704     14B0  3001               	movlw	1
  8705     14B1  00D0               	movwf	??___fldiv
  8706     14B2                     u3515:
  8707     14B2  1003               	clrc
  8708     14B3  0DDC               	rlf	___fldiv@grs,f
  8709     14B4  0DDD               	rlf	___fldiv@grs+1,f
  8710     14B5  0DDE               	rlf	___fldiv@grs+2,f
  8711     14B6  0DDF               	rlf	___fldiv@grs+3,f
  8712     14B7  0BD0               	decfsz	??___fldiv,f
  8713     14B8  2CB2               	goto	u3515
  8714     14B9                     l2592:
  8715     14B9  084B               	movf	___fldiv@a+3,w
  8716     14BA  0258               	subwf	___fldiv@rem+3,w
  8717     14BB  1D03               	skipz
  8718     14BC  2CC7               	goto	u3525
  8719     14BD  084A               	movf	___fldiv@a+2,w
  8720     14BE  0257               	subwf	___fldiv@rem+2,w
  8721     14BF  1D03               	skipz
  8722     14C0  2CC7               	goto	u3525
  8723     14C1  0849               	movf	___fldiv@a+1,w
  8724     14C2  0256               	subwf	___fldiv@rem+1,w
  8725     14C3  1D03               	skipz
  8726     14C4  2CC7               	goto	u3525
  8727     14C5  0848               	movf	___fldiv@a,w
  8728     14C6  0255               	subwf	___fldiv@rem,w
  8729     14C7                     u3525:
  8730     14C7  1C03               	skipc
  8731     14C8  2CCA               	goto	u3521
  8732     14C9  2CCB               	goto	u3520
  8733     14CA                     u3521:
  8734     14CA  2CDA               	goto	l2598
  8735     14CB                     u3520:
  8736     14CB                     l2594:
  8737     14CB  175F               	bsf	___fldiv@grs+3,6
  8738     14CC                     l2596:
  8739     14CC  0848               	movf	___fldiv@a,w
  8740     14CD  02D5               	subwf	___fldiv@rem,f
  8741     14CE  0849               	movf	___fldiv@a+1,w
  8742     14CF  1C03               	skipc
  8743     14D0  0F49               	incfsz	___fldiv@a+1,w
  8744     14D1  02D6               	subwf	___fldiv@rem+1,f
  8745     14D2  084A               	movf	___fldiv@a+2,w
  8746     14D3  1C03               	skipc
  8747     14D4  0F4A               	incfsz	___fldiv@a+2,w
  8748     14D5  02D7               	subwf	___fldiv@rem+2,f
  8749     14D6  084B               	movf	___fldiv@a+3,w
  8750     14D7  1C03               	skipc
  8751     14D8  0F4B               	incfsz	___fldiv@a+3,w
  8752     14D9  02D8               	subwf	___fldiv@rem+3,f
  8753     14DA                     l2598:
  8754     14DA  3001               	movlw	1
  8755     14DB  07E1               	addwf	___fldiv@aexp,f
  8756     14DC                     l2600:
  8757     14DC  301A               	movlw	26
  8758     14DD  0261               	subwf	___fldiv@aexp,w
  8759     14DE  1C03               	skipc
  8760     14DF  2CE1               	goto	u3531
  8761     14E0  2CE2               	goto	u3530
  8762     14E1                     u3531:
  8763     14E1  2C94               	goto	l2582
  8764     14E2                     u3530:
  8765     14E2                     l2602:
  8766     14E2  0858               	movf	___fldiv@rem+3,w
  8767     14E3  0457               	iorwf	___fldiv@rem+2,w
  8768     14E4  0456               	iorwf	___fldiv@rem+1,w
  8769     14E5  0455               	iorwf	___fldiv@rem,w
  8770     14E6  1903               	skipnz
  8771     14E7  2CE9               	goto	u3541
  8772     14E8  2CEA               	goto	u3540
  8773     14E9                     u3541:
  8774     14E9  2D09               	goto	l2616
  8775     14EA                     u3540:
  8776     14EA                     l2604:
  8777     14EA  145C               	bsf	___fldiv@grs,0
  8778     14EB  2D09               	goto	l2616
  8779     14EC                     l2606:
  8780     14EC  3001               	movlw	1
  8781     14ED  00D0               	movwf	??___fldiv
  8782     14EE                     u3555:
  8783     14EE  1003               	clrc
  8784     14EF  0DCC               	rlf	___fldiv@b,f
  8785     14F0  0DCD               	rlf	___fldiv@b+1,f
  8786     14F1  0DCE               	rlf	___fldiv@b+2,f
  8787     14F2  0DCF               	rlf	___fldiv@b+3,f
  8788     14F3  0BD0               	decfsz	??___fldiv,f
  8789     14F4  2CEE               	goto	u3555
  8790     14F5                     l2608:
  8791     14F5  1FDF               	btfss	___fldiv@grs+3,7
  8792     14F6  2CF8               	goto	u3561
  8793     14F7  2CF9               	goto	u3560
  8794     14F8                     u3561:
  8795     14F8  2CFA               	goto	l2612
  8796     14F9                     u3560:
  8797     14F9                     l2610:
  8798     14F9  144C               	bsf	___fldiv@b,0
  8799     14FA                     l2612:
  8800     14FA  3001               	movlw	1
  8801     14FB  00D0               	movwf	??___fldiv
  8802     14FC                     u3575:
  8803     14FC  1003               	clrc
  8804     14FD  0DDC               	rlf	___fldiv@grs,f
  8805     14FE  0DDD               	rlf	___fldiv@grs+1,f
  8806     14FF  0DDE               	rlf	___fldiv@grs+2,f
  8807     1500  0DDF               	rlf	___fldiv@grs+3,f
  8808     1501  0BD0               	decfsz	??___fldiv,f
  8809     1502  2CFC               	goto	u3575
  8810     1503                     l2614:
  8811     1503  30FF               	movlw	255
  8812     1504  07DA               	addwf	___fldiv@new_exp,f
  8813     1505  1803               	skipnc
  8814     1506  0ADB               	incf	___fldiv@new_exp+1,f
  8815     1507  30FF               	movlw	255
  8816     1508  07DB               	addwf	___fldiv@new_exp+1,f
  8817     1509                     l2616:
  8818     1509  1FCE               	btfss	___fldiv@b+2,7
  8819     150A  2D0C               	goto	u3581
  8820     150B  2D0D               	goto	u3580
  8821     150C                     u3581:
  8822     150C  2CEC               	goto	l2606
  8823     150D                     u3580:
  8824     150D                     l2618:
  8825     150D  01E1               	clrf	___fldiv@aexp
  8826     150E                     l2620:
  8827     150E  1FDF               	btfss	___fldiv@grs+3,7
  8828     150F  2D11               	goto	u3591
  8829     1510  2D12               	goto	u3590
  8830     1511                     u3591:
  8831     1511  2D2E               	goto	l2628
  8832     1512                     u3590:
  8833     1512                     l2622:
  8834     1512  30FF               	movlw	255
  8835     1513  055C               	andwf	___fldiv@grs,w
  8836     1514  00D0               	movwf	??___fldiv
  8837     1515  30FF               	movlw	255
  8838     1516  055D               	andwf	___fldiv@grs+1,w
  8839     1517  00D1               	movwf	??___fldiv+1
  8840     1518  30FF               	movlw	255
  8841     1519  055E               	andwf	___fldiv@grs+2,w
  8842     151A  00D2               	movwf	??___fldiv+2
  8843     151B  307F               	movlw	127
  8844     151C  055F               	andwf	___fldiv@grs+3,w
  8845     151D  00D3               	movwf	??___fldiv+3
  8846     151E  0853               	movf	??___fldiv+3,w
  8847     151F  0452               	iorwf	??___fldiv+2,w
  8848     1520  0451               	iorwf	??___fldiv+1,w
  8849     1521  0450               	iorwf	??___fldiv,w
  8850     1522  1903               	skipnz
  8851     1523  2D25               	goto	u3601
  8852     1524  2D26               	goto	u3600
  8853     1525                     u3601:
  8854     1525  2D29               	goto	l630
  8855     1526                     u3600:
  8856     1526                     l2624:
  8857     1526  3001               	movlw	1
  8858     1527  00E1               	movwf	___fldiv@aexp
  8859     1528  2D2E               	goto	l2628
  8860     1529                     l630:
  8861     1529  1C4C               	btfss	___fldiv@b,0
  8862     152A  2D2C               	goto	u3611
  8863     152B  2D2D               	goto	u3610
  8864     152C                     u3611:
  8865     152C  2D2E               	goto	l2628
  8866     152D                     u3610:
  8867     152D  2D26               	goto	l2624
  8868     152E                     l2628:
  8869     152E  0861               	movf	___fldiv@aexp,w
  8870     152F  1903               	btfsc	3,2
  8871     1530  2D32               	goto	u3621
  8872     1531  2D33               	goto	u3620
  8873     1532                     u3621:
  8874     1532  2D64               	goto	l2638
  8875     1533                     u3620:
  8876     1533                     l2630:
  8877     1533  3001               	movlw	1
  8878     1534  07CC               	addwf	___fldiv@b,f
  8879     1535  3000               	movlw	0
  8880     1536  1803               	skipnc
  8881     1537  3001               	movlw	1
  8882     1538  07CD               	addwf	___fldiv@b+1,f
  8883     1539  3000               	movlw	0
  8884     153A  1803               	skipnc
  8885     153B  3001               	movlw	1
  8886     153C  07CE               	addwf	___fldiv@b+2,f
  8887     153D  3000               	movlw	0
  8888     153E  1803               	skipnc
  8889     153F  3001               	movlw	1
  8890     1540  07CF               	addwf	___fldiv@b+3,f
  8891     1541                     l2632:
  8892     1541  1C4F               	btfss	___fldiv@b+3,0
  8893     1542  2D44               	goto	u3631
  8894     1543  2D45               	goto	u3630
  8895     1544                     u3631:
  8896     1544  2D64               	goto	l2638
  8897     1545                     u3630:
  8898     1545                     l2634:
  8899     1545  084C               	movf	___fldiv@b,w
  8900     1546  00D0               	movwf	??___fldiv
  8901     1547  084D               	movf	___fldiv@b+1,w
  8902     1548  00D1               	movwf	??___fldiv+1
  8903     1549  084E               	movf	___fldiv@b+2,w
  8904     154A  00D2               	movwf	??___fldiv+2
  8905     154B  084F               	movf	___fldiv@b+3,w
  8906     154C  00D3               	movwf	??___fldiv+3
  8907     154D  3001               	movlw	1
  8908     154E  00D4               	movwf	??___fldiv+4
  8909     154F                     u3645:
  8910     154F  0D53               	rlf	??___fldiv+3,w
  8911     1550  0CD3               	rrf	??___fldiv+3,f
  8912     1551  0CD2               	rrf	??___fldiv+2,f
  8913     1552  0CD1               	rrf	??___fldiv+1,f
  8914     1553  0CD0               	rrf	??___fldiv,f
  8915     1554                     u3640:
  8916     1554  0BD4               	decfsz	??___fldiv+4,f
  8917     1555  2D4F               	goto	u3645
  8918     1556  0853               	movf	??___fldiv+3,w
  8919     1557  00CF               	movwf	___fldiv@b+3
  8920     1558  0852               	movf	??___fldiv+2,w
  8921     1559  00CE               	movwf	___fldiv@b+2
  8922     155A  0851               	movf	??___fldiv+1,w
  8923     155B  00CD               	movwf	___fldiv@b+1
  8924     155C  0850               	movf	??___fldiv,w
  8925     155D  00CC               	movwf	___fldiv@b
  8926     155E                     l2636:
  8927     155E  3001               	movlw	1
  8928     155F  07DA               	addwf	___fldiv@new_exp,f
  8929     1560  1803               	skipnc
  8930     1561  0ADB               	incf	___fldiv@new_exp+1,f
  8931     1562  3000               	movlw	0
  8932     1563  07DB               	addwf	___fldiv@new_exp+1,f
  8933     1564                     l2638:
  8934     1564  085B               	movf	___fldiv@new_exp+1,w
  8935     1565  3A80               	xorlw	128
  8936     1566  00FF               	movwf	btemp+1
  8937     1567  3080               	movlw	128
  8938     1568  027F               	subwf	btemp+1,w
  8939     1569  1D03               	skipz
  8940     156A  2D6D               	goto	u3655
  8941     156B  30FF               	movlw	255
  8942     156C  025A               	subwf	___fldiv@new_exp,w
  8943     156D                     u3655:
  8944     156D  1C03               	skipc
  8945     156E  2D70               	goto	u3651
  8946     156F  2D71               	goto	u3650
  8947     1570                     u3651:
  8948     1570  2D7F               	goto	l2642
  8949     1571                     u3650:
  8950     1571                     l2640:
  8951     1571  30FF               	movlw	255
  8952     1572  1283               	bcf	3,5	;RP0=0, select bank0
  8953     1573  1303               	bcf	3,6	;RP1=0, select bank0
  8954     1574  00DA               	movwf	___fldiv@new_exp
  8955     1575  3000               	movlw	0
  8956     1576  00DB               	movwf	___fldiv@new_exp+1
  8957     1577  3000               	movlw	0
  8958     1578  00CF               	movwf	___fldiv@b+3
  8959     1579  3000               	movlw	0
  8960     157A  00CE               	movwf	___fldiv@b+2
  8961     157B  3000               	movlw	0
  8962     157C  00CD               	movwf	___fldiv@b+1
  8963     157D  3000               	movlw	0
  8964     157E  00CC               	movwf	___fldiv@b
  8965     157F                     l2642:
  8966     157F  1283               	bcf	3,5	;RP0=0, select bank0
  8967     1580  1303               	bcf	3,6	;RP1=0, select bank0
  8968     1581  085B               	movf	___fldiv@new_exp+1,w
  8969     1582  3A80               	xorlw	128
  8970     1583  00FF               	movwf	btemp+1
  8971     1584  3080               	movlw	128
  8972     1585  027F               	subwf	btemp+1,w
  8973     1586  1D03               	skipz
  8974     1587  2D8A               	goto	u3665
  8975     1588  3001               	movlw	1
  8976     1589  025A               	subwf	___fldiv@new_exp,w
  8977     158A                     u3665:
  8978     158A  1803               	skipnc
  8979     158B  2D8D               	goto	u3661
  8980     158C  2D8E               	goto	u3660
  8981     158D                     u3661:
  8982     158D  2D9B               	goto	l636
  8983     158E                     u3660:
  8984     158E                     l2644:
  8985     158E  1283               	bcf	3,5	;RP0=0, select bank0
  8986     158F  1303               	bcf	3,6	;RP1=0, select bank0
  8987     1590  01DA               	clrf	___fldiv@new_exp
  8988     1591  01DB               	clrf	___fldiv@new_exp+1
  8989     1592                     l2646:
  8990     1592  3000               	movlw	0
  8991     1593  00CF               	movwf	___fldiv@b+3
  8992     1594  3000               	movlw	0
  8993     1595  00CE               	movwf	___fldiv@b+2
  8994     1596  3000               	movlw	0
  8995     1597  00CD               	movwf	___fldiv@b+1
  8996     1598  3000               	movlw	0
  8997     1599  00CC               	movwf	___fldiv@b
  8998     159A                     l2648:
  8999     159A  01D9               	clrf	___fldiv@sign
  9000     159B                     l636:
  9001     159B  1283               	bcf	3,5	;RP0=0, select bank0
  9002     159C  1303               	bcf	3,6	;RP1=0, select bank0
  9003     159D  085A               	movf	___fldiv@new_exp,w
  9004     159E  00E0               	movwf	___fldiv@bexp
  9005     159F                     l2650:
  9006     159F  1C60               	btfss	___fldiv@bexp,0
  9007     15A0  2DA2               	goto	u3671
  9008     15A1  2DA3               	goto	u3670
  9009     15A2                     u3671:
  9010     15A2  2DA5               	goto	l2654
  9011     15A3                     u3670:
  9012     15A3                     l2652:
  9013     15A3  17CE               	bsf	___fldiv@b+2,7
  9014     15A4  2DA7               	goto	l638
  9015     15A5                     l2654:
  9016     15A5  307F               	movlw	127
  9017     15A6  05CE               	andwf	___fldiv@b+2,f
  9018     15A7                     l638:
  9019     15A7  0860               	movf	___fldiv@bexp,w
  9020     15A8  00D0               	movwf	??___fldiv
  9021     15A9  1003               	clrc
  9022     15AA  0C50               	rrf	??___fldiv,w
  9023     15AB  00CF               	movwf	___fldiv@b+3
  9024     15AC  0859               	movf	___fldiv@sign,w
  9025     15AD  04CF               	iorwf	___fldiv@b+3,f
  9026     15AE  2C51               	goto	l2562
  9027     15AF                     l616:
  9028     15AF  0008               	return
  9029     15B0                     __end_of___fldiv:
  9030                           
  9031                           	psect	text31
  9032     1ACC                     __ptext31:	
  9033 ;; *************** function _Move_Servo *****************
  9034 ;; Defined at:
  9035 ;;		line 101 in file "main.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;  state           1    wreg     enum E1327
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;  state           1    4[BANK0 ] enum E1327
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  1    wreg      void 
  9042 ;; Registers used:
  9043 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9049 ;;      Params:         0       0       0       0       0
  9050 ;;      Locals:         0       1       0       0       0
  9051 ;;      Temps:          0       0       0       0       0
  9052 ;;      Totals:         0       1       0       0       0
  9053 ;;Total ram usage:        1 bytes
  9054 ;; Hardware stack levels used: 1
  9055 ;; Hardware stack levels required when called: 4
  9056 ;; This function calls:
  9057 ;;		_Servo_MoveTo0
  9058 ;;		_Servo_MoveTo180
  9059 ;; This function is called by:
  9060 ;;		_main
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064     1ACC                     _Move_Servo:	
  9065                           ;psect for function _Move_Servo
  9066                           
  9067                           
  9068                           ;incstack = 0
  9069                           ; Regs used in _Move_Servo: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9070                           ;Move_Servo@state stored from wreg
  9071     1ACC  1283               	bcf	3,5	;RP0=0, select bank0
  9072     1ACD  1303               	bcf	3,6	;RP1=0, select bank0
  9073     1ACE  00A4               	movwf	Move_Servo@state
  9074     1ACF                     l3862:
  9075                           
  9076                           ;main.c: 102:     if(state == ABIERTO) {
  9077     1ACF  0324               	decf	Move_Servo@state,w
  9078     1AD0  1D03               	btfss	3,2
  9079     1AD1  2AD3               	goto	u5761
  9080     1AD2  2AD4               	goto	u5760
  9081     1AD3                     u5761:
  9082     1AD3  2ADA               	goto	l3866
  9083     1AD4                     u5760:
  9084     1AD4                     l3864:
  9085                           
  9086                           ;main.c: 103:         Servo_MoveTo180();
  9087     1AD4  160A  158A  24AF  160A  158A  	fcall	_Servo_MoveTo180
  9088                           
  9089                           ;main.c: 104:     } else {
  9090     1AD9  2ADF               	goto	l117
  9091     1ADA                     l3866:
  9092                           
  9093                           ;main.c: 105:         Servo_MoveTo0();
  9094     1ADA  160A  158A  247B  160A  158A  	fcall	_Servo_MoveTo0
  9095     1ADF                     l117:
  9096     1ADF  0008               	return
  9097     1AE0                     __end_of_Move_Servo:
  9098                           
  9099                           	psect	text32
  9100     1CAF                     __ptext32:	
  9101 ;; *************** function _Servo_MoveTo180 *****************
  9102 ;; Defined at:
  9103 ;;		line 91 in file "main.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;		None
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;  i               2    2[BANK0 ] int 
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1    wreg      void 
  9110 ;; Registers used:
  9111 ;;		wreg, status,2, btemp+1
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9117 ;;      Params:         0       0       0       0       0
  9118 ;;      Locals:         0       2       0       0       0
  9119 ;;      Temps:          0       2       0       0       0
  9120 ;;      Totals:         0       4       0       0       0
  9121 ;;Total ram usage:        4 bytes
  9122 ;; Hardware stack levels used: 1
  9123 ;; Hardware stack levels required when called: 3
  9124 ;; This function calls:
  9125 ;;		Nothing
  9126 ;; This function is called by:
  9127 ;;		_Move_Servo
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           
  9131     1CAF                     _Servo_MoveTo180:	
  9132                           ;psect for function _Servo_MoveTo180
  9133                           
  9134     1CAF                     l3192:	
  9135                           ;incstack = 0
  9136                           ; Regs used in _Servo_MoveTo180: [wreg+status,2+btemp+1]
  9137                           
  9138                           
  9139                           ;main.c: 92:     for(int i = 0; i < 20; i++) {
  9140     1CAF  1283               	bcf	3,5	;RP0=0, select bank0
  9141     1CB0  1303               	bcf	3,6	;RP1=0, select bank0
  9142     1CB1  01A2               	clrf	Servo_MoveTo180@i
  9143     1CB2  01A3               	clrf	Servo_MoveTo180@i+1
  9144     1CB3                     l110:
  9145                           
  9146                           ;main.c: 93:         RC2 = 1;
  9147     1CB3  1283               	bcf	3,5	;RP0=0, select bank0
  9148     1CB4  1303               	bcf	3,6	;RP1=0, select bank0
  9149     1CB5  1507               	bsf	7,2	;volatile
  9150     1CB6                     l3198:
  9151                           
  9152                           ;main.c: 94:         _delay((unsigned long)((2000)*(20000000/4000000.0)));
  9153     1CB6  300D               	movlw	13
  9154     1CB7  1283               	bcf	3,5	;RP0=0, select bank0
  9155     1CB8  1303               	bcf	3,6	;RP1=0, select bank0
  9156     1CB9  00A1               	movwf	??_Servo_MoveTo180+1
  9157     1CBA  30FB               	movlw	251
  9158     1CBB  00A0               	movwf	??_Servo_MoveTo180
  9159     1CBC                     u6007:
  9160     1CBC  0BA0               	decfsz	??_Servo_MoveTo180,f
  9161     1CBD  2CBC               	goto	u6007
  9162     1CBE  0BA1               	decfsz	??_Servo_MoveTo180+1,f
  9163     1CBF  2CBC               	goto	u6007
  9164     1CC0                     l3200:
  9165                           
  9166                           ;main.c: 95:         RC2 = 0;
  9167     1CC0  1283               	bcf	3,5	;RP0=0, select bank0
  9168     1CC1  1303               	bcf	3,6	;RP1=0, select bank0
  9169     1CC2  1107               	bcf	7,2	;volatile
  9170                           
  9171                           ;main.c: 96:         _delay((unsigned long)((20)*(20000000/4000.0)));
  9172     1CC3  3082               	movlw	130
  9173     1CC4  1283               	bcf	3,5	;RP0=0, select bank0
  9174     1CC5  1303               	bcf	3,6	;RP1=0, select bank0
  9175     1CC6  00A1               	movwf	??_Servo_MoveTo180+1
  9176     1CC7  30DD               	movlw	221
  9177     1CC8  00A0               	movwf	??_Servo_MoveTo180
  9178     1CC9                     u6017:
  9179     1CC9  0BA0               	decfsz	??_Servo_MoveTo180,f
  9180     1CCA  2CC9               	goto	u6017
  9181     1CCB  0BA1               	decfsz	??_Servo_MoveTo180+1,f
  9182     1CCC  2CC9               	goto	u6017
  9183                           
  9184                           ;main.c: 97:     }
  9185     1CCD  3001               	movlw	1
  9186     1CCE  1283               	bcf	3,5	;RP0=0, select bank0
  9187     1CCF  1303               	bcf	3,6	;RP1=0, select bank0
  9188     1CD0  07A2               	addwf	Servo_MoveTo180@i,f
  9189     1CD1  1803               	skipnc
  9190     1CD2  0AA3               	incf	Servo_MoveTo180@i+1,f
  9191     1CD3  3000               	movlw	0
  9192     1CD4  07A3               	addwf	Servo_MoveTo180@i+1,f
  9193     1CD5                     l3202:
  9194     1CD5  0823               	movf	Servo_MoveTo180@i+1,w
  9195     1CD6  3A80               	xorlw	128
  9196     1CD7  00FF               	movwf	btemp+1
  9197     1CD8  3080               	movlw	128
  9198     1CD9  027F               	subwf	btemp+1,w
  9199     1CDA  1D03               	skipz
  9200     1CDB  2CDE               	goto	u4725
  9201     1CDC  3014               	movlw	20
  9202     1CDD  0222               	subwf	Servo_MoveTo180@i,w
  9203     1CDE                     u4725:
  9204     1CDE  1C03               	skipc
  9205     1CDF  2CE1               	goto	u4721
  9206     1CE0  2CE2               	goto	u4720
  9207     1CE1                     u4721:
  9208     1CE1  2CB3               	goto	l110
  9209     1CE2                     u4720:
  9210     1CE2                     l112:
  9211     1CE2  0008               	return
  9212     1CE3                     __end_of_Servo_MoveTo180:
  9213                           
  9214                           	psect	text33
  9215     1C7B                     __ptext33:	
  9216 ;; *************** function _Servo_MoveTo0 *****************
  9217 ;; Defined at:
  9218 ;;		line 81 in file "main.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;		None
  9221 ;; Auto vars:     Size  Location     Type
  9222 ;;  i               2    2[BANK0 ] int 
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  1    wreg      void 
  9225 ;; Registers used:
  9226 ;;		wreg, status,2, btemp+1
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9232 ;;      Params:         0       0       0       0       0
  9233 ;;      Locals:         0       2       0       0       0
  9234 ;;      Temps:          0       2       0       0       0
  9235 ;;      Totals:         0       4       0       0       0
  9236 ;;Total ram usage:        4 bytes
  9237 ;; Hardware stack levels used: 1
  9238 ;; Hardware stack levels required when called: 3
  9239 ;; This function calls:
  9240 ;;		Nothing
  9241 ;; This function is called by:
  9242 ;;		_Move_Servo
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246     1C7B                     _Servo_MoveTo0:	
  9247                           ;psect for function _Servo_MoveTo0
  9248                           
  9249     1C7B                     l3180:	
  9250                           ;incstack = 0
  9251                           ; Regs used in _Servo_MoveTo0: [wreg+status,2+btemp+1]
  9252                           
  9253                           
  9254                           ;main.c: 82:     for(int i = 0; i < 20; i++) {
  9255     1C7B  1283               	bcf	3,5	;RP0=0, select bank0
  9256     1C7C  1303               	bcf	3,6	;RP1=0, select bank0
  9257     1C7D  01A2               	clrf	Servo_MoveTo0@i
  9258     1C7E  01A3               	clrf	Servo_MoveTo0@i+1
  9259     1C7F                     l105:
  9260                           
  9261                           ;main.c: 83:         RC2 = 1;
  9262     1C7F  1283               	bcf	3,5	;RP0=0, select bank0
  9263     1C80  1303               	bcf	3,6	;RP1=0, select bank0
  9264     1C81  1507               	bsf	7,2	;volatile
  9265     1C82                     l3186:
  9266                           
  9267                           ;main.c: 84:         _delay((unsigned long)((500)*(20000000/4000000.0)));
  9268     1C82  3004               	movlw	4
  9269     1C83  1283               	bcf	3,5	;RP0=0, select bank0
  9270     1C84  1303               	bcf	3,6	;RP1=0, select bank0
  9271     1C85  00A1               	movwf	??_Servo_MoveTo0+1
  9272     1C86  303D               	movlw	61
  9273     1C87  00A0               	movwf	??_Servo_MoveTo0
  9274     1C88                     u6027:
  9275     1C88  0BA0               	decfsz	??_Servo_MoveTo0,f
  9276     1C89  2C88               	goto	u6027
  9277     1C8A  0BA1               	decfsz	??_Servo_MoveTo0+1,f
  9278     1C8B  2C88               	goto	u6027
  9279     1C8C                     l3188:
  9280                           
  9281                           ;main.c: 85:         RC2 = 0;
  9282     1C8C  1283               	bcf	3,5	;RP0=0, select bank0
  9283     1C8D  1303               	bcf	3,6	;RP1=0, select bank0
  9284     1C8E  1107               	bcf	7,2	;volatile
  9285                           
  9286                           ;main.c: 86:         _delay((unsigned long)((20)*(20000000/4000.0)));
  9287     1C8F  3082               	movlw	130
  9288     1C90  1283               	bcf	3,5	;RP0=0, select bank0
  9289     1C91  1303               	bcf	3,6	;RP1=0, select bank0
  9290     1C92  00A1               	movwf	??_Servo_MoveTo0+1
  9291     1C93  30DD               	movlw	221
  9292     1C94  00A0               	movwf	??_Servo_MoveTo0
  9293     1C95                     u6037:
  9294     1C95  0BA0               	decfsz	??_Servo_MoveTo0,f
  9295     1C96  2C95               	goto	u6037
  9296     1C97  0BA1               	decfsz	??_Servo_MoveTo0+1,f
  9297     1C98  2C95               	goto	u6037
  9298                           
  9299                           ;main.c: 87:     }
  9300     1C99  3001               	movlw	1
  9301     1C9A  1283               	bcf	3,5	;RP0=0, select bank0
  9302     1C9B  1303               	bcf	3,6	;RP1=0, select bank0
  9303     1C9C  07A2               	addwf	Servo_MoveTo0@i,f
  9304     1C9D  1803               	skipnc
  9305     1C9E  0AA3               	incf	Servo_MoveTo0@i+1,f
  9306     1C9F  3000               	movlw	0
  9307     1CA0  07A3               	addwf	Servo_MoveTo0@i+1,f
  9308     1CA1                     l3190:
  9309     1CA1  0823               	movf	Servo_MoveTo0@i+1,w
  9310     1CA2  3A80               	xorlw	128
  9311     1CA3  00FF               	movwf	btemp+1
  9312     1CA4  3080               	movlw	128
  9313     1CA5  027F               	subwf	btemp+1,w
  9314     1CA6  1D03               	skipz
  9315     1CA7  2CAA               	goto	u4715
  9316     1CA8  3014               	movlw	20
  9317     1CA9  0222               	subwf	Servo_MoveTo0@i,w
  9318     1CAA                     u4715:
  9319     1CAA  1C03               	skipc
  9320     1CAB  2CAD               	goto	u4711
  9321     1CAC  2CAE               	goto	u4710
  9322     1CAD                     u4711:
  9323     1CAD  2C7F               	goto	l105
  9324     1CAE                     u4710:
  9325     1CAE                     l107:
  9326     1CAE  0008               	return
  9327     1CAF                     __end_of_Servo_MoveTo0:
  9328                           
  9329                           	psect	text34
  9330     1C47                     __ptext34:	
  9331 ;; *************** function _Check_Temperature_Alarm *****************
  9332 ;; Defined at:
  9333 ;;		line 137 in file "main.c"
  9334 ;; Parameters:    Size  Location     Type
  9335 ;;		None
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;		None
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  1    wreg      void 
  9340 ;; Registers used:
  9341 ;;		wreg, status,2, status,0, pclath, cstack
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9347 ;;      Params:         0       0       0       0       0
  9348 ;;      Locals:         0       0       0       0       0
  9349 ;;      Temps:          0       0       0       0       0
  9350 ;;      Totals:         0       0       0       0       0
  9351 ;;Total ram usage:        0 bytes
  9352 ;; Hardware stack levels used: 1
  9353 ;; Hardware stack levels required when called: 4
  9354 ;; This function calls:
  9355 ;;		___flge
  9356 ;; This function is called by:
  9357 ;;		_main
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361     1C47                     _Check_Temperature_Alarm:	
  9362                           ;psect for function _Check_Temperature_Alarm
  9363                           
  9364     1C47                     l3880:	
  9365                           ;incstack = 0
  9366                           ; Regs used in _Check_Temperature_Alarm: [wreg+status,2+status,0+pclath+cstack]
  9367                           
  9368                           
  9369                           ;main.c: 138:     if(temperature > 50.0) {
  9370     1C47  3042               	movlw	66
  9371     1C48  1283               	bcf	3,5	;RP0=0, select bank0
  9372     1C49  1303               	bcf	3,6	;RP1=0, select bank0
  9373     1C4A  00CB               	movwf	___flge@ff1+3
  9374     1C4B  3048               	movlw	72
  9375     1C4C  00CA               	movwf	___flge@ff1+2
  9376     1C4D  3000               	movlw	0
  9377     1C4E  00C9               	movwf	___flge@ff1+1
  9378     1C4F  3000               	movlw	0
  9379     1C50  00C8               	movwf	___flge@ff1
  9380     1C51  1683               	bsf	3,5	;RP0=1, select bank3
  9381     1C52  1703               	bsf	3,6	;RP1=1, select bank3
  9382     1C53  0849               	movf	(_temperature+3)^(0+384),w	;volatile
  9383     1C54  1283               	bcf	3,5	;RP0=0, select bank0
  9384     1C55  1303               	bcf	3,6	;RP1=0, select bank0
  9385     1C56  00CF               	movwf	___flge@ff2+3
  9386     1C57  1683               	bsf	3,5	;RP0=1, select bank3
  9387     1C58  1703               	bsf	3,6	;RP1=1, select bank3
  9388     1C59  0848               	movf	(_temperature+2)^(0+384),w	;volatile
  9389     1C5A  1283               	bcf	3,5	;RP0=0, select bank0
  9390     1C5B  1303               	bcf	3,6	;RP1=0, select bank0
  9391     1C5C  00CE               	movwf	___flge@ff2+2
  9392     1C5D  1683               	bsf	3,5	;RP0=1, select bank3
  9393     1C5E  1703               	bsf	3,6	;RP1=1, select bank3
  9394     1C5F  0847               	movf	(_temperature+1)^(0+384),w	;volatile
  9395     1C60  1283               	bcf	3,5	;RP0=0, select bank0
  9396     1C61  1303               	bcf	3,6	;RP1=0, select bank0
  9397     1C62  00CD               	movwf	___flge@ff2+1
  9398     1C63  1683               	bsf	3,5	;RP0=1, select bank3
  9399     1C64  1703               	bsf	3,6	;RP1=1, select bank3
  9400     1C65  0846               	movf	_temperature^(0+384),w	;volatile
  9401     1C66  1283               	bcf	3,5	;RP0=0, select bank0
  9402     1C67  1303               	bcf	3,6	;RP1=0, select bank0
  9403     1C68  00CC               	movwf	___flge@ff2
  9404     1C69  160A  118A  20E9  160A  158A  	fcall	___flge
  9405     1C6E  1803               	btfsc	3,0
  9406     1C6F  2C71               	goto	u5781
  9407     1C70  2C72               	goto	u5780
  9408     1C71                     u5781:
  9409     1C71  2C77               	goto	l3884
  9410     1C72                     u5780:
  9411     1C72                     l3882:
  9412                           
  9413                           ;main.c: 139:         fireAlarm = 1;
  9414     1C72  3001               	movlw	1
  9415     1C73  1683               	bsf	3,5	;RP0=1, select bank3
  9416     1C74  1703               	bsf	3,6	;RP1=1, select bank3
  9417     1C75  00CB               	movwf	_fireAlarm^(0+384)	;volatile
  9418                           
  9419                           ;main.c: 140:     } else {
  9420     1C76  2C7A               	goto	l133
  9421     1C77                     l3884:
  9422                           
  9423                           ;main.c: 141:         fireAlarm = 0;
  9424     1C77  1683               	bsf	3,5	;RP0=1, select bank3
  9425     1C78  1703               	bsf	3,6	;RP1=1, select bank3
  9426     1C79  01CB               	clrf	_fireAlarm^(0+384)	;volatile
  9427     1C7A                     l133:
  9428     1C7A  0008               	return
  9429     1C7B                     __end_of_Check_Temperature_Alarm:
  9430                           
  9431                           	psect	text35
  9432     10E9                     __ptext35:	
  9433 ;; *************** function ___flge *****************
  9434 ;; Defined at:
  9435 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;  ff1             4   40[BANK0 ] void 
  9438 ;;  ff2             4   44[BANK0 ] void 
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;		None
  9441 ;; Return value:  Size  Location     Type
  9442 ;;		None               void
  9443 ;; Registers used:
  9444 ;;		wreg, status,2, status,0
  9445 ;; Tracked objects:
  9446 ;;		On entry : 0/0
  9447 ;;		On exit  : 0/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9450 ;;      Params:         0       8       0       0       0
  9451 ;;      Locals:         0       0       0       0       0
  9452 ;;      Temps:          0       4       0       0       0
  9453 ;;      Totals:         0      12       0       0       0
  9454 ;;Total ram usage:       12 bytes
  9455 ;; Hardware stack levels used: 1
  9456 ;; Hardware stack levels required when called: 3
  9457 ;; This function calls:
  9458 ;;		Nothing
  9459 ;; This function is called by:
  9460 ;;		_Check_Temperature_Alarm
  9461 ;;		_efgtoa
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465     10E9                     ___flge:	
  9466                           ;psect for function ___flge
  9467                           
  9468     10E9                     l2446:	
  9469                           ;incstack = 0
  9470                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9471                           
  9472     10E9  3000               	movlw	0
  9473     10EA  1283               	bcf	3,5	;RP0=0, select bank0
  9474     10EB  1303               	bcf	3,6	;RP1=0, select bank0
  9475     10EC  0548               	andwf	___flge@ff1,w
  9476     10ED  00D0               	movwf	??___flge
  9477     10EE  3000               	movlw	0
  9478     10EF  0549               	andwf	___flge@ff1+1,w
  9479     10F0  00D1               	movwf	??___flge+1
  9480     10F1  3080               	movlw	128
  9481     10F2  054A               	andwf	___flge@ff1+2,w
  9482     10F3  00D2               	movwf	??___flge+2
  9483     10F4  307F               	movlw	127
  9484     10F5  054B               	andwf	___flge@ff1+3,w
  9485     10F6  00D3               	movwf	??___flge+3
  9486     10F7  0853               	movf	??___flge+3,w
  9487     10F8  0452               	iorwf	??___flge+2,w
  9488     10F9  0451               	iorwf	??___flge+1,w
  9489     10FA  0450               	iorwf	??___flge,w
  9490     10FB  1D03               	skipz
  9491     10FC  28FE               	goto	u3211
  9492     10FD  28FF               	goto	u3210
  9493     10FE                     u3211:
  9494     10FE  2907               	goto	l435
  9495     10FF                     u3210:
  9496     10FF                     l2448:
  9497     10FF  3000               	movlw	0
  9498     1100  00CB               	movwf	___flge@ff1+3
  9499     1101  3000               	movlw	0
  9500     1102  00CA               	movwf	___flge@ff1+2
  9501     1103  3000               	movlw	0
  9502     1104  00C9               	movwf	___flge@ff1+1
  9503     1105  3000               	movlw	0
  9504     1106  00C8               	movwf	___flge@ff1
  9505     1107                     l435:
  9506     1107  3000               	movlw	0
  9507     1108  054C               	andwf	___flge@ff2,w
  9508     1109  00D0               	movwf	??___flge
  9509     110A  3000               	movlw	0
  9510     110B  054D               	andwf	___flge@ff2+1,w
  9511     110C  00D1               	movwf	??___flge+1
  9512     110D  3080               	movlw	128
  9513     110E  054E               	andwf	___flge@ff2+2,w
  9514     110F  00D2               	movwf	??___flge+2
  9515     1110  307F               	movlw	127
  9516     1111  054F               	andwf	___flge@ff2+3,w
  9517     1112  00D3               	movwf	??___flge+3
  9518     1113  0853               	movf	??___flge+3,w
  9519     1114  0452               	iorwf	??___flge+2,w
  9520     1115  0451               	iorwf	??___flge+1,w
  9521     1116  0450               	iorwf	??___flge,w
  9522     1117  1D03               	skipz
  9523     1118  291A               	goto	u3221
  9524     1119  291B               	goto	u3220
  9525     111A                     u3221:
  9526     111A  2923               	goto	l2452
  9527     111B                     u3220:
  9528     111B                     l2450:
  9529     111B  3000               	movlw	0
  9530     111C  00CF               	movwf	___flge@ff2+3
  9531     111D  3000               	movlw	0
  9532     111E  00CE               	movwf	___flge@ff2+2
  9533     111F  3000               	movlw	0
  9534     1120  00CD               	movwf	___flge@ff2+1
  9535     1121  3000               	movlw	0
  9536     1122  00CC               	movwf	___flge@ff2
  9537     1123                     l2452:
  9538     1123  1FCB               	btfss	___flge@ff1+3,7
  9539     1124  2926               	goto	u3231
  9540     1125  2927               	goto	u3230
  9541     1126                     u3231:
  9542     1126  294B               	goto	l2456
  9543     1127                     u3230:
  9544     1127                     l2454:
  9545     1127  3000               	movlw	0
  9546     1128  00D0               	movwf	??___flge
  9547     1129  3000               	movlw	0
  9548     112A  00D1               	movwf	??___flge+1
  9549     112B  3000               	movlw	0
  9550     112C  00D2               	movwf	??___flge+2
  9551     112D  3080               	movlw	128
  9552     112E  00D3               	movwf	??___flge+3
  9553     112F  0848               	movf	___flge@ff1,w
  9554     1130  02D0               	subwf	??___flge,f
  9555     1131  0849               	movf	___flge@ff1+1,w
  9556     1132  1C03               	skipc
  9557     1133  0F49               	incfsz	___flge@ff1+1,w
  9558     1134  2936               	goto	u3241
  9559     1135  2937               	goto	u3242
  9560     1136                     u3241:
  9561     1136  02D1               	subwf	??___flge+1,f
  9562     1137                     u3242:
  9563     1137  084A               	movf	___flge@ff1+2,w
  9564     1138  1C03               	skipc
  9565     1139  0F4A               	incfsz	___flge@ff1+2,w
  9566     113A  293C               	goto	u3243
  9567     113B  293D               	goto	u3244
  9568     113C                     u3243:
  9569     113C  02D2               	subwf	??___flge+2,f
  9570     113D                     u3244:
  9571     113D  084B               	movf	___flge@ff1+3,w
  9572     113E  1C03               	skipc
  9573     113F  0F4B               	incfsz	___flge@ff1+3,w
  9574     1140  2942               	goto	u3245
  9575     1141  2943               	goto	u3246
  9576     1142                     u3245:
  9577     1142  02D3               	subwf	??___flge+3,f
  9578     1143                     u3246:
  9579     1143  0853               	movf	??___flge+3,w
  9580     1144  00CB               	movwf	___flge@ff1+3
  9581     1145  0852               	movf	??___flge+2,w
  9582     1146  00CA               	movwf	___flge@ff1+2
  9583     1147  0851               	movf	??___flge+1,w
  9584     1148  00C9               	movwf	___flge@ff1+1
  9585     1149  0850               	movf	??___flge,w
  9586     114A  00C8               	movwf	___flge@ff1
  9587     114B                     l2456:
  9588     114B  1FCF               	btfss	___flge@ff2+3,7
  9589     114C  294E               	goto	u3251
  9590     114D  294F               	goto	u3250
  9591     114E                     u3251:
  9592     114E  2973               	goto	l438
  9593     114F                     u3250:
  9594     114F                     l2458:
  9595     114F  3000               	movlw	0
  9596     1150  00D0               	movwf	??___flge
  9597     1151  3000               	movlw	0
  9598     1152  00D1               	movwf	??___flge+1
  9599     1153  3000               	movlw	0
  9600     1154  00D2               	movwf	??___flge+2
  9601     1155  3080               	movlw	128
  9602     1156  00D3               	movwf	??___flge+3
  9603     1157  084C               	movf	___flge@ff2,w
  9604     1158  02D0               	subwf	??___flge,f
  9605     1159  084D               	movf	___flge@ff2+1,w
  9606     115A  1C03               	skipc
  9607     115B  0F4D               	incfsz	___flge@ff2+1,w
  9608     115C  295E               	goto	u3261
  9609     115D  295F               	goto	u3262
  9610     115E                     u3261:
  9611     115E  02D1               	subwf	??___flge+1,f
  9612     115F                     u3262:
  9613     115F  084E               	movf	___flge@ff2+2,w
  9614     1160  1C03               	skipc
  9615     1161  0F4E               	incfsz	___flge@ff2+2,w
  9616     1162  2964               	goto	u3263
  9617     1163  2965               	goto	u3264
  9618     1164                     u3263:
  9619     1164  02D2               	subwf	??___flge+2,f
  9620     1165                     u3264:
  9621     1165  084F               	movf	___flge@ff2+3,w
  9622     1166  1C03               	skipc
  9623     1167  0F4F               	incfsz	___flge@ff2+3,w
  9624     1168  296A               	goto	u3265
  9625     1169  296B               	goto	u3266
  9626     116A                     u3265:
  9627     116A  02D3               	subwf	??___flge+3,f
  9628     116B                     u3266:
  9629     116B  0853               	movf	??___flge+3,w
  9630     116C  00CF               	movwf	___flge@ff2+3
  9631     116D  0852               	movf	??___flge+2,w
  9632     116E  00CE               	movwf	___flge@ff2+2
  9633     116F  0851               	movf	??___flge+1,w
  9634     1170  00CD               	movwf	___flge@ff2+1
  9635     1171  0850               	movf	??___flge,w
  9636     1172  00CC               	movwf	___flge@ff2
  9637     1173                     l438:
  9638     1173  3080               	movlw	128
  9639     1174  06CB               	xorwf	___flge@ff1+3,f
  9640     1175  3080               	movlw	128
  9641     1176  06CF               	xorwf	___flge@ff2+3,f
  9642     1177  084F               	movf	___flge@ff2+3,w
  9643     1178  024B               	subwf	___flge@ff1+3,w
  9644     1179  1D03               	skipz
  9645     117A  2985               	goto	u3275
  9646     117B  084E               	movf	___flge@ff2+2,w
  9647     117C  024A               	subwf	___flge@ff1+2,w
  9648     117D  1D03               	skipz
  9649     117E  2985               	goto	u3275
  9650     117F  084D               	movf	___flge@ff2+1,w
  9651     1180  0249               	subwf	___flge@ff1+1,w
  9652     1181  1D03               	skipz
  9653     1182  2985               	goto	u3275
  9654     1183  084C               	movf	___flge@ff2,w
  9655     1184  0248               	subwf	___flge@ff1,w
  9656     1185                     u3275:
  9657     1185  1803               	skipnc
  9658     1186  2988               	goto	u3271
  9659     1187  2989               	goto	u3270
  9660     1188                     u3271:
  9661     1188  298B               	goto	l2462
  9662     1189                     u3270:
  9663     1189                     l2460:
  9664     1189  1003               	clrc
  9665     118A  298C               	goto	l443
  9666     118B                     l2462:
  9667     118B  1403               	setc
  9668     118C                     l443:
  9669     118C  0008               	return
  9670     118D                     __end_of___flge:
  9671                           
  9672                           	psect	text36
  9673     1A79                     __ptext36:	
  9674 ;; *************** function _Button_Init *****************
  9675 ;; Defined at:
  9676 ;;		line 110 in file "main.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;		None
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;		None
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  1    wreg      void 
  9683 ;; Registers used:
  9684 ;;		None
  9685 ;; Tracked objects:
  9686 ;;		On entry : 0/0
  9687 ;;		On exit  : 0/0
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9690 ;;      Params:         0       0       0       0       0
  9691 ;;      Locals:         0       0       0       0       0
  9692 ;;      Temps:          0       0       0       0       0
  9693 ;;      Totals:         0       0       0       0       0
  9694 ;;Total ram usage:        0 bytes
  9695 ;; Hardware stack levels used: 1
  9696 ;; Hardware stack levels required when called: 3
  9697 ;; This function calls:
  9698 ;;		Nothing
  9699 ;; This function is called by:
  9700 ;;		_main
  9701 ;; This function uses a non-reentrant model
  9702 ;;
  9703                           
  9704     1A79                     _Button_Init:	
  9705                           ;psect for function _Button_Init
  9706                           
  9707     1A79                     l3868:	
  9708                           ;incstack = 0
  9709                           ; Regs used in _Button_Init: []
  9710                           
  9711                           
  9712                           ;main.c: 111:     TRISB0 = 1;
  9713     1A79  1683               	bsf	3,5	;RP0=1, select bank1
  9714     1A7A  1303               	bcf	3,6	;RP1=0, select bank1
  9715     1A7B  1406               	bsf	6,0	;volatile
  9716                           
  9717                           ;main.c: 114:     OPTION_REGbits.INTEDG = 1;
  9718     1A7C  1701               	bsf	1,6	;volatile
  9719                           
  9720                           ;main.c: 115:     INTF = 0;
  9721     1A7D  108B               	bcf	11,1	;volatile
  9722                           
  9723                           ;main.c: 116:     INTE = 1;
  9724     1A7E  160B               	bsf	11,4	;volatile
  9725     1A7F                     l120:
  9726     1A7F  0008               	return
  9727     1A80                     __end_of_Button_Init:
  9728                           
  9729                           	psect	text37
  9730     1AA3                     __ptext37:	
  9731 ;; *************** function _ADC_Init *****************
  9732 ;; Defined at:
  9733 ;;		line 60 in file "main.c"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;		None
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;		None
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  1    wreg      void 
  9740 ;; Registers used:
  9741 ;;		None
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9747 ;;      Params:         0       0       0       0       0
  9748 ;;      Locals:         0       0       0       0       0
  9749 ;;      Temps:          0       0       0       0       0
  9750 ;;      Totals:         0       0       0       0       0
  9751 ;;Total ram usage:        0 bytes
  9752 ;; Hardware stack levels used: 1
  9753 ;; Hardware stack levels required when called: 3
  9754 ;; This function calls:
  9755 ;;		Nothing
  9756 ;; This function is called by:
  9757 ;;		_main
  9758 ;; This function uses a non-reentrant model
  9759 ;;
  9760                           
  9761     1AA3                     _ADC_Init:	
  9762                           ;psect for function _ADC_Init
  9763                           
  9764     1AA3                     l3860:	
  9765                           ;incstack = 0
  9766                           ; Regs used in _ADC_Init: []
  9767                           
  9768                           
  9769                           ;main.c: 61:     ADCON1 = 0x8E;
  9770     1AA3  308E               	movlw	142
  9771     1AA4  1683               	bsf	3,5	;RP0=1, select bank1
  9772     1AA5  1303               	bcf	3,6	;RP1=0, select bank1
  9773     1AA6  009F               	movwf	31	;volatile
  9774                           
  9775                           ;main.c: 62:     ADCON0 = 0x41;
  9776     1AA7  3041               	movlw	65
  9777     1AA8  1283               	bcf	3,5	;RP0=0, select bank0
  9778     1AA9  1303               	bcf	3,6	;RP1=0, select bank0
  9779     1AAA  009F               	movwf	31	;volatile
  9780                           
  9781                           ;main.c: 63:     TRISA0 = 1;
  9782     1AAB  1683               	bsf	3,5	;RP0=1, select bank1
  9783     1AAC  1303               	bcf	3,6	;RP1=0, select bank1
  9784     1AAD  1405               	bsf	5,0	;volatile
  9785     1AAE                     l96:
  9786     1AAE  0008               	return
  9787     1AAF                     __end_of_ADC_Init:
  9788                           
  9789                           	psect	text38
  9790     1D33                     __ptext38:	
  9791 ;; *************** function _ISR *****************
  9792 ;; Defined at:
  9793 ;;		line 146 in file "main.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;		None
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;		None
  9798 ;; Return value:  Size  Location     Type
  9799 ;;                  1    wreg      void 
  9800 ;; Registers used:
  9801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9802 ;; Tracked objects:
  9803 ;;		On entry : 0/0
  9804 ;;		On exit  : 0/0
  9805 ;;		Unchanged: 0/0
  9806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9807 ;;      Params:         0       0       0       0       0
  9808 ;;      Locals:         0       0       0       0       0
  9809 ;;      Temps:          4       0       0       0       0
  9810 ;;      Totals:         4       0       0       0       0
  9811 ;;Total ram usage:        4 bytes
  9812 ;; Hardware stack levels used: 1
  9813 ;; Hardware stack levels required when called: 2
  9814 ;; This function calls:
  9815 ;;		i1_UART_Write_String
  9816 ;; This function is called by:
  9817 ;;		Interrupt level 1
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821     1D33                     _ISR:	
  9822                           ;psect for function _ISR
  9823                           
  9824     1D33                     i1l3330:
  9825                           
  9826                           ;main.c: 148:     if(RCIF) {
  9827     1D33  1283               	bcf	3,5	;RP0=0, select bank0
  9828     1D34  1303               	bcf	3,6	;RP1=0, select bank0
  9829     1D35  1E8C               	btfss	12,5	;volatile
  9830     1D36  2D38               	goto	u495_21
  9831     1D37  2D39               	goto	u495_20
  9832     1D38                     u495_21:
  9833     1D38  2D71               	goto	i1l3350
  9834     1D39                     u495_20:
  9835     1D39                     i1l3332:
  9836                           
  9837                           ;main.c: 149:         bluetoothData = RCREG;
  9838     1D39  081A               	movf	26,w	;volatile
  9839     1D3A  00FB               	movwf	_bluetoothData	;volatile
  9840     1D3B                     i1l3334:
  9841                           
  9842                           ;main.c: 152:         if(bluetoothData == 'A' || bluetoothData == 'a') {
  9843     1D3B  3041               	movlw	65
  9844     1D3C  067B               	xorwf	_bluetoothData,w	;volatile
  9845     1D3D  1903               	btfsc	3,2
  9846     1D3E  2D40               	goto	u496_21
  9847     1D3F  2D41               	goto	u496_20
  9848     1D40                     u496_21:
  9849     1D40  2D47               	goto	i1l141
  9850     1D41                     u496_20:
  9851     1D41                     i1l3336:
  9852     1D41  3061               	movlw	97
  9853     1D42  067B               	xorwf	_bluetoothData,w	;volatile
  9854     1D43  1D03               	btfss	3,2
  9855     1D44  2D46               	goto	u497_21
  9856     1D45  2D47               	goto	u497_20
  9857     1D46                     u497_21:
  9858     1D46  2D57               	goto	i1l3340
  9859     1D47                     u497_20:
  9860     1D47                     i1l141:
  9861                           
  9862                           ;main.c: 153:             currentState = ABIERTO;
  9863     1D47  3001               	movlw	1
  9864     1D48  1683               	bsf	3,5	;RP0=1, select bank3
  9865     1D49  1703               	bsf	3,6	;RP1=1, select bank3
  9866     1D4A  00CC               	movwf	_currentState^(0+384)
  9867                           
  9868                           ;main.c: 154:             servo_needs_update = 1;
  9869     1D4B  3001               	movlw	1
  9870     1D4C  00CD               	movwf	_servo_needs_update^(0+384)	;volatile
  9871     1D4D                     i1l3338:
  9872                           
  9873                           ;main.c: 155:             UART_Write_String("Comando: ABRIR\n");
  9874     1D4D  307C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  9875     1D4E  00F1               	movwf	i1UART_Write_String@str
  9876     1D4F  3080               	movlw	128
  9877     1D50  00F2               	movwf	i1UART_Write_String@str+1
  9878     1D51  160A  158A  237C  160A  158A  	fcall	i1_UART_Write_String
  9879                           
  9880                           ;main.c: 156:         } else if(bluetoothData == 'C' || bluetoothData == 'c') {
  9881     1D56  2D71               	goto	i1l3350
  9882     1D57                     i1l3340:
  9883     1D57  3043               	movlw	67
  9884     1D58  067B               	xorwf	_bluetoothData,w	;volatile
  9885     1D59  1903               	btfsc	3,2
  9886     1D5A  2D5C               	goto	u498_21
  9887     1D5B  2D5D               	goto	u498_20
  9888     1D5C                     u498_21:
  9889     1D5C  2D63               	goto	i1l3344
  9890     1D5D                     u498_20:
  9891     1D5D                     i1l3342:
  9892     1D5D  3063               	movlw	99
  9893     1D5E  067B               	xorwf	_bluetoothData,w	;volatile
  9894     1D5F  1D03               	btfss	3,2
  9895     1D60  2D62               	goto	u499_21
  9896     1D61  2D63               	goto	u499_20
  9897     1D62                     u499_21:
  9898     1D62  2D71               	goto	i1l3350
  9899     1D63                     u499_20:
  9900     1D63                     i1l3344:
  9901                           
  9902                           ;main.c: 157:             currentState = CERRADO;
  9903     1D63  1683               	bsf	3,5	;RP0=1, select bank3
  9904     1D64  1703               	bsf	3,6	;RP1=1, select bank3
  9905     1D65  01CC               	clrf	_currentState^(0+384)
  9906     1D66                     i1l3346:
  9907                           
  9908                           ;main.c: 158:             servo_needs_update = 1;
  9909     1D66  3001               	movlw	1
  9910     1D67  00CD               	movwf	_servo_needs_update^(0+384)	;volatile
  9911     1D68                     i1l3348:
  9912                           
  9913                           ;main.c: 159:             UART_Write_String("Comando: CERRAR\n");
  9914     1D68  306B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  9915     1D69  00F1               	movwf	i1UART_Write_String@str
  9916     1D6A  3080               	movlw	128
  9917     1D6B  00F2               	movwf	i1UART_Write_String@str+1
  9918     1D6C  160A  158A  237C  160A  158A  	fcall	i1_UART_Write_String
  9919     1D71                     i1l3350:
  9920                           
  9921                           ;main.c: 164:     if(INTF) {
  9922     1D71  1C8B               	btfss	11,1	;volatile
  9923     1D72  2D74               	goto	u500_21
  9924     1D73  2D75               	goto	u500_20
  9925     1D74                     u500_21:
  9926     1D74  2D7A               	goto	i1l147
  9927     1D75                     u500_20:
  9928     1D75                     i1l3352:
  9929                           
  9930                           ;main.c: 165:         INTF = 0;
  9931     1D75  108B               	bcf	11,1	;volatile
  9932                           
  9933                           ;main.c: 168:         servo_needs_update = 1;
  9934     1D76  3001               	movlw	1
  9935     1D77  1683               	bsf	3,5	;RP0=1, select bank3
  9936     1D78  1703               	bsf	3,6	;RP1=1, select bank3
  9937     1D79  00CD               	movwf	_servo_needs_update^(0+384)	;volatile
  9938     1D7A                     i1l147:
  9939     1D7A  0876               	movf	??_ISR+3,w
  9940     1D7B  00FF               	movwf	btemp+1
  9941     1D7C  0875               	movf	??_ISR+2,w
  9942     1D7D  008A               	movwf	10
  9943     1D7E  0874               	movf	??_ISR+1,w
  9944     1D7F  0084               	movwf	4
  9945     1D80  0E73               	swapf	??_ISR,w
  9946     1D81  0083               	movwf	3
  9947     1D82  0EFE               	swapf	btemp,f
  9948     1D83  0E7E               	swapf	btemp,w
  9949     1D84  0009               	retfie
  9950     1D85                     __end_of_ISR:
  9951                           
  9952                           	psect	intentry
  9953     0004                     __pintentry:	
  9954                           ;incstack = 0
  9955 ;; hardware stack exceeded
  9956                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9957                           
  9958     0004                     interrupt_function:
  9959     007E                     saved_w         set	btemp
  9960     0004  00FE               	movwf	btemp
  9961     0005  0E03               	swapf	3,w
  9962     0006  00F3               	movwf	??_ISR
  9963     0007  0804               	movf	4,w
  9964     0008  00F4               	movwf	??_ISR+1
  9965     0009  080A               	movf	10,w
  9966     000A  00F5               	movwf	??_ISR+2
  9967     000B  087F               	movf	btemp+1,w
  9968     000C  00F6               	movwf	??_ISR+3
  9969     000D  160A  158A  2D33   	ljmp	_ISR
  9970                           
  9971                           	psect	text39
  9972     1B7C                     __ptext39:	
  9973 ;; *************** function i1_UART_Write_String *****************
  9974 ;; Defined at:
  9975 ;;		line 53 in file "main.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;  str             2    1[COMMON] PTR const unsigned char 
  9978 ;;		 -> STR_11(5), STR_10(5), main@tempStr(20), STR_8(5), 
  9979 ;;		 -> STR_7(5), STR_6(18), STR_5(29), STR_4(33), 
  9980 ;;		 -> STR_3(26), STR_2(17), STR_1(16), 
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;		None
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  1    wreg      void 
  9985 ;; Registers used:
  9986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 0/0
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9992 ;;      Params:         2       0       0       0       0
  9993 ;;      Locals:         0       0       0       0       0
  9994 ;;      Temps:          0       0       0       0       0
  9995 ;;      Totals:         2       0       0       0       0
  9996 ;;Total ram usage:        2 bytes
  9997 ;; Hardware stack levels used: 1
  9998 ;; Hardware stack levels required when called: 1
  9999 ;; This function calls:
 10000 ;;		i1_UART_Write
 10001 ;; This function is called by:
 10002 ;;		_ISR
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006     1B7C                     i1_UART_Write_String:	
 10007                           ;psect for function i1_UART_Write_String
 10008                           
 10009     1B7C                     i1l3322:	
 10010                           ;incstack = 0
 10011 ;; hardware stack exceeded
 10012                           ; Regs used in i1_UART_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
 10013                           
 10014                           
 10015                           ;main.c: 54:     while(*str) {
 10016     1B7C  2B91               	goto	i1l3328
 10017     1B7D                     i1l3324:
 10018                           
 10019                           ;main.c: 55:         UART_Write(*str++);
 10020     1B7D  0872               	movf	i1UART_Write_String@str+1,w
 10021     1B7E  00FF               	movwf	btemp+1
 10022     1B7F  0871               	movf	i1UART_Write_String@str,w
 10023     1B80  0084               	movwf	4
 10024     1B81  160A  118A  2000  160A  158A  	fcall	stringtab
 10025     1B86  160A  158A  228F  160A  158A  	fcall	i1_UART_Write
 10026     1B8B                     i1l3326:
 10027     1B8B  3001               	movlw	1
 10028     1B8C  07F1               	addwf	i1UART_Write_String@str,f
 10029     1B8D  1803               	skipnc
 10030     1B8E  0AF2               	incf	i1UART_Write_String@str+1,f
 10031     1B8F  3000               	movlw	0
 10032     1B90  07F2               	addwf	i1UART_Write_String@str+1,f
 10033     1B91                     i1l3328:
 10034                           
 10035                           ;main.c: 54:     while(*str) {
 10036     1B91  0872               	movf	i1UART_Write_String@str+1,w
 10037     1B92  1283               	bcf	3,5	;RP0=0, select bank0
 10038     1B93  1303               	bcf	3,6	;RP1=0, select bank0
 10039     1B94  00FF               	movwf	btemp+1
 10040     1B95  0871               	movf	i1UART_Write_String@str,w
 10041     1B96  0084               	movwf	4
 10042     1B97  160A  118A  2000  160A  158A  	fcall	stringtab
 10043     1B9C  3A00               	xorlw	0
 10044     1B9D  1D03               	skipz
 10045     1B9E  2BA0               	goto	u494_21
 10046     1B9F  2BA1               	goto	u494_20
 10047     1BA0                     u494_21:
 10048     1BA0  2B7D               	goto	i1l3324
 10049     1BA1                     u494_20:
 10050     1BA1                     i1l93:
 10051     1BA1  0008               	return
 10052     1BA2                     __end_ofi1_UART_Write_String:
 10053                           
 10054                           	psect	text40
 10055     1A8F                     __ptext40:	
 10056 ;; *************** function i1_UART_Write *****************
 10057 ;; Defined at:
 10058 ;;		line 47 in file "main.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;  data            1    wreg     unsigned char 
 10061 ;; Auto vars:     Size  Location     Type
 10062 ;;  data            1    0[COMMON] unsigned char 
 10063 ;; Return value:  Size  Location     Type
 10064 ;;                  1    wreg      void 
 10065 ;; Registers used:
 10066 ;;		wreg
 10067 ;; Tracked objects:
 10068 ;;		On entry : 0/0
 10069 ;;		On exit  : 0/0
 10070 ;;		Unchanged: 0/0
 10071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10072 ;;      Params:         0       0       0       0       0
 10073 ;;      Locals:         1       0       0       0       0
 10074 ;;      Temps:          0       0       0       0       0
 10075 ;;      Totals:         1       0       0       0       0
 10076 ;;Total ram usage:        1 bytes
 10077 ;; Hardware stack levels used: 1
 10078 ;; This function calls:
 10079 ;;		Nothing
 10080 ;; This function is called by:
 10081 ;;		i1_UART_Write_String
 10082 ;; This function uses a non-reentrant model
 10083 ;;
 10084                           
 10085     1A8F                     i1_UART_Write:	
 10086                           ;psect for function i1_UART_Write
 10087                           
 10088                           
 10089                           ;incstack = 0
 10090 ;; hardware stack exceeded
 10091                           ; Regs used in i1_UART_Write: [wreg]
 10092                           ;i1UART_Write@data stored from wreg
 10093     1A8F  00F0               	movwf	i1UART_Write@data
 10094     1A90                     i1l3256:
 10095     1A90                     i1l84:	
 10096                           ;main.c: 48:     while(!TXIF);
 10097                           
 10098     1A90  1283               	bcf	3,5	;RP0=0, select bank0
 10099     1A91  1303               	bcf	3,6	;RP1=0, select bank0
 10100     1A92  1E0C               	btfss	12,4	;volatile
 10101     1A93  2A95               	goto	u488_21
 10102     1A94  2A96               	goto	u488_20
 10103     1A95                     u488_21:
 10104     1A95  2A90               	goto	i1l84
 10105     1A96                     u488_20:
 10106     1A96                     i1l3258:
 10107                           
 10108                           ;main.c: 49:     TXREG = data;
 10109     1A96  0870               	movf	i1UART_Write@data,w
 10110     1A97  0099               	movwf	25	;volatile
 10111     1A98                     i1l87:
 10112     1A98  0008               	return
 10113     1A99                     __end_ofi1_UART_Write:
 10114     0002                     ___latbits      equ	2
 10115     007E                     btemp           set	126	;btemp
 10116     007E                     wtemp0          set	126
 10117                           
 10118                           	psect	config
 10119                           
 10120                           ;Config register CONFIG @ 0x2007
 10121                           ;	Oscillator Selection bits
 10122                           ;	FOSC = HS, HS oscillator
 10123                           ;	Watchdog Timer Enable bit
 10124                           ;	WDTE = OFF, WDT disabled
 10125                           ;	Power-up Timer Enable bit
 10126                           ;	PWRTE = ON, PWRT enabled
 10127                           ;	Brown-out Reset Enable bit
 10128                           ;	BOREN = ON, BOR enabled
 10129                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10130                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10131                           ;	Data EEPROM Memory Code Protection bit
 10132                           ;	CPD = OFF, Data EEPROM code protection off
 10133                           ;	Flash Program Memory Write Enable bits
 10134                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10135                           ;	In-Circuit Debugger Mode bit
 10136                           ;	DEBUG = 0x1, unprogrammed default
 10137                           ;	Flash Program Memory Code Protection bit
 10138                           ;	CP = OFF, Code protection off
 10139     2007                     	org	8199
 10140     2007  3F72               	dw	16242
 10141                           
 10142                           	psect	text6_split_1
 10143     0038                     l3626:
 10144                           
 10145                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 10146     0038  1683               	bsf	3,5	;RP0=1, select bank1
 10147     0039  1303               	bcf	3,6	;RP1=0, select bank1
 10148     003A  0856               	movf	(efgtoa@g+3)^(0+128),w
 10149     003B  1283               	bcf	3,5	;RP0=0, select bank0
 10150     003C  1303               	bcf	3,6	;RP1=0, select bank0
 10151     003D  00CB               	movwf	___flge@ff1+3
 10152     003E  1683               	bsf	3,5	;RP0=1, select bank1
 10153     003F  1303               	bcf	3,6	;RP1=0, select bank1
 10154     0040  0855               	movf	(efgtoa@g+2)^(0+128),w
 10155     0041  1283               	bcf	3,5	;RP0=0, select bank0
 10156     0042  1303               	bcf	3,6	;RP1=0, select bank0
 10157     0043  00CA               	movwf	___flge@ff1+2
 10158     0044  1683               	bsf	3,5	;RP0=1, select bank1
 10159     0045  1303               	bcf	3,6	;RP1=0, select bank1
 10160     0046  0854               	movf	(efgtoa@g+1)^(0+128),w
 10161     0047  1283               	bcf	3,5	;RP0=0, select bank0
 10162     0048  1303               	bcf	3,6	;RP1=0, select bank0
 10163     0049  00C9               	movwf	___flge@ff1+1
 10164     004A  1683               	bsf	3,5	;RP0=1, select bank1
 10165     004B  1303               	bcf	3,6	;RP1=0, select bank1
 10166     004C  0853               	movf	efgtoa@g^(0+128),w
 10167     004D  1283               	bcf	3,5	;RP0=0, select bank0
 10168     004E  1303               	bcf	3,6	;RP1=0, select bank0
 10169     004F  00C8               	movwf	___flge@ff1
 10170     0050  1683               	bsf	3,5	;RP0=1, select bank1
 10171     0051  1303               	bcf	3,6	;RP1=0, select bank1
 10172     0052  085C               	movf	(efgtoa@u+3)^(0+128),w
 10173     0053  1283               	bcf	3,5	;RP0=0, select bank0
 10174     0054  1303               	bcf	3,6	;RP1=0, select bank0
 10175     0055  00CF               	movwf	___flge@ff2+3
 10176     0056  1683               	bsf	3,5	;RP0=1, select bank1
 10177     0057  1303               	bcf	3,6	;RP1=0, select bank1
 10178     0058  085B               	movf	(efgtoa@u+2)^(0+128),w
 10179     0059  1283               	bcf	3,5	;RP0=0, select bank0
 10180     005A  1303               	bcf	3,6	;RP1=0, select bank0
 10181     005B  00CE               	movwf	___flge@ff2+2
 10182     005C  1683               	bsf	3,5	;RP0=1, select bank1
 10183     005D  1303               	bcf	3,6	;RP1=0, select bank1
 10184     005E  085A               	movf	(efgtoa@u+1)^(0+128),w
 10185     005F  1283               	bcf	3,5	;RP0=0, select bank0
 10186     0060  1303               	bcf	3,6	;RP1=0, select bank0
 10187     0061  00CD               	movwf	___flge@ff2+1
 10188     0062  1683               	bsf	3,5	;RP0=1, select bank1
 10189     0063  1303               	bcf	3,6	;RP1=0, select bank1
 10190     0064  0859               	movf	efgtoa@u^(0+128),w
 10191     0065  1283               	bcf	3,5	;RP0=0, select bank0
 10192     0066  1303               	bcf	3,6	;RP1=0, select bank0
 10193     0067  00CC               	movwf	___flge@ff2
 10194     0068  160A  118A  20E9  120A  118A  	fcall	___flge
 10195     006D  1C03               	btfss	3,0
 10196     006E  2870               	goto	u5481
 10197     006F  2873               	goto	u5480
 10198     0070                     u5481:
 10199     0070  120A  158A  2F5A   	goto	l3618
 10200     0073                     u5480:
 10201     0073                     l3628:
 10202                           
 10203                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 10204     0073  1683               	bsf	3,5	;RP0=1, select bank1
 10205     0074  1303               	bcf	3,6	;RP1=0, select bank1
 10206     0075  0830               	movf	efgtoa@c^(0+128),w
 10207     0076  00BA               	movwf	efgtoa@mode^(0+128)
 10208                           
 10209                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 10210     0077  083A               	movf	efgtoa@mode^(0+128),w
 10211     0078  00BB               	movwf	efgtoa@nmode^(0+128)
 10212     0079                     l3630:
 10213                           
 10214                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 10215     0079  1BFA               	btfsc	_prec+1,7
 10216     007A  287C               	goto	u5491
 10217     007B  287D               	goto	u5490
 10218     007C                     u5491:
 10219     007C  2882               	goto	l3634
 10220     007D                     u5490:
 10221     007D                     l3632:
 10222     007D  087A               	movf	_prec+1,w
 10223     007E  00B4               	movwf	(efgtoa@p+1)^(0+128)
 10224     007F  0879               	movf	_prec,w
 10225     0080  00B3               	movwf	efgtoa@p^(0+128)
 10226     0081  2886               	goto	l778
 10227     0082                     l3634:
 10228     0082  3006               	movlw	6
 10229     0083  00B3               	movwf	efgtoa@p^(0+128)
 10230     0084  3000               	movlw	0
 10231     0085  00B4               	movwf	(efgtoa@p^(0+128)+1)
 10232     0086                     l778:
 10233                           
 10234                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
 10235     0086  0834               	movf	(efgtoa@p+1)^(0+128),w
 10236     0087  00BF               	movwf	(efgtoa@m+1)^(0+128)
 10237     0088  0833               	movf	efgtoa@p^(0+128),w
 10238     0089  00BE               	movwf	efgtoa@m^(0+128)
 10239                           
 10240                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
 10241     008A  3001               	movlw	1
 10242     008B  07BE               	addwf	efgtoa@m^(0+128),f
 10243     008C  1803               	skipnc
 10244     008D  0ABF               	incf	(efgtoa@m+1)^(0+128),f
 10245     008E  3000               	movlw	0
 10246     008F  07BF               	addwf	(efgtoa@m+1)^(0+128),f
 10247     0090                     l3636:
 10248                           
 10249                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 10250     0090  3066               	movlw	102
 10251     0091  063B               	xorwf	efgtoa@nmode^(0+128),w
 10252     0092  1D03               	btfss	3,2
 10253     0093  2895               	goto	u5501
 10254     0094  2896               	goto	u5500
 10255     0095                     u5501:
 10256     0095  28B0               	goto	l3648
 10257     0096                     u5500:
 10258     0096                     l3638:
 10259                           
 10260                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 10261     0096  1FC1               	btfss	(efgtoa@e+1)^(0+128),7
 10262     0097  2899               	goto	u5511
 10263     0098  289A               	goto	u5510
 10264     0099                     u5511:
 10265     0099  28A4               	goto	l3644
 10266     009A                     u5510:
 10267     009A                     l3640:
 10268                           
 10269                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 10270     009A  303F               	movlw	63
 10271     009B  00DC               	movwf	(efgtoa@u+3)^(0+128)
 10272     009C  3080               	movlw	128
 10273     009D  00DB               	movwf	(efgtoa@u+2)^(0+128)
 10274     009E  3000               	movlw	0
 10275     009F  00DA               	movwf	(efgtoa@u+1)^(0+128)
 10276     00A0  3000               	movlw	0
 10277     00A1  00D9               	movwf	efgtoa@u^(0+128)
 10278     00A2                     l3642:
 10279                           
 10280                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 10281     00A2  01C0               	clrf	efgtoa@e^(0+128)
 10282     00A3  01C1               	clrf	(efgtoa@e+1)^(0+128)
 10283     00A4                     l3644:
 10284                           
 10285                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 10286     00A4  3067               	movlw	103
 10287     00A5  063A               	xorwf	efgtoa@mode^(0+128),w
 10288     00A6  1903               	btfsc	3,2
 10289     00A7  28A9               	goto	u5521
 10290     00A8  28AA               	goto	u5520
 10291     00A9                     u5521:
 10292     00A9  28B0               	goto	l3648
 10293     00AA                     u5520:
 10294     00AA                     l3646:
 10295                           
 10296                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 10297     00AA  0840               	movf	efgtoa@e^(0+128),w
 10298     00AB  07BE               	addwf	efgtoa@m^(0+128),f
 10299     00AC  1803               	skipnc
 10300     00AD  0ABF               	incf	(efgtoa@m+1)^(0+128),f
 10301     00AE  0841               	movf	(efgtoa@e+1)^(0+128),w
 10302     00AF  07BF               	addwf	(efgtoa@m+1)^(0+128),f
 10303     00B0                     l3648:
 10304                           
 10305                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 10306     00B0  01C8               	clrf	efgtoa@i^(0+128)
 10307     00B1  01C9               	clrf	(efgtoa@i+1)^(0+128)
 10308     00B2                     l3650:
 10309                           
 10310                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 10311     00B2  0856               	movf	(efgtoa@g+3)^(0+128),w
 10312     00B3  00CD               	movwf	(efgtoa@h+3)^(0+128)
 10313     00B4  0855               	movf	(efgtoa@g+2)^(0+128),w
 10314     00B5  00CC               	movwf	(efgtoa@h+2)^(0+128)
 10315     00B6  0854               	movf	(efgtoa@g+1)^(0+128),w
 10316     00B7  00CB               	movwf	(efgtoa@h+1)^(0+128)
 10317     00B8  0853               	movf	efgtoa@g^(0+128),w
 10318     00B9  00CA               	movwf	efgtoa@h^(0+128)
 10319     00BA                     l3652:
 10320                           
 10321                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 10322     00BA  085C               	movf	(efgtoa@u+3)^(0+128),w
 10323     00BB  00C7               	movwf	(efgtoa@ou+3)^(0+128)
 10324     00BC  085B               	movf	(efgtoa@u+2)^(0+128),w
 10325     00BD  00C6               	movwf	(efgtoa@ou+2)^(0+128)
 10326     00BE  085A               	movf	(efgtoa@u+1)^(0+128),w
 10327     00BF  00C5               	movwf	(efgtoa@ou+1)^(0+128)
 10328     00C0  0859               	movf	efgtoa@u^(0+128),w
 10329     00C1  00C4               	movwf	efgtoa@ou^(0+128)
 10330                           
 10331                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 10332     00C2  29FD               	goto	l3664
 10333     00C3                     l3654:
 10334                           
 10335                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 10336     00C3  1683               	bsf	3,5	;RP0=1, select bank1
 10337     00C4  1303               	bcf	3,6	;RP1=0, select bank1
 10338     00C5  085C               	movf	(efgtoa@u+3)^(0+128),w
 10339     00C6  1283               	bcf	3,5	;RP0=0, select bank0
 10340     00C7  1303               	bcf	3,6	;RP1=0, select bank0
 10341     00C8  00CB               	movwf	___fldiv@a+3
 10342     00C9  1683               	bsf	3,5	;RP0=1, select bank1
 10343     00CA  1303               	bcf	3,6	;RP1=0, select bank1
 10344     00CB  085B               	movf	(efgtoa@u+2)^(0+128),w
 10345     00CC  1283               	bcf	3,5	;RP0=0, select bank0
 10346     00CD  1303               	bcf	3,6	;RP1=0, select bank0
 10347     00CE  00CA               	movwf	___fldiv@a+2
 10348     00CF  1683               	bsf	3,5	;RP0=1, select bank1
 10349     00D0  1303               	bcf	3,6	;RP1=0, select bank1
 10350     00D1  085A               	movf	(efgtoa@u+1)^(0+128),w
 10351     00D2  1283               	bcf	3,5	;RP0=0, select bank0
 10352     00D3  1303               	bcf	3,6	;RP1=0, select bank0
 10353     00D4  00C9               	movwf	___fldiv@a+1
 10354     00D5  1683               	bsf	3,5	;RP0=1, select bank1
 10355     00D6  1303               	bcf	3,6	;RP1=0, select bank1
 10356     00D7  0859               	movf	efgtoa@u^(0+128),w
 10357     00D8  1283               	bcf	3,5	;RP0=0, select bank0
 10358     00D9  1303               	bcf	3,6	;RP1=0, select bank0
 10359     00DA  00C8               	movwf	___fldiv@a
 10360     00DB  1683               	bsf	3,5	;RP0=1, select bank1
 10361     00DC  1303               	bcf	3,6	;RP1=0, select bank1
 10362     00DD  084D               	movf	(efgtoa@h+3)^(0+128),w
 10363     00DE  1283               	bcf	3,5	;RP0=0, select bank0
 10364     00DF  1303               	bcf	3,6	;RP1=0, select bank0
 10365     00E0  00CF               	movwf	___fldiv@b+3
 10366     00E1  1683               	bsf	3,5	;RP0=1, select bank1
 10367     00E2  1303               	bcf	3,6	;RP1=0, select bank1
 10368     00E3  084C               	movf	(efgtoa@h+2)^(0+128),w
 10369     00E4  1283               	bcf	3,5	;RP0=0, select bank0
 10370     00E5  1303               	bcf	3,6	;RP1=0, select bank0
 10371     00E6  00CE               	movwf	___fldiv@b+2
 10372     00E7  1683               	bsf	3,5	;RP0=1, select bank1
 10373     00E8  1303               	bcf	3,6	;RP1=0, select bank1
 10374     00E9  084B               	movf	(efgtoa@h+1)^(0+128),w
 10375     00EA  1283               	bcf	3,5	;RP0=0, select bank0
 10376     00EB  1303               	bcf	3,6	;RP1=0, select bank0
 10377     00EC  00CD               	movwf	___fldiv@b+1
 10378     00ED  1683               	bsf	3,5	;RP0=1, select bank1
 10379     00EE  1303               	bcf	3,6	;RP1=0, select bank1
 10380     00EF  084A               	movf	efgtoa@h^(0+128),w
 10381     00F0  1283               	bcf	3,5	;RP0=0, select bank0
 10382     00F1  1303               	bcf	3,6	;RP1=0, select bank0
 10383     00F2  00CC               	movwf	___fldiv@b
 10384     00F3  160A  118A  23E6  120A  118A  	fcall	___fldiv
 10385     00F8  1283               	bcf	3,5	;RP0=0, select bank0
 10386     00F9  1303               	bcf	3,6	;RP1=0, select bank0
 10387     00FA  084B               	movf	?___fldiv+3,w
 10388     00FB  00E5               	movwf	floorf@x+3
 10389     00FC  084A               	movf	?___fldiv+2,w
 10390     00FD  00E4               	movwf	floorf@x+2
 10391     00FE  0849               	movf	?___fldiv+1,w
 10392     00FF  00E3               	movwf	floorf@x+1
 10393     0100  0848               	movf	?___fldiv,w
 10394     0101  00E2               	movwf	floorf@x
 10395     0102  120A  118A  264C  120A  118A  	fcall	_floorf
 10396     0107  1283               	bcf	3,5	;RP0=0, select bank0
 10397     0108  1303               	bcf	3,6	;RP1=0, select bank0
 10398     0109  0865               	movf	?_floorf+3,w
 10399     010A  1683               	bsf	3,5	;RP0=1, select bank1
 10400     010B  1303               	bcf	3,6	;RP1=0, select bank1
 10401     010C  00D1               	movwf	(efgtoa@l+3)^(0+128)
 10402     010D  1283               	bcf	3,5	;RP0=0, select bank0
 10403     010E  1303               	bcf	3,6	;RP1=0, select bank0
 10404     010F  0864               	movf	?_floorf+2,w
 10405     0110  1683               	bsf	3,5	;RP0=1, select bank1
 10406     0111  1303               	bcf	3,6	;RP1=0, select bank1
 10407     0112  00D0               	movwf	(efgtoa@l+2)^(0+128)
 10408     0113  1283               	bcf	3,5	;RP0=0, select bank0
 10409     0114  1303               	bcf	3,6	;RP1=0, select bank0
 10410     0115  0863               	movf	?_floorf+1,w
 10411     0116  1683               	bsf	3,5	;RP0=1, select bank1
 10412     0117  1303               	bcf	3,6	;RP1=0, select bank1
 10413     0118  00CF               	movwf	(efgtoa@l+1)^(0+128)
 10414     0119  1283               	bcf	3,5	;RP0=0, select bank0
 10415     011A  1303               	bcf	3,6	;RP1=0, select bank0
 10416     011B  0862               	movf	?_floorf,w
 10417     011C  1683               	bsf	3,5	;RP0=1, select bank1
 10418     011D  1303               	bcf	3,6	;RP1=0, select bank1
 10419     011E  00CE               	movwf	efgtoa@l^(0+128)
 10420     011F                     l3656:
 10421                           
 10422                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 10423     011F  0851               	movf	(efgtoa@l+3)^(0+128),w
 10424     0120  1283               	bcf	3,5	;RP0=0, select bank0
 10425     0121  1303               	bcf	3,6	;RP1=0, select bank0
 10426     0122  00A3               	movwf	___fltol@f1+3
 10427     0123  1683               	bsf	3,5	;RP0=1, select bank1
 10428     0124  1303               	bcf	3,6	;RP1=0, select bank1
 10429     0125  0850               	movf	(efgtoa@l+2)^(0+128),w
 10430     0126  1283               	bcf	3,5	;RP0=0, select bank0
 10431     0127  1303               	bcf	3,6	;RP1=0, select bank0
 10432     0128  00A2               	movwf	___fltol@f1+2
 10433     0129  1683               	bsf	3,5	;RP0=1, select bank1
 10434     012A  1303               	bcf	3,6	;RP1=0, select bank1
 10435     012B  084F               	movf	(efgtoa@l+1)^(0+128),w
 10436     012C  1283               	bcf	3,5	;RP0=0, select bank0
 10437     012D  1303               	bcf	3,6	;RP1=0, select bank0
 10438     012E  00A1               	movwf	___fltol@f1+1
 10439     012F  1683               	bsf	3,5	;RP0=1, select bank1
 10440     0130  1303               	bcf	3,6	;RP1=0, select bank1
 10441     0131  084E               	movf	efgtoa@l^(0+128),w
 10442     0132  1283               	bcf	3,5	;RP0=0, select bank0
 10443     0133  1303               	bcf	3,6	;RP1=0, select bank0
 10444     0134  00A0               	movwf	___fltol@f1
 10445     0135  160A  158A  25DD  120A  118A  	fcall	___fltol
 10446     013A  1283               	bcf	3,5	;RP0=0, select bank0
 10447     013B  1303               	bcf	3,6	;RP1=0, select bank0
 10448     013C  0821               	movf	?___fltol+1,w
 10449     013D  1683               	bsf	3,5	;RP0=1, select bank1
 10450     013E  1303               	bcf	3,6	;RP1=0, select bank1
 10451     013F  00BD               	movwf	(efgtoa@d+1)^(0+128)
 10452     0140  1283               	bcf	3,5	;RP0=0, select bank0
 10453     0141  1303               	bcf	3,6	;RP1=0, select bank0
 10454     0142  0820               	movf	?___fltol,w
 10455     0143  1683               	bsf	3,5	;RP0=1, select bank1
 10456     0144  1303               	bcf	3,6	;RP1=0, select bank1
 10457     0145  00BC               	movwf	efgtoa@d^(0+128)
 10458     0146                     l3658:
 10459                           
 10460                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 10461     0146  085C               	movf	(efgtoa@u+3)^(0+128),w
 10462     0147  1283               	bcf	3,5	;RP0=0, select bank0
 10463     0148  1303               	bcf	3,6	;RP1=0, select bank0
 10464     0149  00B5               	movwf	___flmul@a+3
 10465     014A  1683               	bsf	3,5	;RP0=1, select bank1
 10466     014B  1303               	bcf	3,6	;RP1=0, select bank1
 10467     014C  085B               	movf	(efgtoa@u+2)^(0+128),w
 10468     014D  1283               	bcf	3,5	;RP0=0, select bank0
 10469     014E  1303               	bcf	3,6	;RP1=0, select bank0
 10470     014F  00B4               	movwf	___flmul@a+2
 10471     0150  1683               	bsf	3,5	;RP0=1, select bank1
 10472     0151  1303               	bcf	3,6	;RP1=0, select bank1
 10473     0152  085A               	movf	(efgtoa@u+1)^(0+128),w
 10474     0153  1283               	bcf	3,5	;RP0=0, select bank0
 10475     0154  1303               	bcf	3,6	;RP1=0, select bank0
 10476     0155  00B3               	movwf	___flmul@a+1
 10477     0156  1683               	bsf	3,5	;RP0=1, select bank1
 10478     0157  1303               	bcf	3,6	;RP1=0, select bank1
 10479     0158  0859               	movf	efgtoa@u^(0+128),w
 10480     0159  1283               	bcf	3,5	;RP0=0, select bank0
 10481     015A  1303               	bcf	3,6	;RP1=0, select bank0
 10482     015B  00B2               	movwf	___flmul@a
 10483     015C  1683               	bsf	3,5	;RP0=1, select bank1
 10484     015D  1303               	bcf	3,6	;RP1=0, select bank1
 10485     015E  0851               	movf	(efgtoa@l+3)^(0+128),w
 10486     015F  1283               	bcf	3,5	;RP0=0, select bank0
 10487     0160  1303               	bcf	3,6	;RP1=0, select bank0
 10488     0161  00B1               	movwf	___flmul@b+3
 10489     0162  1683               	bsf	3,5	;RP0=1, select bank1
 10490     0163  1303               	bcf	3,6	;RP1=0, select bank1
 10491     0164  0850               	movf	(efgtoa@l+2)^(0+128),w
 10492     0165  1283               	bcf	3,5	;RP0=0, select bank0
 10493     0166  1303               	bcf	3,6	;RP1=0, select bank0
 10494     0167  00B0               	movwf	___flmul@b+2
 10495     0168  1683               	bsf	3,5	;RP0=1, select bank1
 10496     0169  1303               	bcf	3,6	;RP1=0, select bank1
 10497     016A  084F               	movf	(efgtoa@l+1)^(0+128),w
 10498     016B  1283               	bcf	3,5	;RP0=0, select bank0
 10499     016C  1303               	bcf	3,6	;RP1=0, select bank0
 10500     016D  00AF               	movwf	___flmul@b+1
 10501     016E  1683               	bsf	3,5	;RP0=1, select bank1
 10502     016F  1303               	bcf	3,6	;RP1=0, select bank1
 10503     0170  084E               	movf	efgtoa@l^(0+128),w
 10504     0171  1283               	bcf	3,5	;RP0=0, select bank0
 10505     0172  1303               	bcf	3,6	;RP1=0, select bank0
 10506     0173  00AE               	movwf	___flmul@b
 10507     0174  120A  158A  214E  120A  118A  	fcall	___flmul
 10508     0179  1283               	bcf	3,5	;RP0=0, select bank0
 10509     017A  1303               	bcf	3,6	;RP1=0, select bank0
 10510     017B  0831               	movf	?___flmul+3,w
 10511     017C  00CB               	movwf	___flsub@a+3
 10512     017D  0830               	movf	?___flmul+2,w
 10513     017E  00CA               	movwf	___flsub@a+2
 10514     017F  082F               	movf	?___flmul+1,w
 10515     0180  00C9               	movwf	___flsub@a+1
 10516     0181  082E               	movf	?___flmul,w
 10517     0182  00C8               	movwf	___flsub@a
 10518     0183  1683               	bsf	3,5	;RP0=1, select bank1
 10519     0184  1303               	bcf	3,6	;RP1=0, select bank1
 10520     0185  084D               	movf	(efgtoa@h+3)^(0+128),w
 10521     0186  1283               	bcf	3,5	;RP0=0, select bank0
 10522     0187  1303               	bcf	3,6	;RP1=0, select bank0
 10523     0188  00CF               	movwf	___flsub@b+3
 10524     0189  1683               	bsf	3,5	;RP0=1, select bank1
 10525     018A  1303               	bcf	3,6	;RP1=0, select bank1
 10526     018B  084C               	movf	(efgtoa@h+2)^(0+128),w
 10527     018C  1283               	bcf	3,5	;RP0=0, select bank0
 10528     018D  1303               	bcf	3,6	;RP1=0, select bank0
 10529     018E  00CE               	movwf	___flsub@b+2
 10530     018F  1683               	bsf	3,5	;RP0=1, select bank1
 10531     0190  1303               	bcf	3,6	;RP1=0, select bank1
 10532     0191  084B               	movf	(efgtoa@h+1)^(0+128),w
 10533     0192  1283               	bcf	3,5	;RP0=0, select bank0
 10534     0193  1303               	bcf	3,6	;RP1=0, select bank0
 10535     0194  00CD               	movwf	___flsub@b+1
 10536     0195  1683               	bsf	3,5	;RP0=1, select bank1
 10537     0196  1303               	bcf	3,6	;RP1=0, select bank1
 10538     0197  084A               	movf	efgtoa@h^(0+128),w
 10539     0198  1283               	bcf	3,5	;RP0=0, select bank0
 10540     0199  1303               	bcf	3,6	;RP1=0, select bank0
 10541     019A  00CC               	movwf	___flsub@b
 10542     019B  160A  158A  2358  120A  118A  	fcall	___flsub
 10543     01A0  1283               	bcf	3,5	;RP0=0, select bank0
 10544     01A1  1303               	bcf	3,6	;RP1=0, select bank0
 10545     01A2  084B               	movf	?___flsub+3,w
 10546     01A3  1683               	bsf	3,5	;RP0=1, select bank1
 10547     01A4  1303               	bcf	3,6	;RP1=0, select bank1
 10548     01A5  00CD               	movwf	(efgtoa@h+3)^(0+128)
 10549     01A6  1283               	bcf	3,5	;RP0=0, select bank0
 10550     01A7  1303               	bcf	3,6	;RP1=0, select bank0
 10551     01A8  084A               	movf	?___flsub+2,w
 10552     01A9  1683               	bsf	3,5	;RP0=1, select bank1
 10553     01AA  1303               	bcf	3,6	;RP1=0, select bank1
 10554     01AB  00CC               	movwf	(efgtoa@h+2)^(0+128)
 10555     01AC  1283               	bcf	3,5	;RP0=0, select bank0
 10556     01AD  1303               	bcf	3,6	;RP1=0, select bank0
 10557     01AE  0849               	movf	?___flsub+1,w
 10558     01AF  1683               	bsf	3,5	;RP0=1, select bank1
 10559     01B0  1303               	bcf	3,6	;RP1=0, select bank1
 10560     01B1  00CB               	movwf	(efgtoa@h+1)^(0+128)
 10561     01B2  1283               	bcf	3,5	;RP0=0, select bank0
 10562     01B3  1303               	bcf	3,6	;RP1=0, select bank0
 10563     01B4  0848               	movf	?___flsub,w
 10564     01B5  1683               	bsf	3,5	;RP0=1, select bank1
 10565     01B6  1303               	bcf	3,6	;RP1=0, select bank1
 10566     01B7  00CA               	movwf	efgtoa@h^(0+128)
 10567     01B8                     l3660:
 10568                           
 10569                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 10570     01B8  3041               	movlw	65
 10571     01B9  1283               	bcf	3,5	;RP0=0, select bank0
 10572     01BA  1303               	bcf	3,6	;RP1=0, select bank0
 10573     01BB  00CB               	movwf	___fldiv@a+3
 10574     01BC  3020               	movlw	32
 10575     01BD  00CA               	movwf	___fldiv@a+2
 10576     01BE  3000               	movlw	0
 10577     01BF  00C9               	movwf	___fldiv@a+1
 10578     01C0  3000               	movlw	0
 10579     01C1  00C8               	movwf	___fldiv@a
 10580     01C2  1683               	bsf	3,5	;RP0=1, select bank1
 10581     01C3  1303               	bcf	3,6	;RP1=0, select bank1
 10582     01C4  085C               	movf	(efgtoa@u+3)^(0+128),w
 10583     01C5  1283               	bcf	3,5	;RP0=0, select bank0
 10584     01C6  1303               	bcf	3,6	;RP1=0, select bank0
 10585     01C7  00CF               	movwf	___fldiv@b+3
 10586     01C8  1683               	bsf	3,5	;RP0=1, select bank1
 10587     01C9  1303               	bcf	3,6	;RP1=0, select bank1
 10588     01CA  085B               	movf	(efgtoa@u+2)^(0+128),w
 10589     01CB  1283               	bcf	3,5	;RP0=0, select bank0
 10590     01CC  1303               	bcf	3,6	;RP1=0, select bank0
 10591     01CD  00CE               	movwf	___fldiv@b+2
 10592     01CE  1683               	bsf	3,5	;RP0=1, select bank1
 10593     01CF  1303               	bcf	3,6	;RP1=0, select bank1
 10594     01D0  085A               	movf	(efgtoa@u+1)^(0+128),w
 10595     01D1  1283               	bcf	3,5	;RP0=0, select bank0
 10596     01D2  1303               	bcf	3,6	;RP1=0, select bank0
 10597     01D3  00CD               	movwf	___fldiv@b+1
 10598     01D4  1683               	bsf	3,5	;RP0=1, select bank1
 10599     01D5  1303               	bcf	3,6	;RP1=0, select bank1
 10600     01D6  0859               	movf	efgtoa@u^(0+128),w
 10601     01D7  1283               	bcf	3,5	;RP0=0, select bank0
 10602     01D8  1303               	bcf	3,6	;RP1=0, select bank0
 10603     01D9  00CC               	movwf	___fldiv@b
 10604     01DA  160A  118A  23E6  120A  118A  	fcall	___fldiv
 10605     01DF  1283               	bcf	3,5	;RP0=0, select bank0
 10606     01E0  1303               	bcf	3,6	;RP1=0, select bank0
 10607     01E1  084B               	movf	?___fldiv+3,w
 10608     01E2  1683               	bsf	3,5	;RP0=1, select bank1
 10609     01E3  1303               	bcf	3,6	;RP1=0, select bank1
 10610     01E4  00DC               	movwf	(efgtoa@u+3)^(0+128)
 10611     01E5  1283               	bcf	3,5	;RP0=0, select bank0
 10612     01E6  1303               	bcf	3,6	;RP1=0, select bank0
 10613     01E7  084A               	movf	?___fldiv+2,w
 10614     01E8  1683               	bsf	3,5	;RP0=1, select bank1
 10615     01E9  1303               	bcf	3,6	;RP1=0, select bank1
 10616     01EA  00DB               	movwf	(efgtoa@u+2)^(0+128)
 10617     01EB  1283               	bcf	3,5	;RP0=0, select bank0
 10618     01EC  1303               	bcf	3,6	;RP1=0, select bank0
 10619     01ED  0849               	movf	?___fldiv+1,w
 10620     01EE  1683               	bsf	3,5	;RP0=1, select bank1
 10621     01EF  1303               	bcf	3,6	;RP1=0, select bank1
 10622     01F0  00DA               	movwf	(efgtoa@u+1)^(0+128)
 10623     01F1  1283               	bcf	3,5	;RP0=0, select bank0
 10624     01F2  1303               	bcf	3,6	;RP1=0, select bank0
 10625     01F3  0848               	movf	?___fldiv,w
 10626     01F4  1683               	bsf	3,5	;RP0=1, select bank1
 10627     01F5  1303               	bcf	3,6	;RP1=0, select bank1
 10628     01F6  00D9               	movwf	efgtoa@u^(0+128)
 10629     01F7                     l3662:
 10630                           
 10631                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 10632     01F7  3001               	movlw	1
 10633     01F8  07C8               	addwf	efgtoa@i^(0+128),f
 10634     01F9  1803               	skipnc
 10635     01FA  0AC9               	incf	(efgtoa@i+1)^(0+128),f
 10636     01FB  3000               	movlw	0
 10637     01FC  07C9               	addwf	(efgtoa@i+1)^(0+128),f
 10638     01FD                     l3664:
 10639                           
 10640                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 10641     01FD  0849               	movf	(efgtoa@i+1)^(0+128),w
 10642     01FE  3A80               	xorlw	128
 10643     01FF  1283               	bcf	3,5	;RP0=0, select bank0
 10644     0200  1303               	bcf	3,6	;RP1=0, select bank0
 10645     0201  00EC               	movwf	??_efgtoa
 10646     0202  1683               	bsf	3,5	;RP0=1, select bank1
 10647     0203  1303               	bcf	3,6	;RP1=0, select bank1
 10648     0204  083F               	movf	(efgtoa@m+1)^(0+128),w
 10649     0205  3A80               	xorlw	128
 10650     0206  1283               	bcf	3,5	;RP0=0, select bank0
 10651     0207  1303               	bcf	3,6	;RP1=0, select bank0
 10652     0208  026C               	subwf	??_efgtoa,w
 10653     0209  1D03               	skipz
 10654     020A  2A0F               	goto	u5535
 10655     020B  1683               	bsf	3,5	;RP0=1, select bank1
 10656     020C  1303               	bcf	3,6	;RP1=0, select bank1
 10657     020D  083E               	movf	efgtoa@m^(0+128),w
 10658     020E  0248               	subwf	efgtoa@i^(0+128),w
 10659     020F                     u5535:
 10660     020F  1C03               	skipc
 10661     0210  2A12               	goto	u5531
 10662     0211  2A13               	goto	u5530
 10663     0212                     u5531:
 10664     0212  28C3               	goto	l3654
 10665     0213                     u5530:
 10666     0213                     l3666:
 10667                           
 10668                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 10669     0213  3040               	movlw	64
 10670     0214  1283               	bcf	3,5	;RP0=0, select bank0
 10671     0215  1303               	bcf	3,6	;RP1=0, select bank0
 10672     0216  00B1               	movwf	___flmul@b+3
 10673     0217  30A0               	movlw	160
 10674     0218  00B0               	movwf	___flmul@b+2
 10675     0219  3000               	movlw	0
 10676     021A  00AF               	movwf	___flmul@b+1
 10677     021B  3000               	movlw	0
 10678     021C  00AE               	movwf	___flmul@b
 10679     021D  1683               	bsf	3,5	;RP0=1, select bank1
 10680     021E  1303               	bcf	3,6	;RP1=0, select bank1
 10681     021F  085C               	movf	(efgtoa@u+3)^(0+128),w
 10682     0220  1283               	bcf	3,5	;RP0=0, select bank0
 10683     0221  1303               	bcf	3,6	;RP1=0, select bank0
 10684     0222  00B5               	movwf	___flmul@a+3
 10685     0223  1683               	bsf	3,5	;RP0=1, select bank1
 10686     0224  1303               	bcf	3,6	;RP1=0, select bank1
 10687     0225  085B               	movf	(efgtoa@u+2)^(0+128),w
 10688     0226  1283               	bcf	3,5	;RP0=0, select bank0
 10689     0227  1303               	bcf	3,6	;RP1=0, select bank0
 10690     0228  00B4               	movwf	___flmul@a+2
 10691     0229  1683               	bsf	3,5	;RP0=1, select bank1
 10692     022A  1303               	bcf	3,6	;RP1=0, select bank1
 10693     022B  085A               	movf	(efgtoa@u+1)^(0+128),w
 10694     022C  1283               	bcf	3,5	;RP0=0, select bank0
 10695     022D  1303               	bcf	3,6	;RP1=0, select bank0
 10696     022E  00B3               	movwf	___flmul@a+1
 10697     022F  1683               	bsf	3,5	;RP0=1, select bank1
 10698     0230  1303               	bcf	3,6	;RP1=0, select bank1
 10699     0231  0859               	movf	efgtoa@u^(0+128),w
 10700     0232  1283               	bcf	3,5	;RP0=0, select bank0
 10701     0233  1303               	bcf	3,6	;RP1=0, select bank0
 10702     0234  00B2               	movwf	___flmul@a
 10703     0235  120A  158A  214E  120A  118A  	fcall	___flmul
 10704     023A  1283               	bcf	3,5	;RP0=0, select bank0
 10705     023B  1303               	bcf	3,6	;RP1=0, select bank0
 10706     023C  0831               	movf	?___flmul+3,w
 10707     023D  1683               	bsf	3,5	;RP0=1, select bank1
 10708     023E  1303               	bcf	3,6	;RP1=0, select bank1
 10709     023F  00D1               	movwf	(efgtoa@l+3)^(0+128)
 10710     0240  1283               	bcf	3,5	;RP0=0, select bank0
 10711     0241  1303               	bcf	3,6	;RP1=0, select bank0
 10712     0242  0830               	movf	?___flmul+2,w
 10713     0243  1683               	bsf	3,5	;RP0=1, select bank1
 10714     0244  1303               	bcf	3,6	;RP1=0, select bank1
 10715     0245  00D0               	movwf	(efgtoa@l+2)^(0+128)
 10716     0246  1283               	bcf	3,5	;RP0=0, select bank0
 10717     0247  1303               	bcf	3,6	;RP1=0, select bank0
 10718     0248  082F               	movf	?___flmul+1,w
 10719     0249  1683               	bsf	3,5	;RP0=1, select bank1
 10720     024A  1303               	bcf	3,6	;RP1=0, select bank1
 10721     024B  00CF               	movwf	(efgtoa@l+1)^(0+128)
 10722     024C  1283               	bcf	3,5	;RP0=0, select bank0
 10723     024D  1303               	bcf	3,6	;RP1=0, select bank0
 10724     024E  082E               	movf	?___flmul,w
 10725     024F  1683               	bsf	3,5	;RP0=1, select bank1
 10726     0250  1303               	bcf	3,6	;RP1=0, select bank1
 10727     0251  00CE               	movwf	efgtoa@l^(0+128)
 10728     0252                     l3668:
 10729                           
 10730                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 10731     0252  084D               	movf	(efgtoa@h+3)^(0+128),w
 10732     0253  1283               	bcf	3,5	;RP0=0, select bank0
 10733     0254  1303               	bcf	3,6	;RP1=0, select bank0
 10734     0255  00CB               	movwf	___flge@ff1+3
 10735     0256  1683               	bsf	3,5	;RP0=1, select bank1
 10736     0257  1303               	bcf	3,6	;RP1=0, select bank1
 10737     0258  084C               	movf	(efgtoa@h+2)^(0+128),w
 10738     0259  1283               	bcf	3,5	;RP0=0, select bank0
 10739     025A  1303               	bcf	3,6	;RP1=0, select bank0
 10740     025B  00CA               	movwf	___flge@ff1+2
 10741     025C  1683               	bsf	3,5	;RP0=1, select bank1
 10742     025D  1303               	bcf	3,6	;RP1=0, select bank1
 10743     025E  084B               	movf	(efgtoa@h+1)^(0+128),w
 10744     025F  1283               	bcf	3,5	;RP0=0, select bank0
 10745     0260  1303               	bcf	3,6	;RP1=0, select bank0
 10746     0261  00C9               	movwf	___flge@ff1+1
 10747     0262  1683               	bsf	3,5	;RP0=1, select bank1
 10748     0263  1303               	bcf	3,6	;RP1=0, select bank1
 10749     0264  084A               	movf	efgtoa@h^(0+128),w
 10750     0265  1283               	bcf	3,5	;RP0=0, select bank0
 10751     0266  1303               	bcf	3,6	;RP1=0, select bank0
 10752     0267  00C8               	movwf	___flge@ff1
 10753     0268  1683               	bsf	3,5	;RP0=1, select bank1
 10754     0269  1303               	bcf	3,6	;RP1=0, select bank1
 10755     026A  0851               	movf	(efgtoa@l+3)^(0+128),w
 10756     026B  1283               	bcf	3,5	;RP0=0, select bank0
 10757     026C  1303               	bcf	3,6	;RP1=0, select bank0
 10758     026D  00CF               	movwf	___flge@ff2+3
 10759     026E  1683               	bsf	3,5	;RP0=1, select bank1
 10760     026F  1303               	bcf	3,6	;RP1=0, select bank1
 10761     0270  0850               	movf	(efgtoa@l+2)^(0+128),w
 10762     0271  1283               	bcf	3,5	;RP0=0, select bank0
 10763     0272  1303               	bcf	3,6	;RP1=0, select bank0
 10764     0273  00CE               	movwf	___flge@ff2+2
 10765     0274  1683               	bsf	3,5	;RP0=1, select bank1
 10766     0275  1303               	bcf	3,6	;RP1=0, select bank1
 10767     0276  084F               	movf	(efgtoa@l+1)^(0+128),w
 10768     0277  1283               	bcf	3,5	;RP0=0, select bank0
 10769     0278  1303               	bcf	3,6	;RP1=0, select bank0
 10770     0279  00CD               	movwf	___flge@ff2+1
 10771     027A  1683               	bsf	3,5	;RP0=1, select bank1
 10772     027B  1303               	bcf	3,6	;RP1=0, select bank1
 10773     027C  084E               	movf	efgtoa@l^(0+128),w
 10774     027D  1283               	bcf	3,5	;RP0=0, select bank0
 10775     027E  1303               	bcf	3,6	;RP1=0, select bank0
 10776     027F  00CC               	movwf	___flge@ff2
 10777     0280  160A  118A  20E9  120A  118A  	fcall	___flge
 10778     0285  1803               	btfsc	3,0
 10779     0286  2A88               	goto	u5541
 10780     0287  2A89               	goto	u5540
 10781     0288                     u5541:
 10782     0288  2A94               	goto	l3672
 10783     0289                     u5540:
 10784     0289                     l3670:
 10785                           
 10786                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 10787     0289  3000               	movlw	0
 10788     028A  1683               	bsf	3,5	;RP0=1, select bank1
 10789     028B  1303               	bcf	3,6	;RP1=0, select bank1
 10790     028C  00D1               	movwf	(efgtoa@l+3)^(0+128)
 10791     028D  3000               	movlw	0
 10792     028E  00D0               	movwf	(efgtoa@l+2)^(0+128)
 10793     028F  3000               	movlw	0
 10794     0290  00CF               	movwf	(efgtoa@l+1)^(0+128)
 10795     0291  3000               	movlw	0
 10796     0292  00CE               	movwf	efgtoa@l^(0+128)
 10797                           
 10798                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 10799     0293  2ADB               	goto	l3678
 10800     0294                     l3672:
 10801                           
 10802                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 10803     0294  1683               	bsf	3,5	;RP0=1, select bank1
 10804     0295  1303               	bcf	3,6	;RP1=0, select bank1
 10805     0296  084D               	movf	(efgtoa@h+3)^(0+128),w
 10806     0297  1283               	bcf	3,5	;RP0=0, select bank0
 10807     0298  1303               	bcf	3,6	;RP1=0, select bank0
 10808     0299  00A3               	movwf	___fleq@ff1+3
 10809     029A  1683               	bsf	3,5	;RP0=1, select bank1
 10810     029B  1303               	bcf	3,6	;RP1=0, select bank1
 10811     029C  084C               	movf	(efgtoa@h+2)^(0+128),w
 10812     029D  1283               	bcf	3,5	;RP0=0, select bank0
 10813     029E  1303               	bcf	3,6	;RP1=0, select bank0
 10814     029F  00A2               	movwf	___fleq@ff1+2
 10815     02A0  1683               	bsf	3,5	;RP0=1, select bank1
 10816     02A1  1303               	bcf	3,6	;RP1=0, select bank1
 10817     02A2  084B               	movf	(efgtoa@h+1)^(0+128),w
 10818     02A3  1283               	bcf	3,5	;RP0=0, select bank0
 10819     02A4  1303               	bcf	3,6	;RP1=0, select bank0
 10820     02A5  00A1               	movwf	___fleq@ff1+1
 10821     02A6  1683               	bsf	3,5	;RP0=1, select bank1
 10822     02A7  1303               	bcf	3,6	;RP1=0, select bank1
 10823     02A8  084A               	movf	efgtoa@h^(0+128),w
 10824     02A9  1283               	bcf	3,5	;RP0=0, select bank0
 10825     02AA  1303               	bcf	3,6	;RP1=0, select bank0
 10826     02AB  00A0               	movwf	___fleq@ff1
 10827     02AC  1683               	bsf	3,5	;RP0=1, select bank1
 10828     02AD  1303               	bcf	3,6	;RP1=0, select bank1
 10829     02AE  0851               	movf	(efgtoa@l+3)^(0+128),w
 10830     02AF  1283               	bcf	3,5	;RP0=0, select bank0
 10831     02B0  1303               	bcf	3,6	;RP1=0, select bank0
 10832     02B1  00A7               	movwf	___fleq@ff2+3
 10833     02B2  1683               	bsf	3,5	;RP0=1, select bank1
 10834     02B3  1303               	bcf	3,6	;RP1=0, select bank1
 10835     02B4  0850               	movf	(efgtoa@l+2)^(0+128),w
 10836     02B5  1283               	bcf	3,5	;RP0=0, select bank0
 10837     02B6  1303               	bcf	3,6	;RP1=0, select bank0
 10838     02B7  00A6               	movwf	___fleq@ff2+2
 10839     02B8  1683               	bsf	3,5	;RP0=1, select bank1
 10840     02B9  1303               	bcf	3,6	;RP1=0, select bank1
 10841     02BA  084F               	movf	(efgtoa@l+1)^(0+128),w
 10842     02BB  1283               	bcf	3,5	;RP0=0, select bank0
 10843     02BC  1303               	bcf	3,6	;RP1=0, select bank0
 10844     02BD  00A5               	movwf	___fleq@ff2+1
 10845     02BE  1683               	bsf	3,5	;RP0=1, select bank1
 10846     02BF  1303               	bcf	3,6	;RP1=0, select bank1
 10847     02C0  084E               	movf	efgtoa@l^(0+128),w
 10848     02C1  1283               	bcf	3,5	;RP0=0, select bank0
 10849     02C2  1303               	bcf	3,6	;RP1=0, select bank0
 10850     02C3  00A4               	movwf	___fleq@ff2
 10851     02C4  160A  158A  24E3  120A  118A  	fcall	___fleq
 10852     02C9  1C03               	btfss	3,0
 10853     02CA  2ACC               	goto	u5551
 10854     02CB  2ACD               	goto	u5550
 10855     02CC                     u5551:
 10856     02CC  2ADB               	goto	l3678
 10857     02CD                     u5550:
 10858     02CD                     l3674:
 10859     02CD  1683               	bsf	3,5	;RP0=1, select bank1
 10860     02CE  1303               	bcf	3,6	;RP1=0, select bank1
 10861     02CF  183C               	btfsc	efgtoa@d^(0+128),0
 10862     02D0  2AD2               	goto	u5561
 10863     02D1  2AD3               	goto	u5560
 10864     02D2                     u5561:
 10865     02D2  2ADB               	goto	l3678
 10866     02D3                     u5560:
 10867     02D3                     l3676:
 10868                           
 10869                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 10870     02D3  3000               	movlw	0
 10871     02D4  00D1               	movwf	(efgtoa@l+3)^(0+128)
 10872     02D5  3000               	movlw	0
 10873     02D6  00D0               	movwf	(efgtoa@l+2)^(0+128)
 10874     02D7  3000               	movlw	0
 10875     02D8  00CF               	movwf	(efgtoa@l+1)^(0+128)
 10876     02D9  3000               	movlw	0
 10877     02DA  00CE               	movwf	efgtoa@l^(0+128)
 10878     02DB                     l3678:
 10879                           
 10880                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 10881     02DB  1683               	bsf	3,5	;RP0=1, select bank1
 10882     02DC  1303               	bcf	3,6	;RP1=0, select bank1
 10883     02DD  0851               	movf	(efgtoa@l+3)^(0+128),w
 10884     02DE  1283               	bcf	3,5	;RP0=0, select bank0
 10885     02DF  1303               	bcf	3,6	;RP1=0, select bank0
 10886     02E0  00A3               	movwf	___fladd@b+3
 10887     02E1  1683               	bsf	3,5	;RP0=1, select bank1
 10888     02E2  1303               	bcf	3,6	;RP1=0, select bank1
 10889     02E3  0850               	movf	(efgtoa@l+2)^(0+128),w
 10890     02E4  1283               	bcf	3,5	;RP0=0, select bank0
 10891     02E5  1303               	bcf	3,6	;RP1=0, select bank0
 10892     02E6  00A2               	movwf	___fladd@b+2
 10893     02E7  1683               	bsf	3,5	;RP0=1, select bank1
 10894     02E8  1303               	bcf	3,6	;RP1=0, select bank1
 10895     02E9  084F               	movf	(efgtoa@l+1)^(0+128),w
 10896     02EA  1283               	bcf	3,5	;RP0=0, select bank0
 10897     02EB  1303               	bcf	3,6	;RP1=0, select bank0
 10898     02EC  00A1               	movwf	___fladd@b+1
 10899     02ED  1683               	bsf	3,5	;RP0=1, select bank1
 10900     02EE  1303               	bcf	3,6	;RP1=0, select bank1
 10901     02EF  084E               	movf	efgtoa@l^(0+128),w
 10902     02F0  1283               	bcf	3,5	;RP0=0, select bank0
 10903     02F1  1303               	bcf	3,6	;RP1=0, select bank0
 10904     02F2  00A0               	movwf	___fladd@b
 10905     02F3  1683               	bsf	3,5	;RP0=1, select bank1
 10906     02F4  1303               	bcf	3,6	;RP1=0, select bank1
 10907     02F5  0856               	movf	(efgtoa@g+3)^(0+128),w
 10908     02F6  1283               	bcf	3,5	;RP0=0, select bank0
 10909     02F7  1303               	bcf	3,6	;RP1=0, select bank0
 10910     02F8  00A7               	movwf	___fladd@a+3
 10911     02F9  1683               	bsf	3,5	;RP0=1, select bank1
 10912     02FA  1303               	bcf	3,6	;RP1=0, select bank1
 10913     02FB  0855               	movf	(efgtoa@g+2)^(0+128),w
 10914     02FC  1283               	bcf	3,5	;RP0=0, select bank0
 10915     02FD  1303               	bcf	3,6	;RP1=0, select bank0
 10916     02FE  00A6               	movwf	___fladd@a+2
 10917     02FF  1683               	bsf	3,5	;RP0=1, select bank1
 10918     0300  1303               	bcf	3,6	;RP1=0, select bank1
 10919     0301  0854               	movf	(efgtoa@g+1)^(0+128),w
 10920     0302  1283               	bcf	3,5	;RP0=0, select bank0
 10921     0303  1303               	bcf	3,6	;RP1=0, select bank0
 10922     0304  00A5               	movwf	___fladd@a+1
 10923     0305  1683               	bsf	3,5	;RP0=1, select bank1
 10924     0306  1303               	bcf	3,6	;RP1=0, select bank1
 10925     0307  0853               	movf	efgtoa@g^(0+128),w
 10926     0308  1283               	bcf	3,5	;RP0=0, select bank0
 10927     0309  1303               	bcf	3,6	;RP1=0, select bank0
 10928     030A  00A4               	movwf	___fladd@a
 10929     030B  160A  118A  25B0  120A  118A  	fcall	___fladd
 10930     0310  1283               	bcf	3,5	;RP0=0, select bank0
 10931     0311  1303               	bcf	3,6	;RP1=0, select bank0
 10932     0312  0823               	movf	?___fladd+3,w
 10933     0313  1683               	bsf	3,5	;RP0=1, select bank1
 10934     0314  1303               	bcf	3,6	;RP1=0, select bank1
 10935     0315  00CD               	movwf	(efgtoa@h+3)^(0+128)
 10936     0316  1283               	bcf	3,5	;RP0=0, select bank0
 10937     0317  1303               	bcf	3,6	;RP1=0, select bank0
 10938     0318  0822               	movf	?___fladd+2,w
 10939     0319  1683               	bsf	3,5	;RP0=1, select bank1
 10940     031A  1303               	bcf	3,6	;RP1=0, select bank1
 10941     031B  00CC               	movwf	(efgtoa@h+2)^(0+128)
 10942     031C  1283               	bcf	3,5	;RP0=0, select bank0
 10943     031D  1303               	bcf	3,6	;RP1=0, select bank0
 10944     031E  0821               	movf	?___fladd+1,w
 10945     031F  1683               	bsf	3,5	;RP0=1, select bank1
 10946     0320  1303               	bcf	3,6	;RP1=0, select bank1
 10947     0321  00CB               	movwf	(efgtoa@h+1)^(0+128)
 10948     0322  1283               	bcf	3,5	;RP0=0, select bank0
 10949     0323  1303               	bcf	3,6	;RP1=0, select bank0
 10950     0324  0820               	movf	?___fladd,w
 10951     0325  1683               	bsf	3,5	;RP0=1, select bank1
 10952     0326  1303               	bcf	3,6	;RP1=0, select bank1
 10953     0327  00CA               	movwf	efgtoa@h^(0+128)
 10954     0328                     l3680:
 10955                           
 10956                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 10957     0328  084D               	movf	(efgtoa@h+3)^(0+128),w
 10958     0329  1283               	bcf	3,5	;RP0=0, select bank0
 10959     032A  1303               	bcf	3,6	;RP1=0, select bank0
 10960     032B  00CB               	movwf	___flge@ff1+3
 10961     032C  1683               	bsf	3,5	;RP0=1, select bank1
 10962     032D  1303               	bcf	3,6	;RP1=0, select bank1
 10963     032E  084C               	movf	(efgtoa@h+2)^(0+128),w
 10964     032F  1283               	bcf	3,5	;RP0=0, select bank0
 10965     0330  1303               	bcf	3,6	;RP1=0, select bank0
 10966     0331  00CA               	movwf	___flge@ff1+2
 10967     0332  1683               	bsf	3,5	;RP0=1, select bank1
 10968     0333  1303               	bcf	3,6	;RP1=0, select bank1
 10969     0334  084B               	movf	(efgtoa@h+1)^(0+128),w
 10970     0335  1283               	bcf	3,5	;RP0=0, select bank0
 10971     0336  1303               	bcf	3,6	;RP1=0, select bank0
 10972     0337  00C9               	movwf	___flge@ff1+1
 10973     0338  1683               	bsf	3,5	;RP0=1, select bank1
 10974     0339  1303               	bcf	3,6	;RP1=0, select bank1
 10975     033A  084A               	movf	efgtoa@h^(0+128),w
 10976     033B  1283               	bcf	3,5	;RP0=0, select bank0
 10977     033C  1303               	bcf	3,6	;RP1=0, select bank0
 10978     033D  00C8               	movwf	___flge@ff1
 10979     033E  3041               	movlw	65
 10980     033F  00B1               	movwf	___flmul@b+3
 10981     0340  3020               	movlw	32
 10982     0341  00B0               	movwf	___flmul@b+2
 10983     0342  3000               	movlw	0
 10984     0343  00AF               	movwf	___flmul@b+1
 10985     0344  3000               	movlw	0
 10986     0345  00AE               	movwf	___flmul@b
 10987     0346  1683               	bsf	3,5	;RP0=1, select bank1
 10988     0347  1303               	bcf	3,6	;RP1=0, select bank1
 10989     0348  0847               	movf	(efgtoa@ou+3)^(0+128),w
 10990     0349  1283               	bcf	3,5	;RP0=0, select bank0
 10991     034A  1303               	bcf	3,6	;RP1=0, select bank0
 10992     034B  00B5               	movwf	___flmul@a+3
 10993     034C  1683               	bsf	3,5	;RP0=1, select bank1
 10994     034D  1303               	bcf	3,6	;RP1=0, select bank1
 10995     034E  0846               	movf	(efgtoa@ou+2)^(0+128),w
 10996     034F  1283               	bcf	3,5	;RP0=0, select bank0
 10997     0350  1303               	bcf	3,6	;RP1=0, select bank0
 10998     0351  00B4               	movwf	___flmul@a+2
 10999     0352  1683               	bsf	3,5	;RP0=1, select bank1
 11000     0353  1303               	bcf	3,6	;RP1=0, select bank1
 11001     0354  0845               	movf	(efgtoa@ou+1)^(0+128),w
 11002     0355  1283               	bcf	3,5	;RP0=0, select bank0
 11003     0356  1303               	bcf	3,6	;RP1=0, select bank0
 11004     0357  00B3               	movwf	___flmul@a+1
 11005     0358  1683               	bsf	3,5	;RP0=1, select bank1
 11006     0359  1303               	bcf	3,6	;RP1=0, select bank1
 11007     035A  0844               	movf	efgtoa@ou^(0+128),w
 11008     035B  1283               	bcf	3,5	;RP0=0, select bank0
 11009     035C  1303               	bcf	3,6	;RP1=0, select bank0
 11010     035D  00B2               	movwf	___flmul@a
 11011     035E  120A  158A  214E  120A  118A  	fcall	___flmul
 11012     0363  1283               	bcf	3,5	;RP0=0, select bank0
 11013     0364  1303               	bcf	3,6	;RP1=0, select bank0
 11014     0365  0831               	movf	?___flmul+3,w
 11015     0366  00CF               	movwf	___flge@ff2+3
 11016     0367  0830               	movf	?___flmul+2,w
 11017     0368  00CE               	movwf	___flge@ff2+2
 11018     0369  082F               	movf	?___flmul+1,w
 11019     036A  00CD               	movwf	___flge@ff2+1
 11020     036B  082E               	movf	?___flmul,w
 11021     036C  00CC               	movwf	___flge@ff2
 11022     036D  160A  118A  20E9  120A  118A  	fcall	___flge
 11023     0372  1C03               	btfss	3,0
 11024     0373  2B75               	goto	u5571
 11025     0374  2B76               	goto	u5570
 11026     0375                     u5571:
 11027     0375  2BC9               	goto	l788
 11028     0376                     u5570:
 11029     0376                     l3682:
 11030                           
 11031                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 11032     0376  3001               	movlw	1
 11033     0377  1683               	bsf	3,5	;RP0=1, select bank1
 11034     0378  1303               	bcf	3,6	;RP1=0, select bank1
 11035     0379  07C0               	addwf	efgtoa@e^(0+128),f
 11036     037A  1803               	skipnc
 11037     037B  0AC1               	incf	(efgtoa@e+1)^(0+128),f
 11038     037C  3000               	movlw	0
 11039     037D  07C1               	addwf	(efgtoa@e+1)^(0+128),f
 11040     037E                     l3684:
 11041                           
 11042                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 11043     037E  3041               	movlw	65
 11044     037F  1283               	bcf	3,5	;RP0=0, select bank0
 11045     0380  1303               	bcf	3,6	;RP1=0, select bank0
 11046     0381  00B1               	movwf	___flmul@b+3
 11047     0382  3020               	movlw	32
 11048     0383  00B0               	movwf	___flmul@b+2
 11049     0384  3000               	movlw	0
 11050     0385  00AF               	movwf	___flmul@b+1
 11051     0386  3000               	movlw	0
 11052     0387  00AE               	movwf	___flmul@b
 11053     0388  1683               	bsf	3,5	;RP0=1, select bank1
 11054     0389  1303               	bcf	3,6	;RP1=0, select bank1
 11055     038A  0847               	movf	(efgtoa@ou+3)^(0+128),w
 11056     038B  1283               	bcf	3,5	;RP0=0, select bank0
 11057     038C  1303               	bcf	3,6	;RP1=0, select bank0
 11058     038D  00B5               	movwf	___flmul@a+3
 11059     038E  1683               	bsf	3,5	;RP0=1, select bank1
 11060     038F  1303               	bcf	3,6	;RP1=0, select bank1
 11061     0390  0846               	movf	(efgtoa@ou+2)^(0+128),w
 11062     0391  1283               	bcf	3,5	;RP0=0, select bank0
 11063     0392  1303               	bcf	3,6	;RP1=0, select bank0
 11064     0393  00B4               	movwf	___flmul@a+2
 11065     0394  1683               	bsf	3,5	;RP0=1, select bank1
 11066     0395  1303               	bcf	3,6	;RP1=0, select bank1
 11067     0396  0845               	movf	(efgtoa@ou+1)^(0+128),w
 11068     0397  1283               	bcf	3,5	;RP0=0, select bank0
 11069     0398  1303               	bcf	3,6	;RP1=0, select bank0
 11070     0399  00B3               	movwf	___flmul@a+1
 11071     039A  1683               	bsf	3,5	;RP0=1, select bank1
 11072     039B  1303               	bcf	3,6	;RP1=0, select bank1
 11073     039C  0844               	movf	efgtoa@ou^(0+128),w
 11074     039D  1283               	bcf	3,5	;RP0=0, select bank0
 11075     039E  1303               	bcf	3,6	;RP1=0, select bank0
 11076     039F  00B2               	movwf	___flmul@a
 11077     03A0  120A  158A  214E  120A  118A  	fcall	___flmul
 11078     03A5  1283               	bcf	3,5	;RP0=0, select bank0
 11079     03A6  1303               	bcf	3,6	;RP1=0, select bank0
 11080     03A7  0831               	movf	?___flmul+3,w
 11081     03A8  1683               	bsf	3,5	;RP0=1, select bank1
 11082     03A9  1303               	bcf	3,6	;RP1=0, select bank1
 11083     03AA  00C7               	movwf	(efgtoa@ou+3)^(0+128)
 11084     03AB  1283               	bcf	3,5	;RP0=0, select bank0
 11085     03AC  1303               	bcf	3,6	;RP1=0, select bank0
 11086     03AD  0830               	movf	?___flmul+2,w
 11087     03AE  1683               	bsf	3,5	;RP0=1, select bank1
 11088     03AF  1303               	bcf	3,6	;RP1=0, select bank1
 11089     03B0  00C6               	movwf	(efgtoa@ou+2)^(0+128)
 11090     03B1  1283               	bcf	3,5	;RP0=0, select bank0
 11091     03B2  1303               	bcf	3,6	;RP1=0, select bank0
 11092     03B3  082F               	movf	?___flmul+1,w
 11093     03B4  1683               	bsf	3,5	;RP0=1, select bank1
 11094     03B5  1303               	bcf	3,6	;RP1=0, select bank1
 11095     03B6  00C5               	movwf	(efgtoa@ou+1)^(0+128)
 11096     03B7  1283               	bcf	3,5	;RP0=0, select bank0
 11097     03B8  1303               	bcf	3,6	;RP1=0, select bank0
 11098     03B9  082E               	movf	?___flmul,w
 11099     03BA  1683               	bsf	3,5	;RP0=1, select bank1
 11100     03BB  1303               	bcf	3,6	;RP1=0, select bank1
 11101     03BC  00C4               	movwf	efgtoa@ou^(0+128)
 11102     03BD                     l3686:
 11103                           
 11104                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 11105     03BD  3066               	movlw	102
 11106     03BE  063B               	xorwf	efgtoa@nmode^(0+128),w
 11107     03BF  1D03               	btfss	3,2
 11108     03C0  2BC2               	goto	u5581
 11109     03C1  2BC3               	goto	u5580
 11110     03C2                     u5581:
 11111     03C2  2BC9               	goto	l788
 11112     03C3                     u5580:
 11113     03C3                     l3688:
 11114                           
 11115                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 11116     03C3  3001               	movlw	1
 11117     03C4  07BE               	addwf	efgtoa@m^(0+128),f
 11118     03C5  1803               	skipnc
 11119     03C6  0ABF               	incf	(efgtoa@m+1)^(0+128),f
 11120     03C7  3000               	movlw	0
 11121     03C8  07BF               	addwf	(efgtoa@m+1)^(0+128),f
 11122     03C9                     l788:	
 11123                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 767:  }
 11124                           
 11125                           
 11126                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 11127     03C9  1683               	bsf	3,5	;RP0=1, select bank1
 11128     03CA  1303               	bcf	3,6	;RP1=0, select bank1
 11129     03CB  0847               	movf	(efgtoa@ou+3)^(0+128),w
 11130     03CC  00DC               	movwf	(efgtoa@u+3)^(0+128)
 11131     03CD  0846               	movf	(efgtoa@ou+2)^(0+128),w
 11132     03CE  00DB               	movwf	(efgtoa@u+2)^(0+128)
 11133     03CF  0845               	movf	(efgtoa@ou+1)^(0+128),w
 11134     03D0  00DA               	movwf	(efgtoa@u+1)^(0+128)
 11135     03D1  0844               	movf	efgtoa@ou^(0+128),w
 11136     03D2  00D9               	movwf	efgtoa@u^(0+128)
 11137                           
 11138                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 11139     03D3  0841               	movf	(efgtoa@e+1)^(0+128),w
 11140     03D4  00B2               	movwf	(efgtoa@ne+1)^(0+128)
 11141     03D5  0840               	movf	efgtoa@e^(0+128),w
 11142     03D6  00B1               	movwf	efgtoa@ne^(0+128)
 11143     03D7                     l3690:
 11144                           
 11145                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 11146     03D7  01B9               	clrf	efgtoa@pp^(0+128)
 11147     03D8                     l3692:
 11148                           
 11149                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 11150     03D8  01B5               	clrf	efgtoa@t^(0+128)
 11151     03D9  01B6               	clrf	(efgtoa@t+1)^(0+128)
 11152     03DA                     l3694:
 11153                           
 11154                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 11155     03DA  01C8               	clrf	efgtoa@i^(0+128)
 11156     03DB  01C9               	clrf	(efgtoa@i+1)^(0+128)
 11157                           
 11158                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 11159     03DC  2D9F               	goto	l3738
 11160     03DD                     l3696:
 11161                           
 11162                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 11163     03DD  1683               	bsf	3,5	;RP0=1, select bank1
 11164     03DE  1303               	bcf	3,6	;RP1=0, select bank1
 11165     03DF  085C               	movf	(efgtoa@u+3)^(0+128),w
 11166     03E0  1283               	bcf	3,5	;RP0=0, select bank0
 11167     03E1  1303               	bcf	3,6	;RP1=0, select bank0
 11168     03E2  00CB               	movwf	___fldiv@a+3
 11169     03E3  1683               	bsf	3,5	;RP0=1, select bank1
 11170     03E4  1303               	bcf	3,6	;RP1=0, select bank1
 11171     03E5  085B               	movf	(efgtoa@u+2)^(0+128),w
 11172     03E6  1283               	bcf	3,5	;RP0=0, select bank0
 11173     03E7  1303               	bcf	3,6	;RP1=0, select bank0
 11174     03E8  00CA               	movwf	___fldiv@a+2
 11175     03E9  1683               	bsf	3,5	;RP0=1, select bank1
 11176     03EA  1303               	bcf	3,6	;RP1=0, select bank1
 11177     03EB  085A               	movf	(efgtoa@u+1)^(0+128),w
 11178     03EC  1283               	bcf	3,5	;RP0=0, select bank0
 11179     03ED  1303               	bcf	3,6	;RP1=0, select bank0
 11180     03EE  00C9               	movwf	___fldiv@a+1
 11181     03EF  1683               	bsf	3,5	;RP0=1, select bank1
 11182     03F0  1303               	bcf	3,6	;RP1=0, select bank1
 11183     03F1  0859               	movf	efgtoa@u^(0+128),w
 11184     03F2  1283               	bcf	3,5	;RP0=0, select bank0
 11185     03F3  1303               	bcf	3,6	;RP1=0, select bank0
 11186     03F4  00C8               	movwf	___fldiv@a
 11187     03F5  1683               	bsf	3,5	;RP0=1, select bank1
 11188     03F6  1303               	bcf	3,6	;RP1=0, select bank1
 11189     03F7  084D               	movf	(efgtoa@h+3)^(0+128),w
 11190     03F8  1283               	bcf	3,5	;RP0=0, select bank0
 11191     03F9  1303               	bcf	3,6	;RP1=0, select bank0
 11192     03FA  00CF               	movwf	___fldiv@b+3
 11193     03FB  1683               	bsf	3,5	;RP0=1, select bank1
 11194     03FC  1303               	bcf	3,6	;RP1=0, select bank1
 11195     03FD  084C               	movf	(efgtoa@h+2)^(0+128),w
 11196     03FE  1283               	bcf	3,5	;RP0=0, select bank0
 11197     03FF  1303               	bcf	3,6	;RP1=0, select bank0
 11198     0400  00CE               	movwf	___fldiv@b+2
 11199     0401  1683               	bsf	3,5	;RP0=1, select bank1
 11200     0402  1303               	bcf	3,6	;RP1=0, select bank1
 11201     0403  084B               	movf	(efgtoa@h+1)^(0+128),w
 11202     0404  1283               	bcf	3,5	;RP0=0, select bank0
 11203     0405  1303               	bcf	3,6	;RP1=0, select bank0
 11204     0406  00CD               	movwf	___fldiv@b+1
 11205     0407  1683               	bsf	3,5	;RP0=1, select bank1
 11206     0408  1303               	bcf	3,6	;RP1=0, select bank1
 11207     0409  084A               	movf	efgtoa@h^(0+128),w
 11208     040A  1283               	bcf	3,5	;RP0=0, select bank0
 11209     040B  1303               	bcf	3,6	;RP1=0, select bank0
 11210     040C  00CC               	movwf	___fldiv@b
 11211     040D  160A  118A  23E6  120A  118A  	fcall	___fldiv
 11212     0412  1283               	bcf	3,5	;RP0=0, select bank0
 11213     0413  1303               	bcf	3,6	;RP1=0, select bank0
 11214     0414  084B               	movf	?___fldiv+3,w
 11215     0415  00E5               	movwf	floorf@x+3
 11216     0416  084A               	movf	?___fldiv+2,w
 11217     0417  00E4               	movwf	floorf@x+2
 11218     0418  0849               	movf	?___fldiv+1,w
 11219     0419  00E3               	movwf	floorf@x+1
 11220     041A  0848               	movf	?___fldiv,w
 11221     041B  00E2               	movwf	floorf@x
 11222     041C  120A  118A  264C  120A  118A  	fcall	_floorf
 11223     0421  1283               	bcf	3,5	;RP0=0, select bank0
 11224     0422  1303               	bcf	3,6	;RP1=0, select bank0
 11225     0423  0865               	movf	?_floorf+3,w
 11226     0424  1683               	bsf	3,5	;RP0=1, select bank1
 11227     0425  1303               	bcf	3,6	;RP1=0, select bank1
 11228     0426  00D1               	movwf	(efgtoa@l+3)^(0+128)
 11229     0427  1283               	bcf	3,5	;RP0=0, select bank0
 11230     0428  1303               	bcf	3,6	;RP1=0, select bank0
 11231     0429  0864               	movf	?_floorf+2,w
 11232     042A  1683               	bsf	3,5	;RP0=1, select bank1
 11233     042B  1303               	bcf	3,6	;RP1=0, select bank1
 11234     042C  00D0               	movwf	(efgtoa@l+2)^(0+128)
 11235     042D  1283               	bcf	3,5	;RP0=0, select bank0
 11236     042E  1303               	bcf	3,6	;RP1=0, select bank0
 11237     042F  0863               	movf	?_floorf+1,w
 11238     0430  1683               	bsf	3,5	;RP0=1, select bank1
 11239     0431  1303               	bcf	3,6	;RP1=0, select bank1
 11240     0432  00CF               	movwf	(efgtoa@l+1)^(0+128)
 11241     0433  1283               	bcf	3,5	;RP0=0, select bank0
 11242     0434  1303               	bcf	3,6	;RP1=0, select bank0
 11243     0435  0862               	movf	?_floorf,w
 11244     0436  1683               	bsf	3,5	;RP0=1, select bank1
 11245     0437  1303               	bcf	3,6	;RP1=0, select bank1
 11246     0438  00CE               	movwf	efgtoa@l^(0+128)
 11247                           
 11248                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 11249     0439  0851               	movf	(efgtoa@l+3)^(0+128),w
 11250     043A  1283               	bcf	3,5	;RP0=0, select bank0
 11251     043B  1303               	bcf	3,6	;RP1=0, select bank0
 11252     043C  00A3               	movwf	___fltol@f1+3
 11253     043D  1683               	bsf	3,5	;RP0=1, select bank1
 11254     043E  1303               	bcf	3,6	;RP1=0, select bank1
 11255     043F  0850               	movf	(efgtoa@l+2)^(0+128),w
 11256     0440  1283               	bcf	3,5	;RP0=0, select bank0
 11257     0441  1303               	bcf	3,6	;RP1=0, select bank0
 11258     0442  00A2               	movwf	___fltol@f1+2
 11259     0443  1683               	bsf	3,5	;RP0=1, select bank1
 11260     0444  1303               	bcf	3,6	;RP1=0, select bank1
 11261     0445  084F               	movf	(efgtoa@l+1)^(0+128),w
 11262     0446  1283               	bcf	3,5	;RP0=0, select bank0
 11263     0447  1303               	bcf	3,6	;RP1=0, select bank0
 11264     0448  00A1               	movwf	___fltol@f1+1
 11265     0449  1683               	bsf	3,5	;RP0=1, select bank1
 11266     044A  1303               	bcf	3,6	;RP1=0, select bank1
 11267     044B  084E               	movf	efgtoa@l^(0+128),w
 11268     044C  1283               	bcf	3,5	;RP0=0, select bank0
 11269     044D  1303               	bcf	3,6	;RP1=0, select bank0
 11270     044E  00A0               	movwf	___fltol@f1
 11271     044F  160A  158A  25DD  120A  118A  	fcall	___fltol
 11272     0454  1283               	bcf	3,5	;RP0=0, select bank0
 11273     0455  1303               	bcf	3,6	;RP1=0, select bank0
 11274     0456  0821               	movf	?___fltol+1,w
 11275     0457  3A80               	xorlw	128
 11276     0458  00FF               	movwf	btemp+1
 11277     0459  3080               	movlw	128
 11278     045A  027F               	subwf	btemp+1,w
 11279     045B  1D03               	skipz
 11280     045C  2C5F               	goto	u5595
 11281     045D  300A               	movlw	10
 11282     045E  0220               	subwf	?___fltol,w
 11283     045F                     u5595:
 11284     045F  1803               	skipnc
 11285     0460  2C62               	goto	u5591
 11286     0461  2C63               	goto	u5590
 11287     0462                     u5591:
 11288     0462  2C8D               	goto	l3700
 11289     0463                     u5590:
 11290     0463                     l3698:
 11291     0463  1683               	bsf	3,5	;RP0=1, select bank1
 11292     0464  1303               	bcf	3,6	;RP1=0, select bank1
 11293     0465  0851               	movf	(efgtoa@l+3)^(0+128),w
 11294     0466  1283               	bcf	3,5	;RP0=0, select bank0
 11295     0467  1303               	bcf	3,6	;RP1=0, select bank0
 11296     0468  00A3               	movwf	___fltol@f1+3
 11297     0469  1683               	bsf	3,5	;RP0=1, select bank1
 11298     046A  1303               	bcf	3,6	;RP1=0, select bank1
 11299     046B  0850               	movf	(efgtoa@l+2)^(0+128),w
 11300     046C  1283               	bcf	3,5	;RP0=0, select bank0
 11301     046D  1303               	bcf	3,6	;RP1=0, select bank0
 11302     046E  00A2               	movwf	___fltol@f1+2
 11303     046F  1683               	bsf	3,5	;RP0=1, select bank1
 11304     0470  1303               	bcf	3,6	;RP1=0, select bank1
 11305     0471  084F               	movf	(efgtoa@l+1)^(0+128),w
 11306     0472  1283               	bcf	3,5	;RP0=0, select bank0
 11307     0473  1303               	bcf	3,6	;RP1=0, select bank0
 11308     0474  00A1               	movwf	___fltol@f1+1
 11309     0475  1683               	bsf	3,5	;RP0=1, select bank1
 11310     0476  1303               	bcf	3,6	;RP1=0, select bank1
 11311     0477  084E               	movf	efgtoa@l^(0+128),w
 11312     0478  1283               	bcf	3,5	;RP0=0, select bank0
 11313     0479  1303               	bcf	3,6	;RP1=0, select bank0
 11314     047A  00A0               	movwf	___fltol@f1
 11315     047B  160A  158A  25DD  120A  118A  	fcall	___fltol
 11316     0480  1283               	bcf	3,5	;RP0=0, select bank0
 11317     0481  1303               	bcf	3,6	;RP1=0, select bank0
 11318     0482  0821               	movf	?___fltol+1,w
 11319     0483  1683               	bsf	3,5	;RP0=1, select bank1
 11320     0484  1303               	bcf	3,6	;RP1=0, select bank1
 11321     0485  00BD               	movwf	(efgtoa@d+1)^(0+128)
 11322     0486  1283               	bcf	3,5	;RP0=0, select bank0
 11323     0487  1303               	bcf	3,6	;RP1=0, select bank0
 11324     0488  0820               	movf	?___fltol,w
 11325     0489  1683               	bsf	3,5	;RP0=1, select bank1
 11326     048A  1303               	bcf	3,6	;RP1=0, select bank1
 11327     048B  00BC               	movwf	efgtoa@d^(0+128)
 11328     048C  2C93               	goto	l3702
 11329     048D                     l3700:
 11330     048D  3009               	movlw	9
 11331     048E  1683               	bsf	3,5	;RP0=1, select bank1
 11332     048F  1303               	bcf	3,6	;RP1=0, select bank1
 11333     0490  00BC               	movwf	efgtoa@d^(0+128)
 11334     0491  3000               	movlw	0
 11335     0492  00BD               	movwf	(efgtoa@d^(0+128)+1)
 11336     0493                     l3702:
 11337                           
 11338                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 11339     0493  0839               	movf	efgtoa@pp^(0+128),w
 11340     0494  1D03               	btfss	3,2
 11341     0495  2C97               	goto	u5601
 11342     0496  2C98               	goto	u5600
 11343     0497                     u5601:
 11344     0497  2CC9               	goto	l3722
 11345     0498                     u5600:
 11346     0498                     l3704:
 11347     0498  1FB2               	btfss	(efgtoa@ne+1)^(0+128),7
 11348     0499  2C9B               	goto	u5611
 11349     049A  2C9C               	goto	u5610
 11350     049B                     u5611:
 11351     049B  2CC9               	goto	l3722
 11352     049C                     u5610:
 11353     049C                     l3706:
 11354                           
 11355                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 11356     049C  0857               	movf	efgtoa@n^(0+128),w
 11357     049D  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11358     049E  0084               	movwf	4
 11359     049F  302E               	movlw	46
 11360     04A0  1783               	bsf	3,7	;select IRP bank2
 11361     04A1  0080               	movwf	0
 11362     04A2                     l3708:
 11363     04A2  3001               	movlw	1
 11364     04A3  07D7               	addwf	efgtoa@n^(0+128),f
 11365     04A4  1803               	skipnc
 11366     04A5  0AD8               	incf	(efgtoa@n+1)^(0+128),f
 11367     04A6  3000               	movlw	0
 11368     04A7  07D8               	addwf	(efgtoa@n+1)^(0+128),f
 11369     04A8                     l3710:
 11370                           
 11371                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 11372     04A8  30FF               	movlw	255
 11373     04A9  07C2               	addwf	efgtoa@w^(0+128),f
 11374     04AA  1803               	skipnc
 11375     04AB  0AC3               	incf	(efgtoa@w+1)^(0+128),f
 11376     04AC  30FF               	movlw	255
 11377     04AD  07C3               	addwf	(efgtoa@w+1)^(0+128),f
 11378     04AE                     l3712:
 11379                           
 11380                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 11381     04AE  3001               	movlw	1
 11382     04AF  00B9               	movwf	efgtoa@pp^(0+128)
 11383     04B0  2CC9               	goto	l3722
 11384     04B1                     l3714:
 11385                           
 11386                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 11387     04B1  0857               	movf	efgtoa@n^(0+128),w
 11388     04B2  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11389     04B3  0084               	movwf	4
 11390     04B4  3030               	movlw	48
 11391     04B5  1783               	bsf	3,7	;select IRP bank2
 11392     04B6  0080               	movwf	0
 11393     04B7                     l3716:
 11394     04B7  3001               	movlw	1
 11395     04B8  07D7               	addwf	efgtoa@n^(0+128),f
 11396     04B9  1803               	skipnc
 11397     04BA  0AD8               	incf	(efgtoa@n+1)^(0+128),f
 11398     04BB  3000               	movlw	0
 11399     04BC  07D8               	addwf	(efgtoa@n+1)^(0+128),f
 11400     04BD                     l3718:
 11401                           
 11402                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 11403     04BD  30FF               	movlw	255
 11404     04BE  07C2               	addwf	efgtoa@w^(0+128),f
 11405     04BF  1803               	skipnc
 11406     04C0  0AC3               	incf	(efgtoa@w+1)^(0+128),f
 11407     04C1  30FF               	movlw	255
 11408     04C2  07C3               	addwf	(efgtoa@w+1)^(0+128),f
 11409     04C3                     l3720:
 11410                           
 11411                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 11412     04C3  30FF               	movlw	255
 11413     04C4  07B5               	addwf	efgtoa@t^(0+128),f
 11414     04C5  1803               	skipnc
 11415     04C6  0AB6               	incf	(efgtoa@t+1)^(0+128),f
 11416     04C7  30FF               	movlw	255
 11417     04C8  07B6               	addwf	(efgtoa@t+1)^(0+128),f
 11418     04C9                     l3722:
 11419                           
 11420                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 11421     04C9  0835               	movf	efgtoa@t^(0+128),w
 11422     04CA  0436               	iorwf	(efgtoa@t+1)^(0+128),w
 11423     04CB  1D03               	btfss	3,2
 11424     04CC  2CCE               	goto	u5621
 11425     04CD  2CCF               	goto	u5620
 11426     04CE                     u5621:
 11427     04CE  2CB1               	goto	l3714
 11428     04CF                     u5620:
 11429     04CF                     l3724:
 11430                           
 11431                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 11432     04CF  0857               	movf	efgtoa@n^(0+128),w
 11433     04D0  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11434     04D1  0084               	movwf	4
 11435     04D2  083C               	movf	efgtoa@d^(0+128),w
 11436     04D3  3E30               	addlw	48
 11437     04D4  1783               	bsf	3,7	;select IRP bank2
 11438     04D5  0080               	movwf	0
 11439     04D6                     l3726:
 11440     04D6  3001               	movlw	1
 11441     04D7  07D7               	addwf	efgtoa@n^(0+128),f
 11442     04D8  1803               	skipnc
 11443     04D9  0AD8               	incf	(efgtoa@n+1)^(0+128),f
 11444     04DA  3000               	movlw	0
 11445     04DB  07D8               	addwf	(efgtoa@n+1)^(0+128),f
 11446     04DC                     l3728:
 11447                           
 11448                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 11449     04DC  30FF               	movlw	255
 11450     04DD  07C2               	addwf	efgtoa@w^(0+128),f
 11451     04DE  1803               	skipnc
 11452     04DF  0AC3               	incf	(efgtoa@w+1)^(0+128),f
 11453     04E0  30FF               	movlw	255
 11454     04E1  07C3               	addwf	(efgtoa@w+1)^(0+128),f
 11455     04E2                     l3730:
 11456                           
 11457                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 11458     04E2  085C               	movf	(efgtoa@u+3)^(0+128),w
 11459     04E3  1283               	bcf	3,5	;RP0=0, select bank0
 11460     04E4  1303               	bcf	3,6	;RP1=0, select bank0
 11461     04E5  00B5               	movwf	___flmul@a+3
 11462     04E6  1683               	bsf	3,5	;RP0=1, select bank1
 11463     04E7  1303               	bcf	3,6	;RP1=0, select bank1
 11464     04E8  085B               	movf	(efgtoa@u+2)^(0+128),w
 11465     04E9  1283               	bcf	3,5	;RP0=0, select bank0
 11466     04EA  1303               	bcf	3,6	;RP1=0, select bank0
 11467     04EB  00B4               	movwf	___flmul@a+2
 11468     04EC  1683               	bsf	3,5	;RP0=1, select bank1
 11469     04ED  1303               	bcf	3,6	;RP1=0, select bank1
 11470     04EE  085A               	movf	(efgtoa@u+1)^(0+128),w
 11471     04EF  1283               	bcf	3,5	;RP0=0, select bank0
 11472     04F0  1303               	bcf	3,6	;RP1=0, select bank0
 11473     04F1  00B3               	movwf	___flmul@a+1
 11474     04F2  1683               	bsf	3,5	;RP0=1, select bank1
 11475     04F3  1303               	bcf	3,6	;RP1=0, select bank1
 11476     04F4  0859               	movf	efgtoa@u^(0+128),w
 11477     04F5  1283               	bcf	3,5	;RP0=0, select bank0
 11478     04F6  1303               	bcf	3,6	;RP1=0, select bank0
 11479     04F7  00B2               	movwf	___flmul@a
 11480     04F8  1683               	bsf	3,5	;RP0=1, select bank1
 11481     04F9  1303               	bcf	3,6	;RP1=0, select bank1
 11482     04FA  0851               	movf	(efgtoa@l+3)^(0+128),w
 11483     04FB  1283               	bcf	3,5	;RP0=0, select bank0
 11484     04FC  1303               	bcf	3,6	;RP1=0, select bank0
 11485     04FD  00B1               	movwf	___flmul@b+3
 11486     04FE  1683               	bsf	3,5	;RP0=1, select bank1
 11487     04FF  1303               	bcf	3,6	;RP1=0, select bank1
 11488     0500  0850               	movf	(efgtoa@l+2)^(0+128),w
 11489     0501  1283               	bcf	3,5	;RP0=0, select bank0
 11490     0502  1303               	bcf	3,6	;RP1=0, select bank0
 11491     0503  00B0               	movwf	___flmul@b+2
 11492     0504  1683               	bsf	3,5	;RP0=1, select bank1
 11493     0505  1303               	bcf	3,6	;RP1=0, select bank1
 11494     0506  084F               	movf	(efgtoa@l+1)^(0+128),w
 11495     0507  1283               	bcf	3,5	;RP0=0, select bank0
 11496     0508  1303               	bcf	3,6	;RP1=0, select bank0
 11497     0509  00AF               	movwf	___flmul@b+1
 11498     050A  1683               	bsf	3,5	;RP0=1, select bank1
 11499     050B  1303               	bcf	3,6	;RP1=0, select bank1
 11500     050C  084E               	movf	efgtoa@l^(0+128),w
 11501     050D  1283               	bcf	3,5	;RP0=0, select bank0
 11502     050E  1303               	bcf	3,6	;RP1=0, select bank0
 11503     050F  00AE               	movwf	___flmul@b
 11504     0510  120A  158A  214E  120A  118A  	fcall	___flmul
 11505     0515  1283               	bcf	3,5	;RP0=0, select bank0
 11506     0516  1303               	bcf	3,6	;RP1=0, select bank0
 11507     0517  0831               	movf	?___flmul+3,w
 11508     0518  00CB               	movwf	___flsub@a+3
 11509     0519  0830               	movf	?___flmul+2,w
 11510     051A  00CA               	movwf	___flsub@a+2
 11511     051B  082F               	movf	?___flmul+1,w
 11512     051C  00C9               	movwf	___flsub@a+1
 11513     051D  082E               	movf	?___flmul,w
 11514     051E  00C8               	movwf	___flsub@a
 11515     051F  1683               	bsf	3,5	;RP0=1, select bank1
 11516     0520  1303               	bcf	3,6	;RP1=0, select bank1
 11517     0521  084D               	movf	(efgtoa@h+3)^(0+128),w
 11518     0522  1283               	bcf	3,5	;RP0=0, select bank0
 11519     0523  1303               	bcf	3,6	;RP1=0, select bank0
 11520     0524  00CF               	movwf	___flsub@b+3
 11521     0525  1683               	bsf	3,5	;RP0=1, select bank1
 11522     0526  1303               	bcf	3,6	;RP1=0, select bank1
 11523     0527  084C               	movf	(efgtoa@h+2)^(0+128),w
 11524     0528  1283               	bcf	3,5	;RP0=0, select bank0
 11525     0529  1303               	bcf	3,6	;RP1=0, select bank0
 11526     052A  00CE               	movwf	___flsub@b+2
 11527     052B  1683               	bsf	3,5	;RP0=1, select bank1
 11528     052C  1303               	bcf	3,6	;RP1=0, select bank1
 11529     052D  084B               	movf	(efgtoa@h+1)^(0+128),w
 11530     052E  1283               	bcf	3,5	;RP0=0, select bank0
 11531     052F  1303               	bcf	3,6	;RP1=0, select bank0
 11532     0530  00CD               	movwf	___flsub@b+1
 11533     0531  1683               	bsf	3,5	;RP0=1, select bank1
 11534     0532  1303               	bcf	3,6	;RP1=0, select bank1
 11535     0533  084A               	movf	efgtoa@h^(0+128),w
 11536     0534  1283               	bcf	3,5	;RP0=0, select bank0
 11537     0535  1303               	bcf	3,6	;RP1=0, select bank0
 11538     0536  00CC               	movwf	___flsub@b
 11539     0537  160A  158A  2358  120A  118A  	fcall	___flsub
 11540     053C  1283               	bcf	3,5	;RP0=0, select bank0
 11541     053D  1303               	bcf	3,6	;RP1=0, select bank0
 11542     053E  084B               	movf	?___flsub+3,w
 11543     053F  1683               	bsf	3,5	;RP0=1, select bank1
 11544     0540  1303               	bcf	3,6	;RP1=0, select bank1
 11545     0541  00CD               	movwf	(efgtoa@h+3)^(0+128)
 11546     0542  1283               	bcf	3,5	;RP0=0, select bank0
 11547     0543  1303               	bcf	3,6	;RP1=0, select bank0
 11548     0544  084A               	movf	?___flsub+2,w
 11549     0545  1683               	bsf	3,5	;RP0=1, select bank1
 11550     0546  1303               	bcf	3,6	;RP1=0, select bank1
 11551     0547  00CC               	movwf	(efgtoa@h+2)^(0+128)
 11552     0548  1283               	bcf	3,5	;RP0=0, select bank0
 11553     0549  1303               	bcf	3,6	;RP1=0, select bank0
 11554     054A  0849               	movf	?___flsub+1,w
 11555     054B  1683               	bsf	3,5	;RP0=1, select bank1
 11556     054C  1303               	bcf	3,6	;RP1=0, select bank1
 11557     054D  00CB               	movwf	(efgtoa@h+1)^(0+128)
 11558     054E  1283               	bcf	3,5	;RP0=0, select bank0
 11559     054F  1303               	bcf	3,6	;RP1=0, select bank0
 11560     0550  0848               	movf	?___flsub,w
 11561     0551  1683               	bsf	3,5	;RP0=1, select bank1
 11562     0552  1303               	bcf	3,6	;RP1=0, select bank1
 11563     0553  00CA               	movwf	efgtoa@h^(0+128)
 11564     0554                     l3732:
 11565                           
 11566                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 11567     0554  3041               	movlw	65
 11568     0555  1283               	bcf	3,5	;RP0=0, select bank0
 11569     0556  1303               	bcf	3,6	;RP1=0, select bank0
 11570     0557  00CB               	movwf	___fldiv@a+3
 11571     0558  3020               	movlw	32
 11572     0559  00CA               	movwf	___fldiv@a+2
 11573     055A  3000               	movlw	0
 11574     055B  00C9               	movwf	___fldiv@a+1
 11575     055C  3000               	movlw	0
 11576     055D  00C8               	movwf	___fldiv@a
 11577     055E  1683               	bsf	3,5	;RP0=1, select bank1
 11578     055F  1303               	bcf	3,6	;RP1=0, select bank1
 11579     0560  085C               	movf	(efgtoa@u+3)^(0+128),w
 11580     0561  1283               	bcf	3,5	;RP0=0, select bank0
 11581     0562  1303               	bcf	3,6	;RP1=0, select bank0
 11582     0563  00CF               	movwf	___fldiv@b+3
 11583     0564  1683               	bsf	3,5	;RP0=1, select bank1
 11584     0565  1303               	bcf	3,6	;RP1=0, select bank1
 11585     0566  085B               	movf	(efgtoa@u+2)^(0+128),w
 11586     0567  1283               	bcf	3,5	;RP0=0, select bank0
 11587     0568  1303               	bcf	3,6	;RP1=0, select bank0
 11588     0569  00CE               	movwf	___fldiv@b+2
 11589     056A  1683               	bsf	3,5	;RP0=1, select bank1
 11590     056B  1303               	bcf	3,6	;RP1=0, select bank1
 11591     056C  085A               	movf	(efgtoa@u+1)^(0+128),w
 11592     056D  1283               	bcf	3,5	;RP0=0, select bank0
 11593     056E  1303               	bcf	3,6	;RP1=0, select bank0
 11594     056F  00CD               	movwf	___fldiv@b+1
 11595     0570  1683               	bsf	3,5	;RP0=1, select bank1
 11596     0571  1303               	bcf	3,6	;RP1=0, select bank1
 11597     0572  0859               	movf	efgtoa@u^(0+128),w
 11598     0573  1283               	bcf	3,5	;RP0=0, select bank0
 11599     0574  1303               	bcf	3,6	;RP1=0, select bank0
 11600     0575  00CC               	movwf	___fldiv@b
 11601     0576  160A  118A  23E6  120A  118A  	fcall	___fldiv
 11602     057B  1283               	bcf	3,5	;RP0=0, select bank0
 11603     057C  1303               	bcf	3,6	;RP1=0, select bank0
 11604     057D  084B               	movf	?___fldiv+3,w
 11605     057E  1683               	bsf	3,5	;RP0=1, select bank1
 11606     057F  1303               	bcf	3,6	;RP1=0, select bank1
 11607     0580  00DC               	movwf	(efgtoa@u+3)^(0+128)
 11608     0581  1283               	bcf	3,5	;RP0=0, select bank0
 11609     0582  1303               	bcf	3,6	;RP1=0, select bank0
 11610     0583  084A               	movf	?___fldiv+2,w
 11611     0584  1683               	bsf	3,5	;RP0=1, select bank1
 11612     0585  1303               	bcf	3,6	;RP1=0, select bank1
 11613     0586  00DB               	movwf	(efgtoa@u+2)^(0+128)
 11614     0587  1283               	bcf	3,5	;RP0=0, select bank0
 11615     0588  1303               	bcf	3,6	;RP1=0, select bank0
 11616     0589  0849               	movf	?___fldiv+1,w
 11617     058A  1683               	bsf	3,5	;RP0=1, select bank1
 11618     058B  1303               	bcf	3,6	;RP1=0, select bank1
 11619     058C  00DA               	movwf	(efgtoa@u+1)^(0+128)
 11620     058D  1283               	bcf	3,5	;RP0=0, select bank0
 11621     058E  1303               	bcf	3,6	;RP1=0, select bank0
 11622     058F  0848               	movf	?___fldiv,w
 11623     0590  1683               	bsf	3,5	;RP0=1, select bank1
 11624     0591  1303               	bcf	3,6	;RP1=0, select bank1
 11625     0592  00D9               	movwf	efgtoa@u^(0+128)
 11626     0593                     l3734:
 11627                           
 11628                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 11629     0593  30FF               	movlw	255
 11630     0594  07B1               	addwf	efgtoa@ne^(0+128),f
 11631     0595  1803               	skipnc
 11632     0596  0AB2               	incf	(efgtoa@ne+1)^(0+128),f
 11633     0597  30FF               	movlw	255
 11634     0598  07B2               	addwf	(efgtoa@ne+1)^(0+128),f
 11635     0599                     l3736:
 11636                           
 11637                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 11638     0599  3001               	movlw	1
 11639     059A  07C8               	addwf	efgtoa@i^(0+128),f
 11640     059B  1803               	skipnc
 11641     059C  0AC9               	incf	(efgtoa@i+1)^(0+128),f
 11642     059D  3000               	movlw	0
 11643     059E  07C9               	addwf	(efgtoa@i+1)^(0+128),f
 11644     059F                     l3738:
 11645                           
 11646                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 11647     059F  0849               	movf	(efgtoa@i+1)^(0+128),w
 11648     05A0  3A80               	xorlw	128
 11649     05A1  1283               	bcf	3,5	;RP0=0, select bank0
 11650     05A2  1303               	bcf	3,6	;RP1=0, select bank0
 11651     05A3  00EC               	movwf	??_efgtoa
 11652     05A4  1683               	bsf	3,5	;RP0=1, select bank1
 11653     05A5  1303               	bcf	3,6	;RP1=0, select bank1
 11654     05A6  083F               	movf	(efgtoa@m+1)^(0+128),w
 11655     05A7  3A80               	xorlw	128
 11656     05A8  1283               	bcf	3,5	;RP0=0, select bank0
 11657     05A9  1303               	bcf	3,6	;RP1=0, select bank0
 11658     05AA  026C               	subwf	??_efgtoa,w
 11659     05AB  1D03               	skipz
 11660     05AC  2DB1               	goto	u5635
 11661     05AD  1683               	bsf	3,5	;RP0=1, select bank1
 11662     05AE  1303               	bcf	3,6	;RP1=0, select bank1
 11663     05AF  083E               	movf	efgtoa@m^(0+128),w
 11664     05B0  0248               	subwf	efgtoa@i^(0+128),w
 11665     05B1                     u5635:
 11666     05B1  1803               	skipnc
 11667     05B2  2DB4               	goto	u5631
 11668     05B3  2DB5               	goto	u5630
 11669     05B4                     u5631:
 11670     05B4  2DC4               	goto	l3742
 11671     05B5                     u5630:
 11672     05B5                     l3740:
 11673     05B5  1683               	bsf	3,5	;RP0=1, select bank1
 11674     05B6  1303               	bcf	3,6	;RP1=0, select bank1
 11675     05B7  0858               	movf	(efgtoa@n+1)^(0+128),w
 11676     05B8  3A80               	xorlw	128
 11677     05B9  00FF               	movwf	btemp+1
 11678     05BA  3080               	movlw	128
 11679     05BB  027F               	subwf	btemp+1,w
 11680     05BC  1D03               	skipz
 11681     05BD  2DC0               	goto	u5645
 11682     05BE  304B               	movlw	75
 11683     05BF  0257               	subwf	efgtoa@n^(0+128),w
 11684     05C0                     u5645:
 11685     05C0  1C03               	skipc
 11686     05C1  2DC3               	goto	u5641
 11687     05C2  2DC4               	goto	u5640
 11688     05C3                     u5641:
 11689     05C3  2BDD               	goto	l3696
 11690     05C4                     u5640:
 11691     05C4                     l3742:
 11692                           
 11693                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 11694     05C4  304F               	movlw	79
 11695     05C5  1683               	bsf	3,5	;RP0=1, select bank1
 11696     05C6  1303               	bcf	3,6	;RP1=0, select bank1
 11697     05C7  00C8               	movwf	efgtoa@i^(0+128)
 11698     05C8  3000               	movlw	0
 11699     05C9  00C9               	movwf	(efgtoa@i^(0+128)+1)
 11700     05CA                     l3744:
 11701                           
 11702                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 11703     05CA  0848               	movf	efgtoa@i^(0+128),w
 11704     05CB  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11705     05CC  0084               	movwf	4
 11706     05CD  1783               	bsf	3,7	;select IRP bank2
 11707     05CE  0180               	clrf	0
 11708     05CF                     l3746:
 11709                           
 11710                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 11711     05CF  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 11712     05D0  1283               	bcf	3,5	;RP0=0, select bank0
 11713     05D1  1303               	bcf	3,6	;RP1=0, select bank0
 11714     05D2  00EC               	movwf	??_efgtoa
 11715     05D3  1683               	bsf	3,5	;RP0=1, select bank1
 11716     05D4  1303               	bcf	3,6	;RP1=0, select bank1
 11717     05D5  0857               	movf	efgtoa@n^(0+128),w
 11718     05D6  1283               	bcf	3,5	;RP0=0, select bank0
 11719     05D7  1303               	bcf	3,6	;RP1=0, select bank0
 11720     05D8  02EC               	subwf	??_efgtoa,f
 11721     05D9  1683               	bsf	3,5	;RP0=1, select bank1
 11722     05DA  1303               	bcf	3,6	;RP1=0, select bank1
 11723     05DB  0848               	movf	efgtoa@i^(0+128),w
 11724     05DC  1283               	bcf	3,5	;RP0=0, select bank0
 11725     05DD  1303               	bcf	3,6	;RP1=0, select bank0
 11726     05DE  076C               	addwf	??_efgtoa,w
 11727     05DF  00A0               	movwf	memcpy@d1
 11728     05E0  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 11729     05E1  00A1               	movwf	memcpy@s1
 11730     05E2  1683               	bsf	3,5	;RP0=1, select bank1
 11731     05E3  1303               	bcf	3,6	;RP1=0, select bank1
 11732     05E4  0858               	movf	(efgtoa@n+1)^(0+128),w
 11733     05E5  1283               	bcf	3,5	;RP0=0, select bank0
 11734     05E6  1303               	bcf	3,6	;RP1=0, select bank0
 11735     05E7  00A3               	movwf	memcpy@n+1
 11736     05E8  1683               	bsf	3,5	;RP0=1, select bank1
 11737     05E9  1303               	bcf	3,6	;RP1=0, select bank1
 11738     05EA  0857               	movf	efgtoa@n^(0+128),w
 11739     05EB  1283               	bcf	3,5	;RP0=0, select bank0
 11740     05EC  1303               	bcf	3,6	;RP1=0, select bank0
 11741     05ED  00A2               	movwf	memcpy@n
 11742     05EE  160A  158A  2312  120A  118A  	fcall	_memcpy
 11743     05F3                     l3748:
 11744                           
 11745                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 11746     05F3  1683               	bsf	3,5	;RP0=1, select bank1
 11747     05F4  1303               	bcf	3,6	;RP1=0, select bank1
 11748     05F5  0857               	movf	efgtoa@n^(0+128),w
 11749     05F6  0248               	subwf	efgtoa@i^(0+128),w
 11750     05F7  00D7               	movwf	efgtoa@n^(0+128)
 11751     05F8  0858               	movf	(efgtoa@n+1)^(0+128),w
 11752     05F9  1C03               	skipc
 11753     05FA  0A58               	incf	(efgtoa@n+1)^(0+128),w
 11754     05FB  0249               	subwf	(efgtoa@i+1)^(0+128),w
 11755     05FC  00D8               	movwf	(efgtoa@n+1)^(0+128)
 11756     05FD                     l3750:
 11757                           
 11758                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 11759     05FD  0852               	movf	efgtoa@sign^(0+128),w
 11760     05FE  1D03               	btfss	3,2
 11761     05FF  2E01               	goto	u5651
 11762     0600  2E03               	goto	u5650
 11763     0601                     u5651:
 11764     0601  3001               	movlw	1
 11765     0602  2E04               	goto	u5660
 11766     0603                     u5650:
 11767     0603  3000               	movlw	0
 11768     0604                     u5660:
 11769     0604  1283               	bcf	3,5	;RP0=0, select bank0
 11770     0605  1303               	bcf	3,6	;RP1=0, select bank0
 11771     0606  00EC               	movwf	??_efgtoa
 11772     0607  01ED               	clrf	??_efgtoa+1
 11773     0608  086C               	movf	??_efgtoa,w
 11774     0609  1683               	bsf	3,5	;RP0=1, select bank1
 11775     060A  1303               	bcf	3,6	;RP1=0, select bank1
 11776     060B  00C8               	movwf	efgtoa@i^(0+128)
 11777     060C  1283               	bcf	3,5	;RP0=0, select bank0
 11778     060D  1303               	bcf	3,6	;RP1=0, select bank0
 11779     060E  086D               	movf	??_efgtoa+1,w
 11780     060F  1683               	bsf	3,5	;RP0=1, select bank1
 11781     0610  1303               	bcf	3,6	;RP1=0, select bank1
 11782     0611  00C9               	movwf	(efgtoa@i+1)^(0+128)
 11783     0612                     l3752:
 11784                           
 11785                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 11786     0612  0852               	movf	efgtoa@sign^(0+128),w
 11787     0613  1903               	btfsc	3,2
 11788     0614  2E16               	goto	u5671
 11789     0615  2E17               	goto	u5670
 11790     0616                     u5671:
 11791     0616  2E23               	goto	l3756
 11792     0617                     u5670:
 11793     0617                     l3754:
 11794                           
 11795                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 11796     0617  30FF               	movlw	255
 11797     0618  07D7               	addwf	efgtoa@n^(0+128),f
 11798     0619  1803               	skipnc
 11799     061A  0AD8               	incf	(efgtoa@n+1)^(0+128),f
 11800     061B  30FF               	movlw	255
 11801     061C  07D8               	addwf	(efgtoa@n+1)^(0+128),f
 11802     061D  0857               	movf	efgtoa@n^(0+128),w
 11803     061E  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11804     061F  0084               	movwf	4
 11805     0620  0852               	movf	efgtoa@sign^(0+128),w
 11806     0621  1783               	bsf	3,7	;select IRP bank2
 11807     0622  0080               	movwf	0
 11808     0623                     l3756:
 11809                           
 11810                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 11811     0623  0848               	movf	efgtoa@i^(0+128),w
 11812     0624  02C2               	subwf	efgtoa@w^(0+128),f
 11813     0625  0849               	movf	(efgtoa@i+1)^(0+128),w
 11814     0626  1C03               	skipc
 11815     0627  03C3               	decf	(efgtoa@w+1)^(0+128),f
 11816     0628  02C3               	subwf	(efgtoa@w+1)^(0+128),f
 11817     0629                     l3758:
 11818                           
 11819                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 11820     0629  082A               	movf	efgtoa@fp^(0+128),w
 11821     062A  1283               	bcf	3,5	;RP0=0, select bank0
 11822     062B  1303               	bcf	3,6	;RP1=0, select bank0
 11823     062C  00B5               	movwf	pad@fp
 11824     062D  1683               	bsf	3,5	;RP0=1, select bank1
 11825     062E  1303               	bcf	3,6	;RP1=0, select bank1
 11826     062F  082B               	movf	(efgtoa@fp+1)^(0+128),w
 11827     0630  1283               	bcf	3,5	;RP0=0, select bank0
 11828     0631  1303               	bcf	3,6	;RP1=0, select bank0
 11829     0632  00B6               	movwf	pad@fp+1
 11830     0633  1683               	bsf	3,5	;RP0=1, select bank1
 11831     0634  1303               	bcf	3,6	;RP1=0, select bank1
 11832     0635  0857               	movf	efgtoa@n^(0+128),w
 11833     0636  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11834     0637  1283               	bcf	3,5	;RP0=0, select bank0
 11835     0638  1303               	bcf	3,6	;RP1=0, select bank0
 11836     0639  00B7               	movwf	pad@buf
 11837     063A  1683               	bsf	3,5	;RP0=1, select bank1
 11838     063B  1303               	bcf	3,6	;RP1=0, select bank1
 11839     063C  0843               	movf	(efgtoa@w+1)^(0+128),w
 11840     063D  1283               	bcf	3,5	;RP0=0, select bank0
 11841     063E  1303               	bcf	3,6	;RP1=0, select bank0
 11842     063F  00B9               	movwf	pad@p+1
 11843     0640  1683               	bsf	3,5	;RP0=1, select bank1
 11844     0641  1303               	bcf	3,6	;RP1=0, select bank1
 11845     0642  0842               	movf	efgtoa@w^(0+128),w
 11846     0643  1283               	bcf	3,5	;RP0=0, select bank0
 11847     0644  1303               	bcf	3,6	;RP1=0, select bank0
 11848     0645  00B8               	movwf	pad@p
 11849     0646  120A  158A  200E  120A  118A  	fcall	_pad
 11850     064B                     l762:
 11851     064B  0008               	return
 11852     064C                     __end_of_efgtoa:

Data Sizes:
    Strings     175
    Constant    0
    Data        1
    BSS         101
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80     80      80
    BANK1            80     79      80
    BANK3            96     46      62
    BANK2            96      0      80

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@tempStr(BANK3[20]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@tempStr(BANK3[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK1[1]), 

    S601$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@tempStr(BANK3[20]), 

    S601$source	PTR const unsigned char  size(1) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK3[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_9(CODE[8]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@tempStr(BANK3[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_12(CODE[4]), STR_15(CODE[4]), 

    UART_Write_String@str	PTR const unsigned char  size(2) Largest target is 33
		 -> main@tempStr(BANK3[20]), STR_1(CODE[16]), STR_10(CODE[5]), STR_11(CODE[5]), 
		 -> STR_2(CODE[17]), STR_3(CODE[26]), STR_4(CODE[33]), STR_5(CODE[29]), 
		 -> STR_6(CODE[18]), STR_7(CODE[5]), STR_8(CODE[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 8
		 -> STR_9(CODE[8]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK1[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK3[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 8
		 -> STR_9(CODE[8]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_9(CODE[8]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK3[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_UART_Write_String
    i1_UART_Write_String->i1_UART_Write

Critical Paths under _main in BANK0

    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    _UART_Write_String->_UART_Write
    _Read_Temperature->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _Move_Servo->_Servo_MoveTo0
    _Move_Servo->_Servo_MoveTo180
    _Check_Temperature_Alarm->___flge
    ___flge->___flmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0   18467
                                             18 BANK3     28    28      0
                           _ADC_Init
                        _Button_Init
            _Check_Temperature_Alarm
                         _Move_Servo
                   _Read_Temperature
                         _Servo_Init
                  _Toggle_Lock_State
                          _UART_Init
                  _UART_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   14650
                                             78 BANK1      1     1      0
                                              0 BANK3     18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4   14326
                                             73 BANK1      5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4   14099
                                             61 BANK1     12     8      4
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     408
                                              6 BANK0      5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     142
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              56    49      7   12613
                                             76 BANK0      4     4      0
                                             10 BANK1     51    44      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               3     1      2     115
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    1038
                                             21 BANK0      8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     5      3     481
                                             13 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     335
                                              0 BANK0     13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               7     3      4     217
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _labs                                                 4     0      4     102
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             66 BANK0     10     6      4
                                              0 BANK1     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     137
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     232
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2067
                                             40 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    1990
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      68
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _UART_Write_String                                    2     0      2     139
                                              1 BANK0      2     0      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      47
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Toggle_Lock_State                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Servo_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_Temperature                                    12     8      4    3139
                                             66 BANK0     12     8      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     337
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    1622
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     139
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1134
                                             40 BANK0     26    18      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Move_Servo                                           1     1      0     139
                                              4 BANK0      1     1      0
                      _Servo_MoveTo0
                    _Servo_MoveTo180
 ---------------------------------------------------------------------------------
 (2) _Servo_MoveTo180                                      4     4      0      46
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Servo_MoveTo0                                        4     4      0      46
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Check_Temperature_Alarm                              0     0      0     194
                             ___flge
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     194
                                             40 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Button_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  4     4      0      76
                                              3 COMMON     4     4      0
                i1_UART_Write_String
 ---------------------------------------------------------------------------------
 (10) i1_UART_Write_String                                 2     0      2      76
                                              1 COMMON     2     0      2
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (11) i1_UART_Write                                        1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Button_Init
   _Check_Temperature_Alarm
     ___flge
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
   _Move_Servo
     _Servo_MoveTo0
     _Servo_MoveTo180
   _Read_Temperature
     ___fldiv
       ___flmul (ARG)
     ___flmul
     ___xxtofl
   _Servo_Init
   _Toggle_Lock_State
   _UART_Init
   _UART_Write_String
     _UART_Write
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 _ISR (ROOT)
   i1_UART_Write_String
     i1_UART_Write

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96     46      62     64.6%
BITBANK3            96      0       0      0.0%
BANK2               96      0      80     83.3%
BITBANK2            96      0       0      0.0%
BANK1               80     79      80    100.0%
BITBANK1            80      0       0      0.0%
BANK0               80     80      80    100.0%
BITBANK0            80      0       0      0.0%
COMMON              14      7      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     314      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Aug 14 17:36:25 2025

                   ___fldiv@aexp 0061                     ___fldiv@bexp 0060                                pc 0002  
                   ___fldiv@sign 0059                  Move_Servo@state 0024                               l81 1ABB  
                             l84 1A9C                               l93 1BF0                               l87 1AA2  
                             l96 1AAE                               l99 1E60                 _Read_Temperature 1E53  
                             fsr 0004              ___wmul@multiplicand 0022              __Umul8_16@word_mpld 0026  
                            l110 1CB3                              l102 1ED2                              l120 1A7F  
                            l112 1CE2                              l105 1C7F                              l107 1CAE  
                            l123 1A86                              l133 1C7A                              l117 1ADF  
                            l128 1ACB                              l166 1397                              l432 1D32  
                            l600 17F5                              l601 17FF                              l257 1BB0  
                            l426 1D01                              l443 118C                              l435 1107  
                            l427 1D1D                              l451 1E52                              l259 1BC8  
                            l700 1242                              l604 1B7B                              l461 1E52  
                            l438 1173                              l630 1529                              l614 143B  
                            l711 120C                              l447 080D                              l616 15AF  
                            l712 1218                              l704 11F0                              l720 1C46  
                            l553 15DC                              l562 168C                              l458 1E3D  
                            l571 17FF                              l811 1DDC                              l636 159B  
                            l660 0C01                              l564 1667                              l820 08A3  
                            l638 15A7                              l654 0C8F                              l558 160D  
                            l583 1776                              l751 084B                              l831 094D  
                            l592 17D5                              l904 1B11                              l673 10D6  
                            l666 0C85                              l762 064B                              l675 10E8  
                            l579 1752                              l747 0816                              l589 1799  
                            l854 06BD                              l838 1B57                              l855 07FE  
                            l759 0D14                              l848 1F5F                              l872 1B26  
                            l698 11B1                              l778 0086                              l699 11C2  
                            l859 07E6                              l875 1B34                              l788 03C9  
                            l869 1AF6                              l887 1FFF                              l895 1C1B  
                            l898 0003                              _GIE 005F                              _RB0 0030  
                            _RC2 003A                              _RD0 0040                              _RD1 0041  
                            _ISR 1D33                              _pad 080E                              fsr0 0004  
                            indf 0000                     ___flmul@aexp 0040                     ___flmul@bexp 0041  
                   ___flmul@sign 003B                     ___flmul@temp 0046                     ___flmul@prod 0042  
                           ?_ISR 0070                     ___fltol@exp1 0029                             l2200 15B0  
                           l2210 15BF                             l2202 15B4                             l2300 1690  
                           l2212 15C4                             l2220 15D4                             l2204 15B6  
                           l2310 16B9                             l2302 1695                             l2230 15EB  
                           l2222 15DE                             l2214 15C9                             l2206 15BA  
                           l3200 1CC0                             l2400 10C5                             l2320 16CB  
                           l2312 16BD                             l2240 1602                             l2232 15EF  
                           l2224 15E0                             l2216 15D1                             l2208 15BE  
                           l4000 138C                             l3202 1CD5                             l2402 10CC  
                           l3210 11A9                             l2330 172D                             l2322 16D4  
                           l2314 16C4                             l2306 169E                             l2250 1619  
                           l2242 1603                             l2234 15F0                             l2226 15E6  
                           l2218 15D2                             l4002 13B5                             l4010 13D7  
                           l2404 10D0                             l3220 11D7                             l3212 11B9  
                           l3204 1190                             l2340 175F                             l2332 1730  
                           l2316 16C6                             l2308 16B5                             l2324 16D7  
                           l2260 1623                             l2252 161B                             l2236 15F5  
                           l2244 1605                             l2228 15E7                             l4004 13BC  
                           l2406 10DF                             l3230 1206                             l3222 11D9  
                           l3206 1195                             l2350 177A                             l2334 1735  
                           l2326 16ED                             l2318 16CA                             l2270 162D  
                           l2262 1625                             l2254 161D                             l2246 1613  
                           l2238 15FA                             l4006 13C8                             l2600 14DC  
                           l2520 13EC                             l2408 10E4                             l3240 1239  
                           l3232 1210                             l3224 11E7                             l3216 11C5  
                           l3208 1199                             l2440 1D2F                             l2352 177E  
                           l2344 1768                             l2328 172B                             l2336 1744  
                           l2360 178B                             l2272 162F                             l2264 1627  
                           l2256 161F                             l2248 1617                             l2280 1637  
                           l2504 1E32                             l4008 13D3                             l2450 111B  
                           l2610 14F9                             l2602 14E2                             l2530 13FF  
                           l2522 13F0                             l3242 123A                             l3234 121A  
                           l3226 11F7                             l3218 11D0                             l2442 1D31  
                           l2434 1CE3                             l2370 179E                             l2362 178C  
                           l2354 1780                             l2346 1771                             l2338 175A  
                           l2290 1674                             l2282 1638                             l2274 1631  
                           l2266 1629                             l2258 1621                             l2506 1E42  
                           l2460 1189                             l2452 1123                             l3180 1C7B  
                           l2620 150E                             l2612 14FA                             l2604 14EA  
                           l2540 1415                             l2532 1407                             l2524 13F4  
                           l2516 13E6                             l2700 09A6                             l3236 1230  
                           l3228 1202                             l2436 1CF9                             l2380 17DA  
                           l2372 17A3                             l2364 1790                             l2356 1785  
                           l2348 1775                             l2292 1678                             l2284 164F  
                           l2276 1633                             l2268 162B                             l2508 1E47  
                           l2462 118B                             l2454 1127                             l2446 10E9  
                           l3190 1CA1                             l2630 1533                             l2622 1512  
                           l2614 1503                             l2606 14EC                             l2550 1428  
                           l2542 1419                             l2534 1408                             l2526 13F5  
                           l2518 13EA                             l2710 09CF                             l2702 09AB  
                           l3238 1235                             l2438 1D15                             l3502 0801  
                           l2390 17F1                             l2382 17DF                             l2374 17B1  
                           l2366 1796                             l2358 1787                             l2294 1679  
                           l2286 166B                             l2278 1635                             l3510 1B58  
                           l2456 114B                             l2448 10FF                             l3192 1CAF  
                           l2640 1571                             l2632 1541                             l2624 1526  
                           l2608 14F5                             l2616 1509                             l2560 144F  
                           l2552 1430                             l2544 141D                             l2528 13FA  
                           l2536 140A                             l2720 0A68                             l2712 09EA  
                           l3280 1E9C                             l3272 1E53                             l3504 080B  
                           l2392 17F3                             l2384 17E7                             l2376 17B5  
                           l2296 1682                             l2288 1672                             l3512 1B5C  
                           l2480 1DF1                             l3520 0819                             l3600 0DD7  
                           l2458 114F                             l3186 1C82                             l2650 159F  
                           l2642 157F                             l2634 1545                             l2618 150D  
                           l2562 1451                             l2554 1431                             l2546 141E  
                           l2538 1412                             l2730 0AC7                             l2722 0A71  
                           l2714 0A06                             l2706 09B4                             l3274 1E5D  
                           l3506 080D                             l2394 17FA                             l2386 17EC  
                           l2378 17D3                             l2298 1684                             l2490 1E13  
                           l2482 1E04                             l2474 1DDD                             l3522 0828  
                           l3530 1AFB                             l3610 0E52                             l3602 0DD9  
                           l3188 1C8C                             l2652 15A3                             l2644 158E  
                           l2636 155E                             l2628 152E                             l2580 1492  
                           l2572 1468                             l2548 1423                             l2556 1433  
                           l2740 0B5F                             l2732 0ADE                             l2724 0A7F  
                           l2716 0A30                             l2708 09C2                             l2660 094E  
                           l3276 1E64                             l2396 17FE                             l2388 17ED  
                           l2484 1E05                             l2476 1DE8                             l2820 1F10  
                           l3532 1AE0                             l3540 1B12                             l3524 0830  
                           l3516 080E                             l3700 048D                             l3620 0F99  
                           l3612 0EB2                             l3198 1CB6                             l2654 15A5  
                           l2646 1592                             l2638 1564                             l2590 14B0  
                           l2582 1494                             l2574 147A                             l2558 1443  
                           l2566 145A                             l2398 10C3                             l2750 0BCD  
                           l2742 0B85                             l2734 0AFB                             l2726 0A9C  
                           l2718 0A4C                             l2670 095D                             l2662 0952  
                           l3278 1E6C                             l2486 1E0D                             l2830 1F39  
                           l2822 1F29                             l2814 1ED3                             l3534 1AE6  
                           l3542 1B19                             l3470 1F6E                             l3526 083E  
                           l3518 0814                             l3710 04A8                             l3702 0493  
                           l3630 0079                             l3622 0F9F                             l3614 0EEB  
                           l3606 0E03                             l3550 0C93                             l2648 159A  
                           l2584 1499                             l2592 14B9                             l2576 1482  
                           l2568 145F                             l2760 0BE5                             l2752 0BD1  
                           l2744 0BAD                             l2736 0B26                             l2728 0AAA  
                           l2680 0979                             l2672 0962                             l2664 0954  
                           l2496 1E1B                             l2488 1E0F                             l2824 1F2E  
                           l2816 1EF3                             l3536 1AE7                             l3544 1B1E  
                           l3472 1F75                             l3480 1BF1                             l3528 1AF7  
                           l3720 04C3                             l3712 04AE                             l3704 0498  
                           l3640 009A                             l3632 007D                             l3616 0F4F  
                           l3608 0E13                             l3560 0CFD                             l3552 0C9B  
                           l3800 08A6                             l2594 14CB                             l2586 14AB  
                           l2578 148A                             l2770 0C06                             l2762 0BE6  
                           l2754 0BD2                             l2746 0BB6                             l2738 0B34  
                           l2690 098A                             l2682 097C                             l2674 0967  
                           l2666 0958                             l2498 1E2B                             l2834 1F5B  
                           l2818 1F0A                             l2850 064C                             l3546 1B20  
                           l3474 1F8D                             l3466 1F60                             l3482 1BF6  
                           l3730 04E2                             l3714 04B1                             l3706 049C  
                           l3722 04C9                             l3650 00B2                             l3642 00A2  
                           l3634 0082                             l3618 0F5A                             l3626 0038  
                           l3570 0D16                             l3562 0D01                             l3554 0CC2  
                           l3490 1BA6                             l3810 08D5                             l2596 14CC  
                           l2588 14AF                             l2772 0C0B                             l2780 0C3C  
                           l2764 0BEA                             l2756 0BDB                             l2748 0BC4  
                           l2692 098F                             l2684 0980                             l2676 096F  
                           l2668 095C                             l2828 1F33                             l2860 06ED  
                           l2852 067C                             l3476 1FBF                             l3468 1F68  
                           l3484 1C06                             l3740 05B5                             l3732 0554  
                           l3724 04CF                             l3716 04B7                             l3708 04A2  
                           l3660 01B8                             l3652 00BA                             l3644 00A4  
                           l3636 0090                             l3628 0073                             l3580 0D64  
                           l3572 0D39                             l3564 0D06                             l3556 0CC6  
                           l3548 0C90                             l3492 1BAA                             l3804 08A8  
                           l3900 1243                             l2598 14DA                             l2790 0C6F  
                           l2782 0C49                             l2774 0C19                             l2766 0BFE  
                           l2758 0BE1                             l2694 0997                             l2686 0984  
                           l2678 0971                             l2870 0781                             l2854 06AF  
                           l3486 1C0E                             l3750 05FD                             l3742 05C4  
                           l3734 0593                             l3726 04D6                             l3718 04BD  
                           l3670 0289                             l3662 01F7                             l3654 00C3  
                           l3646 00AA                             l3638 0096                             l3590 0DC0  
                           l3574 0D40                             l3566 0D0B                             l3558 0CF9  
                           l3494 1BB7                             l3814 08EA                             l3806 08B3  
                           l3830 0926                             l3910 125B                             l3902 1247  
                           ?_pad 0035                             l2792 0C7B                             l2784 0C54  
                           l2776 0C1D                             l2696 0999                             l2688 0985  
                           l2872 07A8                             l2864 0710                             l2856 06BC  
                           l3752 0612                             l3744 05CA                             l3736 0599  
                           l3728 04DC                             l3680 0328                             l3672 0294  
                           l3656 011F                             l3664 01FD                             l3648 00B0  
                           l3576 0D50                             l3584 0D84                             l3568 0D10  
                           l3496 1BBE                             l3488 1BA2                             l3824 0913  
                           l3816 08F2                             l3808 08C0                             l3840 1B35  
                           l3920 1269                             l3912 1260                             l3904 124C  
                           l2794 0C7F                             l2786 0C63                             l2778 0C36  
                           l2698 09A1                             l3850 1AAF                             l2874 07B3  
                           l2866 0739                             l2858 06C3                             l3754 0617  
                           l3746 05CF                             l3738 059F                             l3690 03D7  
                           l3682 0376                             l3674 02CD                             l3666 0213  
                           l3658 0146                             l3586 0DA9                             l3578 0D5C  
                           l3498 1BC4                             l3770 1DAB                             l3762 1D85  
                           l3818 08F9                             l3826 091E                             l3842 1B3A  
                           l3930 1294                             l3922 126F                             l3914 1263  
                           l3906 1251                             l3860 1AA3                             l2796 0C80  
                           l2788 0C6D                             l3836 1A9C                             l3852 1BC9  
                           l2876 07DC                             l2868 0752                             l3756 0623  
                           l3748 05F3                             l3692 03D8                             l3684 037E  
                           l3676 02D3                             l3668 0252                             l3588 0DB0  
                           l3772 1DC2                             l3764 1D89                             l3780 084C  
                           l3844 1B47                             l3940 12B0                             l3932 1296  
                           l3924 127A                             l3916 1264                             l3908 1256  
                           l3862 1ACF                             l2798 0C87                             l3870 1A80  
                           l3838 1AA0                             l3854 1BCA                             l3758 0629  
                           l3694 03DA                             l3686 03BD                             l3678 02DB  
                           l3598 0DCD                             l3766 1D98                             l3774 1DC7  
                           l3790 0877                             l3782 085D                             l3846 1B55  
                           l3950 12D6                             l3942 12B6                             l3934 1297  
                           l3926 1285                             l3918 1265                             l3880 1C47  
                           l3864 1AD4                             l3872 1ABC                             l3856 1BD8  
                           l3696 03DD                             l3688 03C3                             l3776 1DD8  
                           l3768 1D9C                             l3792 087B                             l3784 0861  
                           l3960 12F4                             l3952 12DC                             l3944 12BB  
                           l3936 129B                             l3928 1290                             l3882 1C72  
                           l3866 1ADA                             l3874 1AC3                             l3858 1BE0  
                           l3698 0463                             l3794 0890                             l3786 0865  
                           l3890 1C24                             l3970 1313                             l3962 12FB  
                           l3946 12C6                             l3954 12EA                             l3938 12A2  
                           l3868 1A79                             l3884 1C77                             l3876 1AC8  
                           l3796 0897                             l3788 0869                             l3892 1C26  
                           l3980 1341                             l3972 1330                             l3964 1301  
                           l3948 12CB                             l3956 12EB                             l3878 1AC9  
                           l3798 08A0                             l3894 1C28                             l3886 1C1C  
                           l3982 1345                             l3974 1335                             l3966 1304  
                           l3958 12F1                             l3896 1C3B                             l3888 1C20  
                           l3984 134B                             l3992 136C                             l3976 1339  
                           l3968 130A                             l3994 1372                             l3986 134F  
                           l3978 133E                             l3996 137B                             l3988 1353  
                           l3998 1380                             STR_1 108B                             STR_2 107A  
                           STR_3 104E                             STR_4 1010                             STR_5 1031  
                           STR_6 1068                             STR_7 10AD                             STR_8 10B2  
                           STR_9 109B                             u3000 179D                             u3001 179C  
                           u3010 17A3                             u3011 17A2                             u3100 10D0  
                           u3020 17B5                             u3101 10CF                             u3021 17B4  
                           u3030 17C4                             u3120 10E4                             u4000 0C1D  
                           u3200 1D2F                             u3040 17D3                             u3121 10E3  
                           u4001 0C1C                             u3201 1D2E                             u3041 17D2  
                           u3210 10FF                             u4010 0C2C                             u3050 17DA  
                           u3211 10FE                             u3115 10D7                             u3051 17D9  
                           u3035 17BF                             u3220 111B                             u4020 0C49  
                           u3060 17DF                             u3300 1DFF                             u4100 1F29  
                           u3221 111A                             u4021 0C48                             u3205 1D2B  
                           u3061 17DE                             u4101 1F28                             u3230 1127  
                           u4030 0C63                             u3070 17EC                             u3310 1E13  
                           u4110 1F39                             u3231 1126                             u4031 0C62  
                           u4015 0C27                             u3071 17EB                             u3311 1E12  
                           u4111 1F38                             u3400 13FA                             u4040 0C7F  
                           u3080 17F1                             u3320 1E1A                             u4120 1F47  
                           u4200 06D5                             u3241 1136                             u3401 13F9  
                           u4041 0C7E                             u4025 0C45                             u3081 17F0  
                           u3321 1E19                             u3305 1DFA                             u3250 114F  
                           u3242 1137                             u3410 13FF                             u3090 17FE  
                           u4130 1F53                             u4210 070F                             u3251 114E  
                           u3243 113C                             u3411 13FE                             u4035 0C5F  
                           u3091 17FD                             u4131 1F51                             u4211 070E  
                           u3244 113D                             u3500 14AF                             u3420 141D  
                           u3180 1CF9                             u2700 15FA                             u3340 1E2A  
                           u4140 1F54                             u4220 072E                             u3261 115E  
                           u3245 1142                             u3501 14AE                             u3421 141C  
                           u3181 1CF8                             u2701 15F9                             u3341 1E29  
                           u4125 1F42                             u4205 06D0                             u3270 1189  
                           u3262 115F                             u3246 1143                             u3430 1423  
                           u3190 1D15                             u2710 1613                             u3350 1E31  
                           u4070 1F01                             u4230 0739                             u3271 1188  
                           u3263 1164                             u3431 1422                             u3191 1D14  
                           u2711 1612                             u3351 1E30                             u3335 1E1C  
                           u4231 0738                             u3264 1165                             u3600 1526  
                           u3520 14CB                             u3440 1428                             u2800 1690  
                           u2720 1617                             u2640 15BE                             u4080 1F10  
                           u5200 1FBF                             u3265 116A                             u3601 1525  
                           u3521 14CA                             u3441 1427                             u2801 168F  
                           u2721 1616                             u2641 15BD                             u4081 1F0F  
                           u4241 0744                             u4225 0729                             u5201 1FBE  
                           u3266 116B                             u3610 152D                             u3530 14E2  
                           u3450 1443                             u2810 1695                             u2730 164F  
                           u2650 15C4                             u3370 1E42                             u3290 1DE8  
                           u4090 1F1E                             u4250 079D                             u4242 074B  
                           u4170 0698                             u5210 1FE2                             u3275 1185  
                           u3611 152C                             u3531 14E1                             u3515 14B2  
                           u3451 1442                             u2811 1694                             u2731 164E  
                           u2651 15C3                             u3371 1E41                             u3291 1DE7  
                           u4075 1EFC                             u4243 0752                             u3620 1533  
                           u3540 14EA                             u3460 145F                             u3700 0967  
                           u2900 1735                             u2740 165A                             u2660 15C9  
                           u3380 1E47                             u4260 07A8                             u4180 06BC  
                           u5220 1C1B                             u5300 1B11                             u3621 1532  
                           u3541 14E9                             u3525 14C7                             u3461 145E  
                           u3701 0966                             u2901 1734                             u2821 16A7  
                           u2741 1658                             u2661 15C8                             u3381 1E46  
                           u3365 1E34                             u4261 07A7                             u4181 06BB  
                           u5205 1FBB                             u5221 1C1A                             u5301 1B10  
                           u3630 1545                             u3470 1499                             u3390 13F4  
                           u3710 0984                             u2910 175A                             u2830 16B9  
                           u2822 16AE                             u2750 165B                             u2670 15E6  
                           u4270 07D1                             u4190 06C3                             u5310 1AE6  
                           u5230 1BAA                             u6007 1CBC                             u3631 1544  
                           u3471 1498                             u3391 13F3                             u3711 0983  
                           u2911 1759                             u2831 16B8                             u2823 16B5  
                           u2735 164B                             u2671 15E5                             u4095 1F19  
                           u4255 0798                             u4191 06C2                             u4175 0693  
                           u5311 1AE5                             u5231 1BA9                             u3640 1554  
                           u3560 14F9                             u3720 098A                             u2920 175F  
                           u2840 16BD                             u2760 166B                             u2680 15EF  
                           u4280 07DC                             u5320 1B34                             u5400 0E02  
                           u6017 1CC9                             u3561 14F8                             u3721 0989  
                           u2921 175E                             u2841 16BC                             u2761 166A  
                           u2681 15EE                             u4281 07DB                             u4185 06B8  
                           u5321 1B33                             u5401 0DFF                             u3650 1571  
                           u3730 098F                             u2850 16CA                             u2770 1678  
                           u2690 15F5                             u5170 1F68                             u5330 0CC2  
                           u6027 1C88                             u3651 1570                             u3555 14EE  
                           u3811 0A8E                             u3731 098E                             u2851 16C9  
                           u2771 1677                             u2691 15F4                             u4275 07CC  
                           u5171 1F67                             u5411 0E75                             u5331 0CC1  
                           _PEIE 005E                             u3660 158E                             u3580 150D  
                           u3812 0A95                             u3740 09A6                             u2940 1775  
                           u5180 1F6E                             u5500 0096                             u5420 0EB2  
                           u5412 0E78                             u5340 0D06                             u5260 1BC4  
                           u6037 1C95                             u3661 158D                             u3645 154F  
                           u3581 150C                             u3485 149B                             u3901 0B9F  
                           u3821 0AB9                             u3813 0A9C                             u3805 0A6A  
                           u3741 09A5                             u2941 1774                             u5181 1F6D  
                           u5501 0095                             u5421 0EB1                             u5413 0E7F  
                           u5341 0D05                             u5261 1BC3                             u5245 1BB1  
                           _INTE 005C                             u4710 1CAE                             u3670 15A3  
                           u3590 1512                             u3902 0BA6                             u3822 0AC0  
                           u3750 09AB                             u5270 080B                             u2950 177A  
                           u2870 16ED                             u2790 168C                             u5190 1F8D  
                           u5510 009A                             u5430 0EEB                             u5414 0E82  
                           u5350 0D0B                             _INTF 0059                             u4711 1CAD  
                           u3671 15A2                             u3655 156D                             u3591 1511  
                           u3575 14FC                             u3495 14A4                             u3903 0BAD  
                           u3823 0AC7                             u3751 09AA                             u5271 080A  
                           u2951 1779                             u2935 176A                             u2871 16EC  
                           u2791 168B                             u5191 1F8C                             u5511 0099  
                           u5431 0EEA                             u5423 0EAE                             u5415 0E89  
                           u5351 0D0A                             u5255 1BB8                             u4720 1CE2  
                           u3680 095C                             u2960 1785                             u5280 0814  
                           u5600 0498                             u5520 00AA                             u5416 0E8C  
                           u5360 0D39                             u4721 1CE1                             u3665 158A  
                           u3841 0AED                             u3761 09F8                             u3681 095B  
                           u2961 1784                             u2881 1704                             u2873 16E9  
                           u2865 16CD                             u2785 167B                             u5281 0813  
                           u5601 0497                             u5521 00A9                             u5441 0F10  
                           u5361 0D38                             u3930 0BD1                             u3842 0AF4  
                           u3762 09FF                             u3690 0962                             u4810 1206  
                           u4730 1195                             u2970 178B                             u2890 1718  
                           u2882 1705                             u5290 083E                             u5610 049C  
                           u5530 0213                             u5450 0F4F                             u5442 0F13  
                           u5370 0D40                             u4715 1CAA                             u3931 0BD0  
                           u3915 0BAF                             u3851 0B18                             u3843 0AFB  
                           u3835 0AC9                             u3771 0A14                             u3763 0A06  
                           u3691 0961                             u4811 1205                             u4731 1194  
                           u2971 178A                             u2891 1719                             u2883 170A  
                           u5291 083D                             u5611 049B                             u5531 0212  
                           u5451 0F4C                             u5443 0F1A                             u5371 0D3F  
                           _RCIE 0465                             u3852 0B1F                             u3772 0A1B  
                           u4820 120C                             u4740 1199                             u4900 1E64  
                           u2980 1790                             u2892 171E                             u2884 170B  
                           u5620 04CF                             u5540 0289                             u5444 0F1D  
                           u5380 0DA9                             u5700 085D                             _RCIF 0065  
                           u4725 1CDE                             u3925 0BC6                             u3861 0B43  
                           u3853 0B26                             u3781 0A3E                             u3773 0A22  
                           u4821 120B                             u4805 11FB                             u4741 1198  
                           u4901 1E63                             u2981 178F                             u2893 171F  
                           u2885 1710                             u5621 04CE                             u5541 0288  
                           u5461 0FC2                             u5453 0F49                             u5445 0F24  
                           u5381 0DA8                             u5701 085C                             u3950 0BE5  
                           u3870 0B6B                             u3862 0B4A                             u3782 0A45  
                           u4830 1210                             u4750 11B9                             u2990 1796  
                           u2886 1711                             u5630 05B5                             u5550 02CD  
                           u5470 0FFF                             u5462 0FC5                             u5446 0F27  
                           u5390 0DB0                             u5710 0877                             u3951 0BE4  
                           u3863 0B51                             u3791 0A5A                             u3783 0A4C  
                           u4831 120F                             u4751 11B8                             u2991 1795  
                           u5295 083A                             u5631 05B4                             u5551 02CC  
                           u5535 020F                             u5471 0FFE                             u5463 0FCC  
                           u5391 0DAF                             u5711 0876                             u3960 0BEA  
                           u3792 0A61                             u4840 1225                             u5640 05C4  
                           u5560 02D3                             u5480 0073                             u5464 0FCF  
                           u5720 08BF                             u5800 12A2                             u3961 0BE9  
                           u3945 0BD4                             u3881 0B77                             u3793 0A68  
                           u5641 05C3                             u5561 02D2                             u5481 0070  
                           u5473 0FFB                             u5465 0FD6                             u5721 08BE  
                           u5801 12A1                             u3970 0BFE                             u3890 0B93  
                           u3882 0B7E                             u4850 1235                             u4770 11D6  
                           u5730 1AA0                             u5650 0603                             u5570 0376  
                           u5490 007D                             u5466 0FD9                             u5810 12B6  
                           u3971 0BFD                             u3883 0B85                             u3875 0B66  
                           u4851 1234                             u4771 11D5                             u5731 1A9F  
                           u5651 0601                             u5635 05B1                             u5571 0375  
                           u5491 007C                             u5811 12B5                             i1l84 1A90  
                           u3980 0C05                             u4860 1239                             u5660 0604  
                           u5580 03C3                             u5740 1B55                             u5900 1368  
                           u5820 12DC                             i1l93 1BA1                             u3981 0C04  
                           u4861 1238                             u4845 1220                             u4765 11C8  
                           u5645 05C0                             u5581 03C2                             u5741 1B54  
                           u5901 1364                             u5821 12DB                             u3990 0C0B  
                           u4790 11F6                             u5750 1BF0                             u5670 0617  
                           u5590 0463                             u5830 12F1                             i1l87 1A98  
                           u3991 0C0A                             u3895 0B8E                             u4791 11F5  
                           u5751 1BEF                             u5671 0616                             u5591 0462  
                           u5831 12F0                             u5760 1AD4                             u5680 1D98  
                           u5920 137B                             u5840 12FB                             u5761 1AD3  
                           u4785 11E8                             u5681 1D97                             u5921 137A  
                           u5841 12FA                             u5770 1AC3                             u5690 1DD8  
                           u5930 1380                             u5914 136B                             u5850 1313  
                           u5771 1AC2                             u5595 045F                             u5691 1DD7  
                           u5931 137F                             u5851 1312                             u5780 1C72  
                           u5940 13BC                             u5860 133E                             u5781 1C71  
                           u5941 13BB                             u5861 133D                             u5870 134B  
                           u5790 129B                             u5871 134A                             u5791 129A  
                           u5880 135B                             u5881 1357                             u5957 12AA  
                           u5894 135E                             u5967 12D1                             u5977 12E4  
                           u5987 13DD                             u5997 1E59                             _TXIF 0064  
               ?_Servo_MoveTo180 0070                             _dbuf 0110                             _labs 1AE0  
                           _main 1243                             _prec 0079                      main@tempStr 01A5  
                           pad@i 003B                             pad@p 0038                             btemp 007E  
               __end_of_ADC_Init 1AAF                    ___fpclassifyf 1ED3                             start 0010  
                ___fldiv@new_exp 005A         ?_Check_Temperature_Alarm 0070                            ??_ISR 0073  
                          ??_pad 003A                    ??_Button_Init 0020                    ___fltol@sign1 0028  
                          ?_labs 0020                  __end_of___fladd 1800                            ?_main 0070  
                __end_of___fldiv 15B0                  __end_of___flneg 080E                            STR_10 10A8  
                          STR_11 10A3                            STR_12 10B7                            STR_15 10BB  
                __end_of___flmul 0C90                  __end_of___flsub 1B7C                  __end_of___fltol 1E53  
                          i1l141 1D47                            i1l147 1D7A                            _RCREG 001A  
                          _RCSTA 0018                     vfpfcnvrt@fmt 00DF                            _SPBRG 0099  
                          _PORTB 0006                            _PORTD 0008                            _TRISB 0086  
                          _TRISD 0088                            _TXREG 0019                            _TXSTA 0098  
                    ?_UART_Write 0070                            _flags 00EF              read_prec_or_width@c 0028  
            read_prec_or_width@n 0029                            _fputc 1F60                            _fputs 1BF1  
                          labs@a 0020                            pad@fp 0035                            _width 0077  
                          _putch 0003                            pclath 000A               main@button_pressed 01BD  
                          status 0003                            wtemp0 007E                  __end_of_sprintf 1C47  
                 ?___fpclassifyf 0020                  __initialization 0013                     __end_of_labs 1AF7  
                   __end_of_main 13E6                           ??_labs 0024                           ??_main 01A2  
     __end_of_read_prec_or_width 1DDD              __end_of_Button_Init 1A80                           _ADCON0 001F  
                         _ADCON1 009F                           ?_fputc 0020                           ?_fputs 002D  
                         _ADRESH 001E                           _ADRESL 009E                           ?_putch 0070  
                         i1l3322 1B7C                           i1l3330 1D33                           i1l3324 1B7D  
                         i1l3340 1D57                           i1l3332 1D39                           i1l3326 1B8B  
                         i1l3342 1D5D                           i1l3334 1D3B                           i1l3350 1D71  
                         i1l3256 1A90                           i1l3328 1B91                           i1l3352 1D75  
                         i1l3344 1D63                           i1l3336 1D41                           i1l3258 1A96  
                         i1l3346 1D66                           i1l3338 1D4D                           i1l3348 1D68  
                         u500_20 1D75                           u500_21 1D74  __end_of_Check_Temperature_Alarm 1C7B  
                         u494_20 1BA1                           u494_21 1BA0                           u495_20 1D39  
                         u495_21 1D38                           u488_20 1A96                           u496_20 1D41  
                         u488_21 1A95                           u496_21 1D40                           u497_20 1D47  
                         u497_21 1D46                           u498_20 1D5D                           u498_21 1D5C  
                         u499_20 1D63                           u499_21 1D62                           _TRISA0 0428  
                         _TRISB0 0430                           _TRISC2 043A                           _TRISC6 043E  
                         _TRISC7 043F                       _Move_Servo 1ACC                 __end_of___xxtofl 1243  
            i1_UART_Write_String 1B7C                     vfprintf@cfmt 00ED                __end_of_UART_Init 1ABC  
                         ___flge 10E9                           ___fleq 1CE3                        ??___fladd 0028  
                         ___wmul 1BA2                        ??___fldiv 0050                        ??___flneg 0024  
                      ??___flmul 0036                        ??___flsub 0050                        ??___fltol 0024  
                         _efgtoa 0C90                       _Servo_Init 1A80                           _floorf 064C  
                         _memcpy 1B12             read_prec_or_width@ap 0027                           pad@buf 0037  
                         _strcpy 1AF7             ?i1_UART_Write_String 0071                           fputc@c 0020  
                         fputs@c 0032                           fputs@i 0033                           fputs@s 002D  
                ___fpclassifyf@e 002A            __end_of_Servo_MoveTo0 1CAF                        ?_ADC_Init 0070  
                ___fpclassifyf@u 002C                  ___fpclassifyf@x 0020                           saved_w 007E  
                         putch@c 0070                 __end_of_vfprintf 1B58                        ??_sprintf 00EE  
                     ___flge@ff1 0048                       ___flge@ff2 004C                  ??___fpclassifyf 0024  
                   ___xxtofl@arg 002A         __end_of_Read_Temperature 1ED3                     ___xxtofl@exp 0029  
                   ___xxtofl@val 0020                       ___fleq@ff1 0020                       ___fleq@ff2 0024  
        __end_of__initialization 0034                       ___flneg@f1 0020                       ___fltol@f1 0020  
                  ?i1_UART_Write 0070                   __pcstackCOMMON 0070                     __pidataBANK3 07FF  
                  __end_of_fputc 2000                    __end_of_fputs 1C1C                    __end_of_putch 0004  
                    _Button_Init 1A79            ??i1_UART_Write_String 0073                   _OPTION_REGbits 0081  
                     ??_ADC_Init 0020                          ??_fputc 0024                          ??_fputs 0030  
                        ??_putch 0020                       __pbssBANK1 00EF                       __pbssBANK2 0110  
                     __pbssBANK3 01BE                   main@bt_counter 01BB                      ?_Move_Servo 0070  
              __end_of__Umul8_16 10E9                   ??i1_UART_Write 0070                       _efgtoa$726 00B7  
                     __pmaintext 1243                          ?___flge 0048                          ?___fleq 0020  
                 Servo_MoveTo0@i 0022                          ?___wmul 0020                       __pintentry 0004  
                        ?_efgtoa 00AA                      ?_Servo_Init 0070                          ?_floorf 0062  
                        ?_memcpy 0020                 Servo_MoveTo180@i 0022                          ?_strcpy 0020  
                      ?___xxtofl 0020                     ??_UART_Write 0020                       __stringtab 1000  
                        ___fladd 15B0                          ___fldiv 13E6                          ___flneg 0801  
                        ___flmul 094E                          ___flsub 1B58                          ___fltol 1DDD  
          _Read_Temperature$1034 0068               __end_of_UART_Write 1AA3                        ?_vfprintf 00E9  
                        __ptext1 1C1C                          __ptext2 1B35                          __ptext3 084C  
                        __ptext4 1D85                          __ptext5 1BA2                          __ptext6 0C90  
                        __ptext7 1AF7                          __ptext8 080E                          __ptext9 1BF1  
          read_prec_or_width@fmt 0026                       ??___xxtofl 0024                          efgtoa@c 00B0  
                        efgtoa@d 00BC                          efgtoa@e 00C0                          efgtoa@f 00AC  
                        efgtoa@g 00D3                          efgtoa@h 00CA                          efgtoa@i 00C8  
                        efgtoa@l 00CE                          efgtoa@m 00BE                          efgtoa@n 00D7  
                        efgtoa@p 00B3                          efgtoa@t 00B5                          efgtoa@u 00D9  
                        efgtoa@w 00C2                          _sprintf 1C1C                          clrloop0 1A88  
           end_of_initialization 0034                          floorf@e 00A4                          floorf@m 00A0  
                        floorf@u 00A6                          floorf@x 0062                          memcpy@d 0025  
                        memcpy@n 0022                          memcpy@s 0026                          fputc@fp 0022  
                        fputs@fp 002E               _read_prec_or_width 1D85                __end_of_vfpfcnvrt 094E  
                     efgtoa@mode 00BA                       efgtoa@sign 00D2              ?_read_prec_or_width 0026  
                        psplit$0 15003A                 vfpfcnvrt@convarg 00E3                       ??_vfprintf 0070  
                        strcpy@d 0022                        _UART_Init 1AAF                   UART_Write@data 0020  
                    ___fladd@grs 0033                    ___xxtofl@sign 0028             __end_ofi1_UART_Write 1A99  
           ??_read_prec_or_width 0028                      ___fldiv@grs 005C                      ___fldiv@rem 0055  
                    ___flmul@grs 003C                ?_Read_Temperature 0062               ??_Read_Temperature 0066  
                 __end_of___flge 118D                   __end_of___fleq 1D33                      vfpfcnvrt@ap 00E0  
                    vfpfcnvrt@cp 00E8                      vfpfcnvrt@fp 00DD                   __end_of___wmul 1BC9  
                     ?_UART_Init 0070                   __end_of_efgtoa 064C                     ?_Button_Init 0070  
        _Check_Temperature_Alarm 1C47                   __end_of_floorf 07FF                   __end_of_memcpy 1B35  
              ??_Servo_MoveTo180 0020                       floorf@F521 01BE                   __end_of_strcpy 1B12  
            start_initialization 0013                      __end_of_ISR 1D85                      __end_of_pad 084C  
              pnum$text6_split_1 003A                     ??_Move_Servo 0024            __end_of___fpclassifyf 1F60  
                    vfprintf@fmt 00EB                         ??___flge 0050                         ??___fleq 0028  
    __end_ofi1_UART_Write_String 1BA2                         ??___wmul 0024                         ??_efgtoa 006C  
                      __Umul8_16 10C0                     ??_Servo_Init 0020                      __pdataBANK3 01CD  
                       ??_floorf 0066                         ??_memcpy 0024                         ??_strcpy 0022  
             _servo_needs_update 01CD                        ___fladd@a 0024                        ___fladd@b 0020  
                      ___fldiv@a 0048                        ___fldiv@b 004C               __end_of_Move_Servo 1AE0  
                      ___flmul@a 0032                        ___flmul@b 002E                      __pbssCOMMON 0077  
                      ___flsub@a 0048                        ___flsub@b 004C                        ___latbits 0002  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0                    __pcstackBANK3 0190  
             __end_of_Servo_Init 1A87                     _currentState 01CC                         ?___fladd 0020  
                       ?___fldiv 0048                         ?___flneg 0020                         ?___flmul 002E  
      ??_Check_Temperature_Alarm 0054                         ?___flsub 0048                         ?___fltol 0020  
                     ?__Umul8_16 0020                        _fireAlarm 01CB                      ??_UART_Init 0020  
         i1UART_Write_String@str 0071                        __pstrings 1000                _Toggle_Lock_State 1ABC  
                       _ADC_Init 1AA3               ?_Toggle_Lock_State 0070                    _Servo_MoveTo0 1C7B  
                       ?_sprintf 0190              ??_Toggle_Lock_State 0020                interrupt_function 0004  
                 ___wmul@product 0024                        clear_ram0 1A87                         _GO_nDONE 00FA  
                   i1_UART_Write 1A8F                        _vfpfcnvrt 084C        __end_of_Toggle_Lock_State 1ACC  
                    __stringbase 100F             UART_Write_String@str 0021                ___wmul@multiplier 0020  
               main@temp_counter 01B9                   ?_Servo_MoveTo0 0070                       vfpfcnvrt@c 00E7  
               i1UART_Write@data 0070                  _Servo_MoveTo180 1CAF                        memcpy@tmp 0024  
                     vfprintf@ap 00EC                       vfprintf@fp 00E9                      ??__Umul8_16 0022  
                     ?_vfpfcnvrt 00DD               __end_of__stringtab 1010               ___fpclassifyf@F465 01C2  
              _UART_Write_String 1BC9                       sprintf@fmt 0191                         ___xxtofl 118D  
             ?_UART_Write_String 0021                         __ptext10 1F60                         __ptext11 0003  
                       __ptext20 1CE3                         __ptext12 1B12                         __ptext21 1BC9  
                       __ptext13 1AE0                         __ptext30 13E6                         __ptext22 1A99  
                       __ptext14 064C                         __ptext31 1ACC                         __ptext23 1AAF  
                       __ptext15 1ED3                         __ptext40 1A8F                         __ptext32 1CAF  
                       __ptext24 1ABC                         __ptext16 1DDD                         __ptext33 1C7B  
                       __ptext25 1A80                         __ptext17 1B58                         __ptext34 1C47  
                       __ptext26 1E53                         __ptext18 15B0                         __ptext35 10E9  
                       __ptext27 118D                         __ptext19 0801                         __ptext36 1A79  
                       __ptext28 094E                         __ptext37 1AA3                         __ptext29 10C0  
                       __ptext38 1D33                         __ptext39 1B7C                       strcpy@dest 0020  
            ??_UART_Write_String 0023                        pnum$text6 0015                         efgtoa@fp 00AA  
                       efgtoa@ne 00B1                         efgtoa@pp 00B9                         efgtoa@ou 00C4  
                       _vfprintf 1B35        __end_of_UART_Write_String 1BF1                  ??_Servo_MoveTo0 0020  
                       memcpy@d1 0020                         memcpy@s1 0021                         intlevel1 0000  
                      sprintf@ap 0196          __end_of_Servo_MoveTo180 1CE3                        strcpy@src 0021  
                      stringcode 100A                      efgtoa@nmode 00BB                    _bluetoothData 007B  
                    ??_vfpfcnvrt 00E1           __Umul8_16@multiplicand 0020                      _temperature 01C6  
                       sprintf@f 0197                         sprintf@s 0190                         stringdir 100A  
                       stringtab 1000                       _UART_Write 1A99         Read_Temperature@adcValue 006C  
                  ___fladd@signs 0030                     ___fladd@aexp 0031                     ___fladd@bexp 0032  
           __Umul8_16@multiplier 0028                  _ledBlinkCounter 01CA                __Umul8_16@product 0024  
