%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta> <reloc>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$build\prueba.o
cinit CODE 0 7FB 7FB 5 2 1
text1 CODE 0 76A 76A 1C 2 1
text2 CODE 0 7AC 7AC 26 2 1
text3 CODE 0 786 786 26 2 1
maintext CODE 0 7D2 7D2 29 2 1
cstackCOMMON COMMON 1 70 70 5 1 1
bssCOMMON COMMON 1 75 75 1 1 1
config CONFIG 4 2007 2007 1 2 1
$build\startup.o
end_init CODE 0 0 0 3 2 1
config CONFIG 4 2007 2007 1 2 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 20-6F 1
RAM A0-EF 1
RAM 110-16F 1
RAM 190-1EF 1
BANK0 20-6F 1
BANK1 A0-EF 1
BANK2 110-16F 1
BANK3 190-1EF 1
CONST 3-769 2
CONST 800-1FFF 2
ENTRY 3-769 2
ENTRY 800-1FFF 2
IDLOC 2000-2003 2
CODE 3-769 2
CODE 800-1FFF 2
SFR0 0-1F 1
SFR1 80-9F 1
SFR2 100-10F 1
SFR3 180-18F 1
COMMON 76-7D 1
EEDATA 2100-21FF 2
STRCODE 3-769 2
STRCODE 800-1FFF 2
STRING 3-769 2
STRING 800-1FFF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$build\prueba.o
7FB cinit CODE >368:G:\My Drive\Documents\Embebidos\Proyecto\build\prueba.s
7FB cinit CODE >371:G:\My Drive\Documents\Embebidos\Proyecto\build\prueba.s
7FB cinit CODE >382:G:\My Drive\Documents\Embebidos\Proyecto\build\prueba.s
7FC cinit CODE >388:G:\My Drive\Documents\Embebidos\Proyecto\build\prueba.s
7FC cinit CODE >390:G:\My Drive\Documents\Embebidos\Proyecto\build\prueba.s
7FD cinit CODE >391:G:\My Drive\Documents\Embebidos\Proyecto\build\prueba.s
786 text3 CODE >25:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
786 text3 CODE >26:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
789 text3 CODE >27:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
792 text3 CODE >28:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
795 text3 CODE >29:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
79E text3 CODE >30:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7AB text3 CODE >31:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7AC text2 CODE >34:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7AC text2 CODE >35:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7AF text2 CODE >36:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7B8 text2 CODE >37:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7BB text2 CODE >38:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7C4 text2 CODE >39:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7D1 text2 CODE >40:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
76A text1 CODE >43:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
76A text1 CODE >44:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
76F text1 CODE >45:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
771 text1 CODE >46:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
774 text1 CODE >47:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
775 text1 CODE >48:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
77A text1 CODE >49:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
77B text1 CODE >50:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
77C text1 CODE >51:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
77F text1 CODE >52:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
780 text1 CODE >53:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
785 text1 CODE >55:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7D2 maintext CODE >59:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7D2 maintext CODE >61:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7D5 maintext CODE >62:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7D6 maintext CODE >63:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7D7 maintext CODE >64:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7D8 maintext CODE >66:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7DB maintext CODE >67:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7DC maintext CODE >68:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7DD maintext CODE >70:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7DD maintext CODE >71:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7E3 maintext CODE >72:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7E8 maintext CODE >73:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
7EE maintext CODE >74:G:\My Drive\Documents\Embebidos\Proyecto/src/prueba.c
$build\startup.o
0 end_init CODE >85:G:\My Drive\Documents\Embebidos\Proyecto\build\startup.s
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___latbits 2 0 ABS 0 - build\prueba.o
__Hspace_0 800 0 ABS 0 - -
__Hspace_1 76 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Hspace_4 400F 0 ABS 0 - -
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
__L__absolute__ 0 0 ABS 0 __absolute__ -
__Hstrings 0 0 ABS 0 strings -
___sp 0 0 STACK 2 stack build\startup.o
_main FA4 0 CODE 0 maintext build\prueba.o
btemp 7E 0 ABS 0 - build\prueba.o
___stack_hi 0 0 STACK 2 stack build\startup.o
___stack_lo 0 0 STACK 2 stack build\startup.o
start 0 0 CODE 0 init build\startup.o
__HbssCOMMON 0 0 ABS 0 bssCOMMON -
__Hpowerup 0 0 CODE 0 powerup -
intlevel0 0 0 ENTRY 0 functab build\startup.o
intlevel1 0 0 ENTRY 0 functab build\startup.o
intlevel2 0 0 ENTRY 0 functab build\startup.o
intlevel3 0 0 ENTRY 0 functab build\startup.o
intlevel4 0 0 ENTRY 0 functab build\startup.o
intlevel5 0 0 ENTRY 0 functab build\startup.o
__LbssCOMMON 0 0 ABS 0 bssCOMMON -
wtemp0 7E 0 ABS 0 - build\prueba.o
__Hfunctab 0 0 ENTRY 0 functab -
_Toggle_Lock_State ED4 0 CODE 0 text1 build\prueba.o
__Hclrtext 0 0 ABS 0 clrtext -
__Lmaintext 0 0 ABS 0 maintext -
___stackhi 0 0 ABS 0 - build\startup.o
___stacklo 0 0 ABS 0 - build\startup.o
start_initialization FF6 0 CODE 0 cinit build\prueba.o
_TRISB0 430 0 ABS 0 - build\prueba.o
_TRISC2 43A 0 ABS 0 - build\prueba.o
_TRISD0 440 0 ABS 0 - build\prueba.o
_TRISD1 441 0 ABS 0 - build\prueba.o
___int_sp 0 0 STACK 2 stack build\startup.o
__Hbank0 0 0 ABS 0 bank0 -
__Hbank1 0 0 ABS 0 bank1 -
__Hbank2 0 0 ABS 0 bank2 -
__Hbank3 0 0 ABS 0 bank3 -
__Hcinit 1000 0 CODE 0 cinit -
__Hstack 0 0 STACK 2 stack -
__Hmaintext 0 0 ABS 0 maintext -
__Hcommon 0 0 ABS 0 common -
__Hconfig 4010 0 CONFIG 4 config -
__Lbank0 0 0 ABS 0 bank0 -
__Lbank1 0 0 ABS 0 bank1 -
__Lbank2 0 0 ABS 0 bank2 -
__Lbank3 0 0 ABS 0 bank3 -
__Lcinit FF6 0 CODE 0 cinit -
__Lstack 0 0 STACK 2 stack -
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hheap 0 0 HEAP 7 heap -
__Hinit 0 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Hsfr1 0 0 ABS 0 sfr1 -
__Hsfr2 0 0 ABS 0 sfr2 -
__Hsfr3 0 0 ABS 0 sfr3 -
__Hsivt 0 0 CODE 0 sivt -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Lheap 0 0 HEAP 7 heap -
__Linit 0 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Lsfr1 0 0 ABS 0 sfr1 -
__Lsfr2 0 0 ABS 0 sfr2 -
__Lsfr3 0 0 ABS 0 sfr3 -
__Lsivt 0 0 CODE 0 sivt -
__Ltext 0 0 ABS 0 text -
__HcstackCOMMON 0 0 ABS 0 cstackCOMMON -
_RB0 30 0 ABS 0 - build\prueba.o
_RC2 3A 0 ABS 0 - build\prueba.o
_RD0 40 0 ABS 0 - build\prueba.o
_RD1 41 0 ABS 0 - build\prueba.o
__S0 800 0 ABS 0 - -
__S1 76 0 ABS 0 - -
__S3 0 0 ABS 0 - -
__Lintentry 0 0 CODE 0 intentry -
reset_vec 0 0 CODE 0 reset_vec build\startup.o
__end_of_Servo_MoveTo180 FA4 0 CODE 0 text2 build\prueba.o
__pmaintext FA4 0 CODE 0 maintext build\prueba.o
__Lcommon 0 0 ABS 0 common -
__Lconfig 0 0 CONFIG 4 config -
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__Lspace_4 0 0 ABS 0 - -
__pbssCOMMON 75 0 COMMON 1 bssCOMMON build\prueba.o
_Servo_MoveTo0 F0C 0 CODE 0 text3 build\prueba.o
__Lend_init 0 0 CODE 0 end_init -
__LcstackCOMMON 0 0 ABS 0 cstackCOMMON -
_Servo_MoveTo180 F58 0 CODE 0 text2 build\prueba.o
end_of_initialization FF8 0 CODE 0 cinit build\prueba.o
__Hintentry 0 0 CODE 0 intentry -
__Lstrings 0 0 ABS 0 strings -
__Hreset_vec 0 0 CODE 0 reset_vec -
__ptext1 ED4 0 CODE 0 text1 build\prueba.o
__ptext2 F58 0 CODE 0 text2 build\prueba.o
__ptext3 F0C 0 CODE 0 text3 build\prueba.o
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
_currentState 75 0 COMMON 1 bssCOMMON build\prueba.o
__H__absolute__ 0 0 ABS 0 __absolute__ -
__Lreset_vec 0 0 CODE 0 reset_vec -
___heap_hi 0 0 ABS 0 - build\startup.o
___heap_lo 0 0 ABS 0 - build\startup.o
__end_of__initialization FF8 0 CODE 0 cinit build\prueba.o
__Lfunctab 0 0 ENTRY 0 functab -
__Lclrtext 0 0 ABS 0 clrtext -
__pcstackCOMMON 70 0 COMMON 1 cstackCOMMON build\prueba.o
__Hend_init 6 0 CODE 0 end_init -
__end_of_main FF6 0 CODE 0 maintext build\prueba.o
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
__initialization FF6 0 CODE 0 cinit build\prueba.o
__end_of_Toggle_Lock_State F0C 0 CODE 0 text1 build\prueba.o
__end_of_Servo_MoveTo0 F58 0 CODE 0 text3 build\prueba.o
___int_stack_hi 0 0 STACK 2 stack build\startup.o
___int_stack_lo 0 0 STACK 2 stack build\startup.o
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 7E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cinit 0 7FB FF6 5 2
text1 0 76A ED4 1C 2
text2 0 7AC F58 26 2
text3 0 786 F0C 26 2
maintext 0 7D2 FA4 29 2
cstackCOMMON 1 70 70 6 1
reset_vec 0 0 0 3 2
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
